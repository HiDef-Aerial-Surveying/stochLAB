[{"path":"https://hidef-aerial-surveying.github.io/stochLAB/CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (http:contributor-covenant.org), version 1.0.0, available http://contributor-covenant.org/version/1/0/0/","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to stochLAB","title":"Contributing to stochLAB","text":"Thanks considering contributing stochLAB! resources tool used assessing impacts offshore turbines marine birds order help balance trade-offs conservation climate change mitigation.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of conduct","title":"Contributing to stochLAB","text":"Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/CONTRIBUTING.html","id":"how-you-can-contribute","dir":"","previous_headings":"","what":"How you can contribute","title":"Contributing to stochLAB","text":"several ways can contribute project. want know contribute open source projects like one, see Open Source Guide.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/CONTRIBUTING.html","id":"share-the-love","dir":"","previous_headings":"How you can contribute","what":"Share the love","title":"Contributing to stochLAB","text":"Think stochLAB useful? Let others discover , telling person, via Twitter blog post. Using stochLAB paper writing? Consider citing .","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/CONTRIBUTING.html","id":"ask-a-question-Ô∏è","dir":"","previous_headings":"How you can contribute","what":"Ask a question ‚ÅâÔ∏è","title":"Contributing to stochLAB","text":"Using our_package got stuck? Browse documentation see can find solution. Still stuck? Post question issue GitHub. offer user support, ‚Äôll try best address , questions often lead better documentation discovery bugs. Want ask question private? Contact package maintainer [email][mailto:email].","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/CONTRIBUTING.html","id":"propose-an-idea","dir":"","previous_headings":"How you can contribute","what":"Propose an idea","title":"Contributing to stochLAB","text":"idea new our_package feature? Take look documentation issue list see isn‚Äôt included suggested yet. , suggest idea issue GitHub. can‚Äôt promise implement idea, helps : Explain detail work. Keep scope narrow possible. See want contribute code idea well.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/CONTRIBUTING.html","id":"report-a-bug","dir":"","previous_headings":"How you can contribute","what":"Report a bug","title":"Contributing to stochLAB","text":"Using our_package discovered bug? ‚Äôs annoying! Don‚Äôt let others experience report issue GitHub can fix . good bug report makes easier us , please include: operating system name version (e.g.¬†Mac OS 10.13.6). details local setup might helpful troubleshooting. Detailed steps reproduce bug.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/CONTRIBUTING.html","id":"improve-the-documentation","dir":"","previous_headings":"How you can contribute","what":"Improve the documentation","title":"Contributing to stochLAB","text":"Noticed typo website? Think function use better example? Good documentation makes difference, help improve welcome!","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/CONTRIBUTING.html","id":"function-documentation","dir":"","previous_headings":"How you can contribute > Improve the documentation","what":"Function documentation","title":"Contributing to stochLAB","text":"Functions described comments near code translated documentation using roxygen2. want improve function description: Go R/ directory code repository. Look file name function. Propose file change update function documentation roxygen comments (starting #').","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/CONTRIBUTING.html","id":"contribute-code-","dir":"","previous_headings":"How you can contribute","what":"Contribute code üìù","title":"Contributing to stochLAB","text":"Care fix bugs implement new functionality our_package? Awesome! look issue list leave comment things want work . See also development guidelines .","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/CONTRIBUTING.html","id":"development-guidelines","dir":"","previous_headings":"","what":"Development guidelines","title":"Contributing to stochLAB","text":"try follow GitHub flow development. Fork repo clone computer. learn process, see guide. forked cloned project since worked , pull changes original repo clone using git pull upstream master. Open RStudio project file (.Rproj). Write code. Test code (bonus points adding unit tests). Document code (see function documentation ). Check code devtools::check() aim 0 errors warnings. Commit push changes. Submit pull request.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/CONTRIBUTING.html","id":"life-cycle-statement","dir":"","previous_headings":"","what":"Life cycle statement","title":"Contributing to stochLAB","text":"package stable state development, minimal subsequent development envisioned.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright ¬© 2007 Free Software Foundation, Inc.¬†<http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program‚Äìmake sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers‚Äô authors‚Äô protection, GPL clearly explains warranty free software. users‚Äô authors‚Äô sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users‚Äô freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/LICENSE.html","id":"0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"‚ÄúLicense‚Äù refers version 3 GNU General Public License. ‚ÄúCopyright‚Äù also means copyright-like laws apply kinds works, semiconductor masks. ‚ÄúProgram‚Äù refers copyrightable work licensed License. licensee addressed ‚Äú‚Äù. ‚ÄúLicensees‚Äù ‚Äúrecipients‚Äù may individuals organizations. ‚Äúmodify‚Äù work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called ‚Äúmodified version‚Äù earlier work work ‚Äúbased ‚Äù earlier work. ‚Äúcovered work‚Äù means either unmodified Program work based Program. ‚Äúpropagate‚Äù work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. ‚Äúconvey‚Äù work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays ‚ÄúAppropriate Legal Notices‚Äù extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/LICENSE.html","id":"1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"‚Äúsource code‚Äù work means preferred form work making modifications . ‚ÄúObject code‚Äù means non-source form work. ‚ÄúStandard Interface‚Äù means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. ‚ÄúSystem Libraries‚Äù executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. ‚ÄúMajor Component‚Äù, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . ‚ÄúCorresponding Source‚Äù work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work‚Äôs System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/LICENSE.html","id":"2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/LICENSE.html","id":"3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users‚Äô Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work‚Äôs users, third parties‚Äô legal rights forbid circumvention technological measures.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/LICENSE.html","id":"4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program‚Äôs source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/LICENSE.html","id":"5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 ‚Äúkeep intact notices‚Äù. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called ‚Äúaggregate‚Äù compilation resulting copyright used limit access legal rights compilation‚Äôs users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/LICENSE.html","id":"6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. # separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. ‚ÄúUser Product‚Äù either (1) ‚Äúconsumer product‚Äù, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, ‚Äúnormally used‚Äù refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. ‚ÄúInstallation Information‚Äù User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/LICENSE.html","id":"7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"‚ÄúAdditional permissions‚Äù terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered ‚Äúrestrictions‚Äù within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/LICENSE.html","id":"8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/LICENSE.html","id":"9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/LICENSE.html","id":"10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. ‚Äúentity transaction‚Äù transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party‚Äôs predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/LICENSE.html","id":"11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"‚Äúcontributor‚Äù copyright holder authorizes use License Program work Program based. work thus licensed called contributor‚Äôs ‚Äúcontributor version‚Äù. contributor‚Äôs ‚Äúessential patent claims‚Äù patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, ‚Äúcontrol‚Äù includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor‚Äôs essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, ‚Äúpatent license‚Äù express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). ‚Äúgrant‚Äù patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. ‚ÄúKnowingly relying‚Äù means actual knowledge , patent license, conveying covered work country, recipient‚Äôs use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license ‚Äúdiscriminatory‚Äù include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/LICENSE.html","id":"12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others‚Äô Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/LICENSE.html","id":"13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/LICENSE.html","id":"14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License ‚Äúlater version‚Äù applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy‚Äôs public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/LICENSE.html","id":"15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM ‚Äú‚Äù WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/LICENSE.html","id":"16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/LICENSE.html","id":"17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least ‚Äúcopyright‚Äù line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program‚Äôs commands might different; GUI interface, use ‚Äúbox‚Äù. also get employer (work programmer) school, , sign ‚Äúcopyright disclaimer‚Äù program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/articles/Running_stochLAB.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Running stochLAB","text":"stochLAB package adaptation R code developed Masden (2015) incorporate variability uncertainty avian collision risk model originally developed Band (2012). Code developed stochLAB substantially re-factored re-structured Masden‚Äôs (heavily script-based) implementation user-friendly, streamlined, well documented easily distributed tool. Furthermore, package lays code infrastructure easier incorporation new functionality, e.g.¬†extra parameter sampling features, model expansions, etc. addition, previous code underpinning core calculations extended model replaced alternative approach, resulting significant gains computational speed - 30x faster Masden‚Äôs code. optimization particularly beneficial stochastic context, core calculations called repeatedly simulations. detailed overview type ?stochLAB, installed!","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/articles/Running_stochLAB.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Running stochLAB","text":"can install development version :","code":"# install.packages(\"devtools\") devtools::install_github(\"HiDef-Aerial-Surveying/stochLAB\")"},{"path":[]},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/articles/Running_stochLAB.html","id":"simple-example","dir":"Articles","previous_headings":"Examples","what":"Simple example","title":"Running stochLAB","text":"basic example running stochastic collision model one seabird species one turbine/wind-farm scenario, fictional input parameter data.","code":"# ------------------------------------------------------ # Setting some of the required inputs upfront  b_dens <- data.frame(   month = month.abb,   mean = runif(12, 0.8, 1.5),   sd = runif(12, 0.2, 0.3))  # Generic FHD bootstraps for one species, from Johnson et al (2014) fhd_boots <- generic_fhd_bootstraps[[1]]  # wind speed vs rotation speed vs pitch wind_rtn_ptch <- data.frame(   wind_speed = seq_len(30),   rtn_speed = 10/(30:1),   bld_pitch = c(rep(90, 4), rep(0, 8), 5:22))  # wind availability windavb <- data.frame(   month = month.abb,   pctg = runif(12, 85, 98))  # maintenance downtime dwntm <- data.frame(   month = month.abb,   mean = runif(12, 6, 10),   sd = rep(2, 12))  # seasons specification seas_dt <- data.frame(   season_id = c(\"a\", \"b\", \"c\"),   start_month = c(\"Jan\", \"May\", \"Oct\"), end_month = c(\"Apr\", \"Sep\", \"Dec\"))  # ---------------------------------------------------------- # Run stochastic CRM, treating rotor radius, air gap and # blade width as fixed parameters (i.e. not stochastic)  stoch_crm(   model_options = c(1, 2, 3),   n_iter = 1000,   flt_speed_pars = data.frame(mean = 7.26, sd = 1.5),   body_lt_pars = data.frame(mean = 0.39, sd = 0.005),   wing_span_pars = data.frame(mean = 1.08, sd = 0.04),   avoid_bsc_pars = data.frame(mean = 0.99, sd = 0.001),   avoid_ext_pars = data.frame(mean = 0.96, sd = 0.002),   noct_act_pars = data.frame(mean = 0.033, sd = 0.005),   prop_crh_pars = data.frame(mean = 0.06, sd = 0.009),   bird_dens_opt = \"tnorm\",   bird_dens_dt = b_dens,   flight_type = \"flapping\",   prop_upwind = 0.5,   gen_fhd_boots = fhd_boots,   n_blades = 3,   rtr_radius_pars = data.frame(mean = 80, sd = 0), # sd = 0, rotor radius is fixed   air_gap_pars = data.frame(mean = 36, sd = 0),    # sd = 0, air gap is fixed   bld_width_pars = data.frame(mean = 8, sd = 0),   # sd = 0, blade width is fixed   rtn_pitch_opt = \"windSpeedReltn\",   windspd_pars = data.frame(mean = 7.74, sd = 3),   rtn_pitch_windspd_dt = wind_rtn_ptch,   trb_wind_avbl = windavb,   trb_downtime_pars = dwntm,   wf_n_trbs = 200,   wf_width = 15,   wf_latitude = 56.9,   tidal_offset = 2.5,   lrg_arr_corr = TRUE,   verbose = TRUE,   seed = 1234,   out_format = \"summaries\",   out_sampled_pars = TRUE,   out_period = \"seasons\",   season_specs = seas_dt,   log_file = paste0(getwd(), \"scrm_example.log\") )"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/articles/Running_stochLAB.html","id":"multiscenario-example","dir":"Articles","previous_headings":"Examples","what":"Multiscenario example","title":"Running stochLAB","text":"example usage stoch_crm() multiple scenarios. aim two-fold: Suggest input parameter datasets used previous implementation can reshaped fit stoch_crm()‚Äôs interface. Suggested code also relevant context multiple scenarios applications, since wide tabular structure datasets likely favoured format users compile input parameters different scenarios. Propose functional programming framework run stoch_crm() multiple species wind-farm/turbines features. Please note example runs fictional data.","code":"# --------------------------------------------------------- # # ----      Reshaping into list-column data frames       ---- # --------------------------------------------------------- # # # Here embracing list-columns tibbles, but lists could be used instead  # --- bird features bird_pars <- bird_pars_wide_example %>%   dplyr::relocate(Flight, .after = dplyr::last_col()) %>%   tidyr::pivot_longer(AvoidanceBasic:Prop_CRH_ObsSD) %>%   dplyr::mutate(     par = dplyr::if_else(grepl(\"SD|sd|Sd\", name), \"sd\", \"mean\"),     feature = gsub(\"SD|sd|Sd\",\"\", name)) %>%   dplyr::select(-name) %>%   tidyr::pivot_wider(names_from = par, values_from = value) %>%   tidyr::nest(pars = c(mean, sd)) %>%   tidyr::pivot_wider(names_from = feature, values_from = pars) %>%   tibble::add_column(prop_upwind = 0.5)  # --- bird densities: provided as mean and sd Parameters for Truncated Normal lower # bounded at 0 dens_pars <- dens_tnorm_wide_example %>%   tibble::add_column(     dens_opt = rep(\"tnorm\", nrow(.)),     .after = 1) %>%   tidyr::pivot_longer(Jan:DecSD) %>%   dplyr::mutate(     par = dplyr::if_else(grepl(\"SD|sd|Sd\", name), \"sd\", \"mean\"),     month = gsub(\"SD|sd|Sd\",\"\", name)) %>%   dplyr::select(-name) %>%   tidyr::pivot_wider(names_from = par, values_from = value) %>%   tidyr::nest(mth_dens = c(month, mean, sd))  # --- FHD data from Johnson et al (2014) for the species under analysis gen_fhd_boots <- generic_fhd_bootstraps[bird_pars$Species]  # --- seasons definitions (made up) season_dt <- list(   Arctic_Tern = data.frame(     season_id = c(\"breeding\", \"feeding\", \"migrating\"),     start_month = c(\"May\", \"Sep\", \"Jan\"),     end_month = c(\"Aug\", \"Dec\", \"Apr\")),   Black_headed_Gull = data.frame(     season_id = c(\"breeding\", \"feeding\", \"migrating\"),     start_month = c(\"Jan\", \"May\", \"Oct\"),     end_month = c(\"Apr\", \"Sep\", \"Dec\")),   Black_legged_Kittiwake = data.frame(     season_id = c(\"breeding\", \"feeding\", \"migrating\"),     start_month = c(\"Dec\", \"Mar\", \"Sep\"),     end_month = c(\"Feb\", \"Aug\", \"Nov\")))  # --- turbine parameters ## address operation parameters first trb_opr_pars <- turb_pars_wide_example %>%   dplyr::select(TurbineModel, JanOp:DecOpSD) %>%   tidyr::pivot_longer(JanOp:DecOpSD) %>%   dplyr::mutate(     month = substr(name, 1, 3),     par = dplyr::case_when(       grepl(\"SD|sd|Sd\", name) ~ \"sd\",       grepl(\"Mean|MEAN|mean\", name) ~ \"mean\",       TRUE ~ \"pctg\"     )) %>%   dplyr::select(-name) %>%   tidyr::pivot_wider(names_from = par, values_from = value) %>%   tidyr::nest(     wind_avbl = c(month, pctg),     trb_dwntm = c(month, mean, sd))  ## address turbine features and subsequently merge operation parameters trb_pars <- turb_pars_wide_example %>%   dplyr::select(TurbineModel:windSpeedSD ) %>%   dplyr::relocate(RotorSpeedAndPitch_SimOption, .after = 1) %>%   tidyr::pivot_longer(RotorRadius:windSpeedSD) %>%   dplyr::mutate(     par = dplyr::if_else(grepl(\"SD|sd|Sd\", name), \"sd\", \"mean\"),     feature = gsub(\"(SD|sd|Sd)|(Mean|MEAN|mean)\",\"\", name)   ) %>%   dplyr::select(-name) %>%   tidyr::pivot_wider(names_from = par, values_from = value) %>%   tidyr::nest(pars = c(mean, sd)) %>%   tidyr::pivot_wider(names_from = feature, values_from = pars) %>%   dplyr::left_join(., trb_opr_pars)  # --- windspeed, rotation speed and blade pitch relationship wndspd_rtn_ptch_example  # --- windfarm parameters wf_pars <- data.frame(   wf_id = c(\"wf_1\", \"wf_2\"),   n_turbs = c(200, 400),   wf_width = c(4, 10),   wf_lat = c(55.8, 55.0),   td_off = c(2.5, 2),   large_array_corr = c(FALSE, TRUE) )   # -------------------------------------------------------------- # # ----      Run stoch_crm() for multiple scenarios           ---- # -------------------------------------------------------------- #  # --- Set up scenario combinations scenarios_specs <- tidyr::expand_grid(   spp = bird_pars$Species,   turb_id = trb_pars$TurbineModel,   wf_id = wf_pars$wf_id) %>%   tibble::add_column(     scenario_id = paste0(\"scenario_\", 1:nrow(.)),     .before = 1)  # --- Set up progress bar for the upcoming iterative mapping step pb <- progress::progress_bar$new(   format = \"Running Scenario: :what [:bar] :percent eta: :eta\",   width = 100,   total = nrow(scenarios_specs))  # --- Map stoch_crm() to each scenario specification via purrr::pmap outputs <- scenarios_specs %>%   purrr::pmap(function(scenario_id, spp, turb_id, wf_id, ...){      pb$tick(tokens = list(what = scenario_id))      # params for current species     c_spec <- bird_pars %>%       dplyr::filter(Species == {{spp}}) # {{}} to avoid issues with data masking      # density for current species     c_dens <- dens_pars %>%       dplyr::filter(Species == {{spp}})      # params for current turbine scenario     c_turb <- trb_pars %>%       dplyr::filter(TurbineModel == {{turb_id}})      # params for current windfarm scenario     c_wf <- wf_pars %>%       dplyr::filter(wf_id == {{wf_id}})      # inputs in list-columns need to be unlisted, either via `unlist()` or     # indexing `[[1]]`     # switching off `verbose`, otherwise console will be # cramped with log     messages     stoch_crm(       model_options = c(1, 2, 3),       n_iter = 1000,       flt_speed_pars = c_spec$Flight_Speed[[1]],       body_lt_pars = c_spec$Body_Length[[1]],       wing_span_pars = c_spec$Wingspan[[1]],       avoid_bsc_pars = c_spec$AvoidanceBasic[[1]],       avoid_ext_pars = c_spec$AvoidanceExtended[[1]],       noct_act_pars = c_spec$Nocturnal_Activity[[1]],       prop_crh_pars = c_spec$Prop_CRH_Obs[[1]],       bird_dens_opt = c_dens$dens_opt,       bird_dens_dt = c_dens$mth_dens[[1]],       flight_type = c_spec$Flight,       prop_upwind = c_spec$prop_upwind,       gen_fhd_boots = gen_fhd_boots[[spp]],       n_blades = c_turb$Blades,       rtr_radius_pars = c_turb$RotorRadius[[1]],       air_gap_pars = c_turb$HubHeightAdd[[1]],       bld_width_pars = c_turb$BladeWidth[[1]],       rtn_pitch_opt = c_turb$RotorSpeedAndPitch_SimOption,       bld_pitch_pars = c_turb$Pitch[[1]],       rtn_speed_pars = c_turb$RotationSpeed[[1]],       windspd_pars = c_turb$windSpeed[[1]],       rtn_pitch_windspd_dt = wndspd_rtn_ptch_example,       trb_wind_avbl = c_turb$wind_avbl[[1]],       trb_downtime_pars = c_turb$trb_dwntm[[1]],       wf_n_trbs = c_wf$n_turbs,       wf_width = c_wf$wf_width,       wf_latitude = c_wf$wf_lat,       tidal_offset = c_wf$td_off,       lrg_arr_corr = c_wf$large_array_corr,       verbose = FALSE,       seed = 1234,       out_format = \"summaries\",       out_sampled_pars = FALSE,       out_period = \"seasons\",       season_specs = season_dt[[spp]],       log_file = NULL     )   })  # --- close progress bar pb$terminate()  # --- identify elements of output list names(outputs) <- scenarios_specs$scenario_id  outputs"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/articles/Running_stochLAB.html","id":"band-model-example","dir":"Articles","previous_headings":"Examples","what":"Band model example","title":"Running stochLAB","text":"example usage band_crm(). single species single set turbine parameters. replicates Band (2012) worksheet. stoch_crm() function wraps around function, band_crm() acts essence single draw stoch_crm(). Please note example runs fictional data.","code":"# ------------------------------------------------------ # Run with arbitrary parameter values, for illustration # ------------------------------------------------------  # Setting a dataframe of parameters to draw from params <- data.frame(   flight_speed = 13.1,         # Flight speed in m/s   body_lt = 0.85,              # Body length in m   wing_span = 1.01,            # Wing span in m   flight_type = \"flapping\",    # flapping or gliding flight   avoid_rt_basic = 0.989,      # avoidance rate for option 1 and 2   avoid_rt_ext = 0.981,        # extended avoidance rate for option 3 and 4   noct_activity = 0.5,         # proportion of day birds are inactive   prop_crh_surv = 0.13,        # proportion of birds at collision risk height (option 1 only)   prop_upwind = 0.5,           # proportion of flights that are upwind   rotor_speed = 15,            # rotor speed in m/s   rotor_radius = 120,          # radius of turbine in m   blade_width = 5,             # width of turbine blades at thickest point in m   blade_pitch = 15,            # mean radius pitch in Radians   n_blades = 3,                # total number of blades per turbine   hub_height = 150,            # height of hub in m above HAT   n_turbines = 100,            # number of turbines in the wind farm   wf_width = 52,               # width across longest section of wind farm   wf_latitude = 56,            # latitude of centroid of wind farm   tidal_offset = 2.5,          # mean tidal offset from HAT of the wind farm   lrg_arr_corr = TRUE          # apply a large array correction? )  # Monthly bird densities b_dens <- data.frame(   month = month.abb,   dens = runif(12, 0.8, 1.5) )  # flight height distribution from Johnston et al gen_fhd_dat <- data.frame(   height = Johnston_Flight_heights_SOSS$Height,   prop = Johnston_Flight_heights_SOSS$Gannet.est )  # monthly operational time of the wind farm turb_oper <- data.frame(   month = month.abb,   prop_oper = runif(12,0.5,0.8) )   stochLAB::band_crm(   model_options = c(1,2,3),   flight_speed = params$flight_speed,   body_lt = params$body_lt,   wing_span = params$wing_span,   flight_type = params$flight_type,   avoid_rt_basic = params$avoid_rt_basic,   avoid_rt_ext = params$avoid_rt_ext,   noct_activity = params$noct_activity,   prop_crh_surv = params$prop_crh_surv,   dens_month = b_dens,   prop_upwind = params$prop_upwind,   gen_fhd = gen_fhd_dat,   site_fhd = NULL,  # Option 4 only   rotor_speed = params$rotor_speed,   rotor_radius = params$rotor_radius,   blade_width = params$blade_width,   blade_pitch = params$blade_pitch,   n_blades = params$n_blades,   hub_height = params$hub_height,   chord_prof = chord_prof_5MW,   n_turbines = params$n_turbines,   turb_oper_month = turb_oper,   wf_width = params$wf_width,   wf_latitude = params$wf_latitude,   tidal_offset = params$tidal_offset,   lrg_arr_corr = params$lrg_arr_corr   )"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Grant Humphries. Author, maintainer. Bruno Caneco. Author. Marine Scotland. Funder, copyright holder. HiDef. Copyright holder. DMPstats. Copyright holder.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bruno Caneco, Grant Humphries, Aonghais Cook, Elizabeth Masden (2022). Estimating bird collisions offshore windfarms stochLAB URL https://hidef-aerial-surveying.github.io/stochLAB.","code":"@Manual{,   title = {Estimating bird collisions at offshore windfarms with {stochLAB}},   author = {Bruno Caneco and Grant Humphries and Aonghais Cook and Elizabeth Masden},   institution = {Marine Scotland Science},   year = {2022},   url = {https://hidef-aerial-surveying.github.io/stochLAB}, }"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/index.html","id":"stochlab-","dir":"","previous_headings":"","what":"Stochastic Collision Risk Model","title":"Stochastic Collision Risk Model","text":"stochLAB tool run Collision Risk Models (CRMs) seabirds offshore wind farms.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Stochastic Collision Risk Model","text":"stochLAB package adaptation R code developed Masden (2015) incorporate variability uncertainty avian collision risk model originally developed Band (2012). stochLAB package compiled curated DMP Statistics HiDef Aerial Surveying. Code developed stochLAB substantially re-factored re-structured Masden‚Äôs (heavily script-based) implementation user-friendly, streamlined, well documented easily distributed tool. Furthermore, package lays code infrastructure easier incorporation new functionality, e.g.¬†extra parameter sampling features, model expansions, etc. addition, previous code underpinning core calculations extended model replaced alternative approach, resulting significant gains computational speed - 30x faster Masden‚Äôs code. optimization particularly beneficial stochastic context, core calculations called repeatedly simulations. detailed overview type ?stochLAB, installed!","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Stochastic Collision Risk Model","text":"can install development version :","code":"# install.packages(\"devtools\") devtools::install_github(\"HiDef-Aerial-Surveying/stochLAB\")"},{"path":[]},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/index.html","id":"simple-example","dir":"","previous_headings":"Examples","what":"Simple example","title":"Stochastic Collision Risk Model","text":"basic example running stochastic collision model one seabird species one turbine/wind-farm scenario, fictional input parameter data.","code":"library(stochLAB)  # ------------------------------------------------------ # Setting some of the required inputs upfront  b_dens <- data.frame(   month = month.abb,   mean = runif(12, 0.8, 1.5),   sd = runif(12, 0.2, 0.3))  # Generic FHD bootstraps for one species, from Johnson et al (2014) fhd_boots <- generic_fhd_bootstraps[[1]]  # wind speed vs rotation speed vs pitch wind_rtn_ptch <- data.frame(   wind_speed = seq_len(30),   rtn_speed = 10/(30:1),   bld_pitch = c(rep(90, 4), rep(0, 8), 5:22))  # wind availability windavb <- data.frame(   month = month.abb,   pctg = runif(12, 85, 98))  # maintenance downtime dwntm <- data.frame(   month = month.abb,   mean = runif(12, 6, 10),   sd = rep(2, 12))  # seasons specification seas_dt <- data.frame(   season_id = c(\"a\", \"b\", \"c\"),   start_month = c(\"Jan\", \"May\", \"Oct\"), end_month = c(\"Apr\", \"Sep\", \"Dec\"))  # ---------------------------------------------------------- # Run stochastic CRM, treating rotor radius, air gap and # blade width as fixed parameters (i.e. not stochastic)  stoch_crm(   model_options = c(1, 2, 3),   n_iter = 1000,   flt_speed_pars = data.frame(mean = 7.26, sd = 1.5),   body_lt_pars = data.frame(mean = 0.39, sd = 0.005),   wing_span_pars = data.frame(mean = 1.08, sd = 0.04),   avoid_bsc_pars = data.frame(mean = 0.99, sd = 0.001),   avoid_ext_pars = data.frame(mean = 0.96, sd = 0.002),   noct_act_pars = data.frame(mean = 0.033, sd = 0.005),   prop_crh_pars = data.frame(mean = 0.06, sd = 0.009),   bird_dens_opt = \"tnorm\",   bird_dens_dt = b_dens,   flight_type = \"flapping\",   prop_upwind = 0.5,   gen_fhd_boots = fhd_boots,   n_blades = 3,   rtr_radius_pars = data.frame(mean = 80, sd = 0), # sd = 0, rotor radius is fixed   air_gap_pars = data.frame(mean = 36, sd = 0),    # sd = 0, air gap is fixed   bld_width_pars = data.frame(mean = 8, sd = 0),   # sd = 0, blade width is fixed   rtn_pitch_opt = \"windSpeedReltn\",   windspd_pars = data.frame(mean = 7.74, sd = 3),   rtn_pitch_windspd_dt = wind_rtn_ptch,   trb_wind_avbl = windavb,   trb_downtime_pars = dwntm,   wf_n_trbs = 200,   wf_width = 15,   wf_latitude = 56.9,   tidal_offset = 2.5,   lrg_arr_corr = TRUE,   verbose = TRUE,   seed = 1234,   out_format = \"summaries\",   out_sampled_pars = TRUE,   out_period = \"seasons\",   season_specs = seas_dt,   log_file = paste0(getwd(), \"scrm_example.log\") )"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/index.html","id":"multiscenario-example","dir":"","previous_headings":"Examples","what":"Multiscenario example","title":"Stochastic Collision Risk Model","text":"example usage stoch_crm() multiple scenarios. aim two-fold: Suggest input parameter datasets used previous implementation can reshaped fit stoch_crm()‚Äôs interface. Suggested code also relevant context multiple scenarios applications, since wide tabular structure datasets likely favoured format users compile input parameters different scenarios. Propose functional programming framework run stoch_crm() multiple species wind-farm/turbines features. Please note example runs fictional data.","code":"library(stochLAB)  # --------------------------------------------------------- # # ----      Reshaping into list-column data frames       ---- # --------------------------------------------------------- # # # Here embracing list-columns tibbles, but lists could be used instead  # --- bird features bird_pars <- bird_pars_wide_example %>%   dplyr::relocate(Flight, .after = dplyr::last_col()) %>%   tidyr::pivot_longer(AvoidanceBasic:Prop_CRH_ObsSD) %>%   dplyr::mutate(     par = dplyr::if_else(grepl(\"SD|sd|Sd\", name), \"sd\", \"mean\"),     feature = gsub(\"SD|sd|Sd\",\"\", name)) %>%   dplyr::select(-name) %>%   tidyr::pivot_wider(names_from = par, values_from = value) %>%   tidyr::nest(pars = c(mean, sd)) %>%   tidyr::pivot_wider(names_from = feature, values_from = pars) %>%   tibble::add_column(prop_upwind = 0.5)  # --- bird densities: provided as mean and sd Parameters for Truncated Normal lower # bounded at 0 dens_pars <- dens_tnorm_wide_example %>%   tibble::add_column(     dens_opt = rep(\"tnorm\", nrow(.)),     .after = 1) %>%   tidyr::pivot_longer(Jan:DecSD) %>%   dplyr::mutate(     par = dplyr::if_else(grepl(\"SD|sd|Sd\", name), \"sd\", \"mean\"),     month = gsub(\"SD|sd|Sd\",\"\", name)) %>%   dplyr::select(-name) %>%   tidyr::pivot_wider(names_from = par, values_from = value) %>%   tidyr::nest(mth_dens = c(month, mean, sd))  # --- FHD data from Johnson et al (2014) for the species under analysis gen_fhd_boots <- generic_fhd_bootstraps[bird_pars$Species]  # --- seasons definitions (made up) season_dt <- list(   Arctic_Tern = data.frame(     season_id = c(\"breeding\", \"feeding\", \"migrating\"),     start_month = c(\"May\", \"Sep\", \"Jan\"),     end_month = c(\"Aug\", \"Dec\", \"Apr\")),   Black_headed_Gull = data.frame(     season_id = c(\"breeding\", \"feeding\", \"migrating\"),     start_month = c(\"Jan\", \"May\", \"Oct\"),     end_month = c(\"Apr\", \"Sep\", \"Dec\")),   Black_legged_Kittiwake = data.frame(     season_id = c(\"breeding\", \"feeding\", \"migrating\"),     start_month = c(\"Dec\", \"Mar\", \"Sep\"),     end_month = c(\"Feb\", \"Aug\", \"Nov\")))  # --- turbine parameters ## address operation parameters first trb_opr_pars <- turb_pars_wide_example %>%   dplyr::select(TurbineModel, JanOp:DecOpSD) %>%   tidyr::pivot_longer(JanOp:DecOpSD) %>%   dplyr::mutate(     month = substr(name, 1, 3),     par = dplyr::case_when(       grepl(\"SD|sd|Sd\", name) ~ \"sd\",       grepl(\"Mean|MEAN|mean\", name) ~ \"mean\",       TRUE ~ \"pctg\"     )) %>%   dplyr::select(-name) %>%   tidyr::pivot_wider(names_from = par, values_from = value) %>%   tidyr::nest(     wind_avbl = c(month, pctg),     trb_dwntm = c(month, mean, sd))  ## address turbine features and subsequently merge operation parameters trb_pars <- turb_pars_wide_example %>%   dplyr::select(TurbineModel:windSpeedSD ) %>%   dplyr::relocate(RotorSpeedAndPitch_SimOption, .after = 1) %>%   tidyr::pivot_longer(RotorRadius:windSpeedSD) %>%   dplyr::mutate(     par = dplyr::if_else(grepl(\"SD|sd|Sd\", name), \"sd\", \"mean\"),     feature = gsub(\"(SD|sd|Sd)|(Mean|MEAN|mean)\",\"\", name)   ) %>%   dplyr::select(-name) %>%   tidyr::pivot_wider(names_from = par, values_from = value) %>%   tidyr::nest(pars = c(mean, sd)) %>%   tidyr::pivot_wider(names_from = feature, values_from = pars) %>%   dplyr::left_join(., trb_opr_pars)  # --- windspeed, rotation speed and blade pitch relationship wndspd_rtn_ptch_example  # --- windfarm parameters wf_pars <- data.frame(   wf_id = c(\"wf_1\", \"wf_2\"),   n_turbs = c(200, 400),   wf_width = c(4, 10),   wf_lat = c(55.8, 55.0),   td_off = c(2.5, 2),   large_array_corr = c(FALSE, TRUE) )   # -------------------------------------------------------------- # # ----      Run stoch_crm() for multiple scenarios           ---- # -------------------------------------------------------------- #  # --- Set up scenario combinations scenarios_specs <- tidyr::expand_grid(   spp = bird_pars$Species,   turb_id = trb_pars$TurbineModel,   wf_id = wf_pars$wf_id) %>%   tibble::add_column(     scenario_id = paste0(\"scenario_\", 1:nrow(.)),     .before = 1)  # --- Set up progress bar for the upcoming iterative mapping step pb <- progress::progress_bar$new(   format = \"Running Scenario: :what [:bar] :percent eta: :eta\",   width = 100,   total = nrow(scenarios_specs))  # --- Map stoch_crm() to each scenario specification via purrr::pmap outputs <- scenarios_specs %>%   purrr::pmap(function(scenario_id, spp, turb_id, wf_id, ...){      pb$tick(tokens = list(what = scenario_id))      # params for current species     c_spec <- bird_pars %>%       dplyr::filter(Species == {{spp}}) # {{}} to avoid issues with data masking      # density for current species     c_dens <- dens_pars %>%       dplyr::filter(Species == {{spp}})      # params for current turbine scenario     c_turb <- trb_pars %>%       dplyr::filter(TurbineModel == {{turb_id}})      # params for current windfarm scenario     c_wf <- wf_pars %>%       dplyr::filter(wf_id == {{wf_id}})      # inputs in list-columns need to be unlisted, either via `unlist()` or     # indexing `[[1]]`     # switching off `verbose`, otherwise console will be # cramped with log     messages     stoch_crm(       model_options = c(1, 2, 3),       n_iter = 1000,       flt_speed_pars = c_spec$Flight_Speed[[1]],       body_lt_pars = c_spec$Body_Length[[1]],       wing_span_pars = c_spec$Wingspan[[1]],       avoid_bsc_pars = c_spec$AvoidanceBasic[[1]],       avoid_ext_pars = c_spec$AvoidanceExtended[[1]],       noct_act_pars = c_spec$Nocturnal_Activity[[1]],       prop_crh_pars = c_spec$Prop_CRH_Obs[[1]],       bird_dens_opt = c_dens$dens_opt,       bird_dens_dt = c_dens$mth_dens[[1]],       flight_type = c_spec$Flight,       prop_upwind = c_spec$prop_upwind,       gen_fhd_boots = gen_fhd_boots[[spp]],       n_blades = c_turb$Blades,       rtr_radius_pars = c_turb$RotorRadius[[1]],       air_gap_pars = c_turb$HubHeightAdd[[1]],       bld_width_pars = c_turb$BladeWidth[[1]],       rtn_pitch_opt = c_turb$RotorSpeedAndPitch_SimOption,       bld_pitch_pars = c_turb$Pitch[[1]],       rtn_speed_pars = c_turb$RotationSpeed[[1]],       windspd_pars = c_turb$windSpeed[[1]],       rtn_pitch_windspd_dt = wndspd_rtn_ptch_example,       trb_wind_avbl = c_turb$wind_avbl[[1]],       trb_downtime_pars = c_turb$trb_dwntm[[1]],       wf_n_trbs = c_wf$n_turbs,       wf_width = c_wf$wf_width,       wf_latitude = c_wf$wf_lat,       tidal_offset = c_wf$td_off,       lrg_arr_corr = c_wf$large_array_corr,       verbose = FALSE,       seed = 1234,       out_format = \"summaries\",       out_sampled_pars = FALSE,       out_period = \"seasons\",       season_specs = season_dt[[spp]],       log_file = NULL     )   })  # --- close progress bar pb$terminate()  # --- identify elements of output list names(outputs) <- scenarios_specs$scenario_id  outputs"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/index.html","id":"band-model-example","dir":"","previous_headings":"Examples","what":"Band model example","title":"Stochastic Collision Risk Model","text":"example usage band_crm(). single species single set turbine parameters. replicates Band (2012) worksheet. stoch_crm() function wraps around function, band_crm() acts essence single draw stoch_crm(). Please note example runs fictional data.","code":"# ------------------------------------------------------ # Run with arbitrary parameter values, for illustration # ------------------------------------------------------  # Setting a dataframe of parameters to draw from params <- data.frame(   flight_speed = 13.1,         # Flight speed in m/s   body_lt = 0.85,              # Body length in m   wing_span = 1.01,            # Wing span in m   flight_type = \"flapping\",    # flapping or gliding flight   avoid_rt_basic = 0.989,      # avoidance rate for option 1 and 2   avoid_rt_ext = 0.981,        # extended avoidance rate for option 3 and 4   noct_activity = 0.5,         # proportion of day birds are inactive   prop_crh_surv = 0.13,        # proportion of birds at collision risk height (option 1 only)   prop_upwind = 0.5,           # proportion of flights that are upwind   rotor_speed = 15,            # rotor speed in m/s   rotor_radius = 120,          # radius of turbine in m   blade_width = 5,             # width of turbine blades at thickest point in m   blade_pitch = 15,            # mean radius pitch in Radians   n_blades = 3,                # total number of blades per turbine   hub_height = 150,            # height of hub in m above HAT   n_turbines = 100,            # number of turbines in the wind farm   wf_width = 52,               # width across longest section of wind farm   wf_latitude = 56,            # latitude of centroid of wind farm   tidal_offset = 2.5,          # mean tidal offset from HAT of the wind farm   lrg_arr_corr = TRUE          # apply a large array correction? )  # Monthly bird densities b_dens <- data.frame(   month = month.abb,   dens = runif(12, 0.8, 1.5) )  # flight height distribution from Johnston et al gen_fhd_dat <- data.frame(   height = Johnston_Flight_heights_SOSS$Height,   prop = Johnston_Flight_heights_SOSS$Gannet.est )  # monthly operational time of the wind farm turb_oper <- data.frame(   month = month.abb,   prop_oper = runif(12,0.5,0.8) )   band_crm(   model_options = c(1,2,3),   flight_speed = params$flight_speed,   body_lt = params$body_lt,   wing_span = params$wing_span,   flight_type = params$flight_type,   avoid_rt_basic = params$avoid_rt_basic,   avoid_rt_ext = params$avoid_rt_ext,   noct_activity = params$noct_activity,   prop_crh_surv = params$prop_crh_surv,   dens_month = b_dens,   prop_upwind = params$prop_upwind,   gen_fhd = gen_fhd_dat,   site_fhd = NULL,  # Option 4 only   rotor_speed = params$rotor_speed,   rotor_radius = params$rotor_radius,   blade_width = params$blade_width,   blade_pitch = params$blade_pitch,   n_blades = params$n_blades,   hub_height = params$hub_height,   chord_prof = chord_prof_5MW,   n_turbines = params$n_turbines,   turb_oper_month = turb_oper,   wf_width = params$wf_width,   wf_latitude = params$wf_latitude,   tidal_offset = params$tidal_offset,   lrg_arr_corr = params$lrg_arr_corr   )"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/index.html","id":"migratory-stochastic-collision-risk-model","dir":"","previous_headings":"Examples","what":"Migratory stochastic collision risk model","title":"Stochastic Collision Risk Model","text":"adaptation Band (2012) method estimating collision risk migratory species windfarms. runs crm_opt1() uses estimates population size PCH due complexity measuring parameters migratory species. code return draws defined season. Please note example runs fictional data.","code":"# ------------------------------------------------------ # Run with arbitrary parameter values, for illustration # ------------------------------------------------------ season_specs <- data.frame(   season_id = c(\"PrBMigration\", \"PoBMigration\", \"Omigration\"),   start_month = c(\"Jan\", \"May\", \"Oct\"), end_month = c(\"Apr\", \"Sep\", \"Dec\") )  # wind availability windavb <- data.frame(   month = month.abb,   pctg = runif(12, 85, 98) ) head(windavb)  # maintenance downtime dwntm <- data.frame(   month = month.abb,   mean = runif(12, 6, 10),   sd = rep(2, 12)) head(dwntm)   mig_stoch_crm(   wing_span_pars = data.frame(mean = 1.08, sd = 0.04),      # Wing span in m,   flt_speed_pars = data.frame(mean = 7.26, sd = 1.5),       # Flight speed in m/s   body_lt_pars = data.frame(mean = 0.39, sd = 0.005),       # Body length in m,   prop_crh_pars = data.frame(mean = 0.06, sd = 0.009),      # Proportion of birds at CRH   avoid_bsc_pars = data.frame(mean = 0.99, sd = 0.001),     # avoidance rate   n_turbines = 150,   n_blades = 3,   rtn_speed_pars = data.frame(mean = 13.1, sd = 4),         # rotation speed in m/s of turbine blades   bld_pitch_pars = data.frame(mean = 3, sd = 0.3),          # pitch in degrees of turbine blades   rtr_radius_pars = data.frame(mean = 80, sd = 0),          # sd = 0, rotor radius is fixed   bld_width_pars = data.frame(mean = 8, sd = 0),            # sd = 0, blade width is fixed   wf_width = 100,   wf_latitude = 54.1,   prop_upwind = 0.5,   flight_type = \"flapping\",   popn_estim_pars = data.frame(mean = 21584, sd = 2023),    # population flying through windfarm,   season_specs = season_specs,   chord_profile = chord_prof_5MW,   trb_wind_avbl = windavb,   trb_downtime_pars = dwntm,   n_iter = 1000,   LargeArrayCorrection = TRUE,   log_file = NULL,   seed = 1234,   verbose = TRUE)"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/Day_Length.html","id":null,"dir":"Reference","previous_headings":"","what":"Total day and night hours per month ‚Äî Day_Length","title":"Total day and night hours per month ‚Äî Day_Length","text":"Taken Forsythe et al.(1995) model comparison daylength function latitude day year.  Ecological Modelling. 80: 87 - 95","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/Day_Length.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Total day and night hours per month ‚Äî Day_Length","text":"","code":"Day_Length(wf_latitude)"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/Day_Length.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Total day and night hours per month ‚Äî Day_Length","text":"wf_latitude decimal value. latitude centroid windfarm, degrees.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/Day_Length.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Total day and night hours per month ‚Äî Day_Length","text":"data frame total number daylight hours night hours month specified latitude.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/Day_Length.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Total day and night hours per month ‚Äî Day_Length","text":"","code":"x <- Day_Length(54.6)"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/Johnston_Flight_heights_SOSS.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarized flight height profiles from Johnston et al (2014) ‚Äî Johnston_Flight_heights_SOSS","title":"Summarized flight height profiles from Johnston et al (2014) ‚Äî Johnston_Flight_heights_SOSS","text":"dataframe containing flight height profiles species Johnston et al. (2014). Values expressed proportion birds 1 metre height intervals.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/Johnston_Flight_heights_SOSS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarized flight height profiles from Johnston et al (2014) ‚Äî Johnston_Flight_heights_SOSS","text":"","code":"Johnston_Flight_heights_SOSS"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/Johnston_Flight_heights_SOSS.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Summarized flight height profiles from Johnston et al (2014) ‚Äî Johnston_Flight_heights_SOSS","text":"data frame object 3 columns containing maximum likelihood, median, Upper/Lower confidence limits flight height distributions. Flight height bands go 1 - 300m ASL. height Height sea level, metres. First element represents 0-1 meters height band, height interval 1 metre. variable species name variable Johnston et al 2014 estimates. E.G., ArcticSkua.est maximum likelihood estimate  models. .est = maximum likelihood, .lcl .ucl lower upper 95% CLs, .med median estimate. prop proportion birds within 1m flight height bands.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/Johnston_Flight_heights_SOSS.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Summarized flight height profiles from Johnston et al (2014) ‚Äî Johnston_Flight_heights_SOSS","text":"https://www.bto.org/-science/wetland--marine/soss/projects","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/band_crm.html","id":null,"dir":"Reference","previous_headings":"","what":"Collision risk model, for a single species and one turbine scenario ‚Äî band_crm","title":"Collision risk model, for a single species and one turbine scenario ‚Äî band_crm","text":"Core function Collision Risk Model (CRM). Calculates expected number -flight collisions per month seabird species given offshore windfarm, choice model options. Calculations equivalent performed original CRM spreadsheet, per Band (2012), providing backward compatibility original outputs.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/band_crm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collision risk model, for a single species and one turbine scenario ‚Äî band_crm","text":"","code":"band_crm(   model_options = c(\"1\", \"2\", \"3\", \"4\"),   flight_speed,   body_lt,   wing_span,   flight_type,   avoid_rt_basic = NULL,   avoid_rt_ext = NULL,   noct_activity,   prop_crh_surv = NULL,   dens_month,   prop_upwind,   site_fhd = NULL,   gen_fhd = NULL,   rotor_speed,   rotor_radius,   blade_width,   blade_pitch,   n_blades,   hub_height,   chord_prof = chord_prof_5MW,   n_turbines,   turb_oper_month,   wf_width,   wf_latitude,   tidal_offset,   lrg_arr_corr = TRUE,   xinc = 0.05,   yinc = 0.05,   ... )"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/band_crm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collision risk model, for a single species and one turbine scenario ‚Äî band_crm","text":"model_options Character vector, model options calculating collision risk (see Details section ). flight_speed Numeric value. bird flying speed (\\(v\\)), metres/sec. body_lt Numeric value. length bird (\\(L\\)), metres. wing_span Numeric value. wingspan bird (\\(W\\)), metres. flight_type character string, either 'flapping' 'gliding', indicating species' characteristic flight type. avoid_rt_basic, avoid_rt_ext Numeric values. avoidance rate , respectively, basic model (.e. required model Options 1 2) extended model (.e. required Options 3 4). Avoidance rate expresses probability bird flying collision course turbine take evading action avoid collision. noct_activity numeric value. nocturnal flight activity level, expressed proportion daytime activity levels (\\(f_night\\)). prop_crh_surv proportion flights collision risk height derived site survey (\\(Q_2R\\)). required model Option 1. dens_month Data frame, containing estimates daytime -flight bird densities per month within windfarm footprint, birds/km^2. must contain following named columns: month, month names. dens, number birds flight height per square kilometre month. prop_upwind Numeric value 0-1 giving proportion flights upwind - defaults 0.5. gen_fhd, site_fhd Data frame objects, flight height distributions (fhd) species - relative frequency distribution bird flights 1-metre height intervals sea surface. Specifically: gen_fhd, Data frame species' generic fhd derived combining wider survey data. required model Options 2 3 site_fhd, Data frame species' site-specific fhd derived local survey data. required model Option 4 Data frames must contain following named columns: height, integers representing height bands sea surface, metres. Function expects 0 first value, representing 0-1m band. prop, proportion flights height band. rotor_speed Numeric value. operational rotation speed, revolutions/min. rotor_radius Numeric value. radius rotor (\\(R\\)), metres. blade_width Numeric value, giving maximum blade width, metres. blade_pitch Numeric value. average blade pitch angle, angle blade surface rotor plane (\\(\\gamma\\)), radians. n_blades integer, number blades rotor (\\(b\\)). hub_height numeric value, height rotor hub (\\(H\\)), given sum rotor radius minimum blade clearance highest astronomical tide (HAT), metres. chord_prof data frame chord taper profile rotor blade. Function expects two named columns: pp_radius, equidistant intervals radius bird passage point, proportion rotor_radius, within range \\([0, 1]\\). chord, chord width pp_radius, proportion blade_width. Defaults generic profile typical modern 5MW turbine. See chord_prof_5MW() details. n_turbines Integer, number turbines wind farm (\\(T\\)). turb_oper_month Data frame, holding proportion time turbines operational per month. following named column expected: month, month names. prop_oper, proportion time operating, per month. wf_width Numeric value, approximate longitudinal width wind farm, kilometres (\\(w\\)). wf_latitude decimal value. latitude centroid windfarm, degrees. tidal_offset numeric value, tidal offset, difference HAT mean sea level, metres. lrg_arr_corr Boolean value. TRUE, large array correction applied. correction factor account decay bird density later rows wind farms large array turbines. yinc, xinc numeric values, increments along y-axis x-axis numerical integration across segments rotor circle. Chosen values express proportion rotor radius. default set 0.05, .e. integration performed resolution one twentieth rotor radius. ... Additional arguments pass function called stoch_crm(), namely rotor_grids wf_daynight_hrs_month.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/band_crm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collision risk model, for a single species and one turbine scenario ‚Äî band_crm","text":"Returns expected number bird collisions per month, chosen CRM Options. Returned months shared dens_month turb_oper_month. Output format specific function called: data frame object, called stand-alone function. list object, called inside stoch_crm().","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/band_crm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Collision risk model, for a single species and one turbine scenario ‚Äî band_crm","text":"Collision risk can calculated 4 options, specified model_options: Option 1 - Basic model proportion collision risk height derived site survey (prop_crh_surv). Option 2 - Basic model proportion collision risk height derived generic flight height distribution (gen_fhd). Option 3 - Extended model using generic flight height distribution (gen_fhd). Option 4 - Extended model using site-specific flight height distribution (site_fhd). , Basic model - assumes uniform distribution bird flights collision risk height (.e. minimum maximum height rotor blade). Extended model - takes account distribution bird flight heights collision risk height.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/band_crm.html","id":"validation-and-pre-processing-of-inputs","dir":"Reference","previous_headings":"","what":"Validation and pre-processing of inputs","title":"Collision risk model, for a single species and one turbine scenario ‚Äî band_crm","text":"band_crm() requirements behaviour dependent called: stand-alone function arguments expected specified describe Input validation pre-processing carried . Inside stoch_crm() Assumes inputs already pre-processed validated, thence skips steps. Additional arguments rotor_grids wf_daynight_hrs_month need passed function. stochastic context, quantities can calculated ahead simulation loop maximize performance. Furthermore, gen_fhd, site_fhd, dens_month turb_oper_month can provided numeric vectors","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/band_crm.html","id":"code-revision-and-optimization","dir":"Reference","previous_headings":"","what":"Code revision and optimization","title":"Collision risk model, for a single species and one turbine scenario ‚Äî band_crm","text":"Core code performing Band calculations Masden (2015) implementation substantially re-factored, re-structured streamlined conform conventional R packages requirements. Furthermore, previous code underpinning key calculations extended model replaced alternative approach, resulting significant gains computational speed - 30x faster Masden's approach. optimization particularly beneficial stochastic context, Band calculations called repeatedly, potentially thousands times. See generate_rotor_grids() details.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/band_crm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Collision risk model, for a single species and one turbine scenario ‚Äî band_crm","text":"","code":"# ------------------------------------------------------ # Run with arbitrary parameter values, for illustration # ------------------------------------------------------  # Setting a dataframe of parameters to draw from params <- data.frame(   flight_speed = 13.1,         # Flight speed in m/s   body_lt = 0.85,              # Body length in m   wing_span = 1.01,            # Wing span in m   flight_type = \"flapping\",    # flapping or gliding flight   avoid_rt_basic = 0.989,      # avoidance rate for option 1 and 2   avoid_rt_ext = 0.981,        # extended avoidance rate for option 3 and 4   noct_activity = 0.5,         # proportion of day birds are inactive   prop_crh_surv = 0.13,        # proportion of birds at collision risk height (option 1 only)   prop_upwind = 0.5,           # proportion of flights that are upwind   rotor_speed = 15,            # rotor speed in m/s   rotor_radius = 120,          # radius of turbine in m   blade_width = 5,             # width of turbine blades at thickest point in m   blade_pitch = 15,            # mean radius pitch in Radians   n_blades = 3,                # total number of blades per turbine   hub_height = 150,            # height of hub in m above HAT   n_turbines = 100,            # number of turbines in the wind farm   wf_width = 52,               # width across longest section of wind farm   wf_latitude = 56,            # latitude of centroid of wind farm   tidal_offset = 2.5,          # mean tidal offset from HAT of the wind farm   lrg_arr_corr = TRUE          # apply a large array correction? )  # Monthly bird densities b_dens <- data.frame(   month = month.abb,   dens = runif(12, 0.8, 1.5) )  # flight height distribution from Johnston et al gen_fhd_dat <- Johnston_Flight_heights_SOSS %>%   dplyr::filter(variable==\"Gannet.est\") %>%   dplyr::select(height,prop)   # monthly operational time of the wind farm turb_oper <- data.frame(   month = month.abb,   prop_oper = runif(12,0.5,0.8) )   band_crm(   model_options = c(1,2,3),   flight_speed = params$flight_speed,   body_lt = params$body_lt,   wing_span = params$wing_span,   flight_type = params$flight_type,   avoid_rt_basic = params$avoid_rt_basic,   avoid_rt_ext = params$avoid_rt_ext,   noct_activity = params$noct_activity,   prop_crh_surv = params$prop_crh_surv,   dens_month = b_dens,   prop_upwind = params$prop_upwind,   gen_fhd = gen_fhd_dat,   site_fhd = NULL,  # Option 4 only   rotor_speed = params$rotor_speed,   rotor_radius = params$rotor_radius,   blade_width = params$blade_width,   blade_pitch = params$blade_pitch,   n_blades = params$n_blades,   hub_height = params$hub_height,   chord_prof = chord_prof_5MW,   n_turbines = params$n_turbines,   turb_oper_month = turb_oper,   wf_width = params$wf_width,   wf_latitude = params$wf_latitude,   tidal_offset = params$tidal_offset,   lrg_arr_corr = params$lrg_arr_corr   ) #> # A tibble: 12 √ó 4 #>    month  opt1  opt2  opt3 #>    <chr> <dbl> <dbl> <dbl> #>  1 Jan    62.1  16.0  6.56 #>  2 Feb    42.1  10.9  4.44 #>  3 Mar    93.3  24.1  9.85 #>  4 Apr    92.7  23.9  9.78 #>  5 May    85.0  21.9  8.96 #>  6 Jun    94.2  24.3  9.93 #>  7 Jul    93.6  24.1  9.87 #>  8 Aug    81.1  20.9  8.56 #>  9 Sep    71.5  18.4  7.54 #> 10 Oct    78.4  20.2  8.27 #> 11 Nov    48.4  12.5  5.10 #> 12 Dec    65.1  16.8  6.87"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/band_spreadsheet_dt.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter values and outputs from Band's Collision Risk spreadsheet\n(","title":"Parameter values and outputs from Band's Collision Risk spreadsheet\n(","text":"list object comprising parameter values outputs Band's worked example testing consistency package functions original model implementation.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/band_spreadsheet_dt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameter values and outputs from Band's Collision Risk spreadsheet\n(","text":"","code":"band_spreadsheet_dt"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/band_spreadsheet_dt.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Parameter values and outputs from Band's Collision Risk spreadsheet\n(","text":"list object containing: flight_speed Bird flight speed, m/s rotor_radius rotor radius, meters","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/band_spreadsheet_dt_2.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter values and outputs from Band's Collision Risk spreadsheet, example\nnr. 2 ‚Äî band_spreadsheet_dt_2","title":"Parameter values and outputs from Band's Collision Risk spreadsheet, example\nnr. 2 ‚Äî band_spreadsheet_dt_2","text":"list object comprising parameter values outputs Band's worked example testing consistency package functions original model implementation.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/band_spreadsheet_dt_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameter values and outputs from Band's Collision Risk spreadsheet, example\nnr. 2 ‚Äî band_spreadsheet_dt_2","text":"","code":"band_spreadsheet_dt_2"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/band_spreadsheet_dt_2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Parameter values and outputs from Band's Collision Risk spreadsheet, example\nnr. 2 ‚Äî band_spreadsheet_dt_2","text":"list object containing: flight_speed Bird flight speed, m/s rotor_radius rotor radius, meters","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/bird_pars_wide_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Example of bird parameters stored in wide format ‚Äî bird_pars_wide_example","title":"Example of bird parameters stored in wide format ‚Äî bird_pars_wide_example","text":"data frame (fake) data biological parameters three seabird species.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/bird_pars_wide_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example of bird parameters stored in wide format ‚Äî bird_pars_wide_example","text":"","code":"bird_pars_wide_example"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/bird_pars_wide_example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example of bird parameters stored in wide format ‚Äî bird_pars_wide_example","text":"3 x 16 data frame, biological parameters (columns) 3 species (rows). Columns include: Species Species name AvoidanceBasic Mean basic avoidance rate AvoidanceBasicSD SD basic avoidance rate AvoidanceExtended Mean extended avoidance rate AvoidanceExtendedSD SD extended avoidance rate Body_Length Mean body length Body_LengthSD SD body length","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/bird_pars_wide_example.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example of bird parameters stored in wide format ‚Äî bird_pars_wide_example","text":"Intended illustrate application stoch_scrm() multiple scenario setting, parameter data available tables wide format.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/chord_prof_5MW.html","id":null,"dir":"Reference","previous_headings":"","what":"Rotor blade chord profile ‚Äî chord_prof_5MW","title":"Rotor blade chord profile ‚Äî chord_prof_5MW","text":"data.frame giving blade's chord width profile, .e. chord width along length blade, provided proportion maximum width.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/chord_prof_5MW.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rotor blade chord profile ‚Äî chord_prof_5MW","text":"","code":"chord_prof_5MW"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/chord_prof_5MW.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Rotor blade chord profile ‚Äî chord_prof_5MW","text":"dataframe pp_radius radius bird passage point, proportion rotor radius (R) chord chord width pp_radius, proportion maximum chord width","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/chord_prof_5MW.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rotor blade chord profile ‚Äî chord_prof_5MW","text":"generic profile typical modern 5MW turbine used offshore generation. Due commercial sensitivities blade manufacturers, detailed information may readily available make/model blade hence generic information may used.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/chord_prof_5MW.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Rotor blade chord profile ‚Äî chord_prof_5MW","text":"\"chord_prof_5MW\" numerically identical \"coverC\". \"coverC\" become deprecated future versions code","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/crm_opt1.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of collisions under model option 1 ‚Äî crm_opt1","title":"Number of collisions under model option 1 ‚Äî crm_opt1","text":"Wrapper function run CRM calculations option 1: Basic model, .e. flights across collision risk height uniformly distributed. Proportion collision risk height derived site survey.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/crm_opt1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of collisions under model option 1 ‚Äî crm_opt1","text":"","code":"crm_opt1(   flux_factor,   prop_crh_surv,   avg_prob_coll,   mth_prop_oper,   avoidance_rate,   lac_factor )"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/crm_opt1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of collisions under model option 1 ‚Äî crm_opt1","text":"flux_factor vector containing flux factor month prop_crh_surv proportion flights collision risk height derived site survey (\\(Q_2R\\)). required model Option 1. avg_prob_coll numeric value, average probability collision single bird transit rotor, assuming avoidance action (\\(p_{average}\\)). mth_prop_oper numeric vector, proportion time turbines operational per month. avoidance_rate numeric value within interval \\([0, 1]\\). avoidance rate, expressing probability bird flying collision course turbine take evading action avoid collision. lac_factor numerical value, large array correction factor. Defaults 1, meaning large array correction applicable.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/crm_opt1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of collisions under model option 1 ‚Äî crm_opt1","text":"numeric vector, expected number collisions per month based model option 1","code":""},{"path":[]},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/crm_opt1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Number of collisions under model option 1 ‚Äî crm_opt1","text":"","code":"flux_fct <- get_flux_factor(       n_turbines = 100,       rotor_radius = 120,       flight_speed = 13.1,       bird_dens = c(1.19,0.85,1.05,1.45,1.41,1.45,1.12,1.45,0.93,0.902,1.06,1.23),       daynight_hrs = Day_Length(52),       noct_activity = 0.5       )  turb_oper <- data.frame(    month = month.abb,    prop_oper = runif(12,0.5,0.8)    ) turb_oper_month <- turb_oper$prop_oper  crm_opt1(  flux_factor = flux_fct,  prop_crh_surv = 0.13,  avg_prob_coll = 0.1494609,  mth_prop_oper = turb_oper_month,  avoidance_rate = 0.989,  lac_factor = 0.9998287) #>  [1]  66.60711  44.26077  76.17164 112.90317  94.74021 111.32276  68.72686 #>  [8] 123.53625  51.48692  56.77355  52.83938  79.79035"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/crm_opt2.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of collisions under model option 2 ‚Äî crm_opt2","title":"Number of collisions under model option 2 ‚Äî crm_opt2","text":"Wrapper function run CRM calculations option 2, .e.: Basic model, .e. flights across collision risk height uniformly distributed Proportion collision risk height derived flight height distribution (\\(Q'_2R\\))","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/crm_opt2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of collisions under model option 2 ‚Äî crm_opt2","text":"","code":"crm_opt2(   d_y,   flux_factor,   avg_prob_coll,   mth_prop_oper,   avoidance_rate,   lac_factor )"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/crm_opt2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of collisions under model option 2 ‚Äî crm_opt2","text":"d_y vector proportion bird flights height bands within rotor disc flux_factor vector containing flux factor month avg_prob_coll numeric value, average probability collision single bird transit rotor, assuming avoidance action (\\(p_{average}\\)). mth_prop_oper numeric vector, proportion time turbines operational per month. avoidance_rate numeric value within interval \\([0, 1]\\). avoidance rate, expressing probability bird flying collision course turbine take evading action avoid collision. lac_factor numerical value, large array correction factor. Defaults 1, meaning large array correction applicable.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/crm_opt2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of collisions under model option 2 ‚Äî crm_opt2","text":"numeric vector, expected number collisions per month based model Option 2.","code":""},{"path":[]},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/crm_opt2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Number of collisions under model option 2 ‚Äî crm_opt2","text":"","code":"avg_collision_risk <-  get_avg_prob_collision(    flight_speed = 13.1,    body_lt = 0.85,    wing_span = 1.01,    prop_upwind = 0.5,    flap_glide = 1,    rotor_speed = 15,    rotor_radius = 120,    blade_width = 5,    blade_pitch = 15,    n_blades = 3,    chord_prof = chord_prof_5MW  )    gen_fhd_dat <- Johnston_Flight_heights_SOSS %>%       dplyr::filter(variable==\"Gannet.est\") %>%       dplyr::select(height,prop)   gen_fhd <- gen_fhd_dat$prop   gen_fhd_at_rotor <-     get_fhd_rotor(       hub_height = 150,       fhd = gen_fhd,       rotor_radius = 120,       tidal_offset = 2.5,       yinc = 0.05)    flux_fct <- get_flux_factor(       n_turbines = 100,       rotor_radius = 120,       flight_speed = 13.1,       bird_dens = c(1.19,0.85,1.05,1.45,1.41,1.45,1.12,1.45,0.93,0.902,1.06,1.23),       daynight_hrs = Day_Length(52),       noct_activity = 0.5       )  turb_oper <- data.frame(    month = month.abb,    prop_oper = runif(12,0.5,0.8)    ) turb_oper_month <- turb_oper$prop_oper  crm_opt2(     flux_factor = flux_fct,     d_y = gen_fhd_at_rotor,     avg_prob_coll = avg_collision_risk,     mth_prop_oper = turb_oper_month,     avoidance_rate = 0.989,    lac_factor = 0.9998299) #>  [1] 15.12383 14.06464 14.91360 29.50893 21.57729 23.84990 20.85915 31.53984 #>  [9] 18.96472 15.22984 13.32049 15.80569"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/crm_opt3.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of collisions under model Option 3 ‚Äî crm_opt3","title":"Number of collisions under model Option 3 ‚Äî crm_opt3","text":"Wrapper function run CRM calculations option 3, .e.: Using extended model, takes account distribution bird flight heights risk height (minimum maximum height rotor blade) Using generic flight height distribution data","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/crm_opt3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of collisions under model Option 3 ‚Äî crm_opt3","text":"","code":"crm_opt3(   rotor_grids,   d_y_gen,   rotor_radius,   blade_width,   rotor_speed,   blade_pitch,   flight_type,   wing_span,   flight_speed,   body_lt,   n_blades,   prop_upwind,   avoidance_rate,   flux_factor,   mth_prop_oper,   lac_factor )"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/crm_opt3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of collisions under model Option 3 ‚Äî crm_opt3","text":"rotor_grids list object containing geometric attributes rotor equidistant points within unit circle. object built via function generate_rotor_grids(). d_y_gen vector proportion birds height bands within rotor disc, generic flight height distribution rotor_radius Numeric value. radius rotor (\\(R\\)), metres. blade_width Numeric value, giving maximum blade width, metres. rotor_speed Numeric value. operational rotation speed, revolutions/min. blade_pitch Numeric value. average blade pitch angle, angle blade surface rotor plane (\\(\\gamma\\)), radians. flight_type character string, either 'flapping' 'gliding', indicating species' characteristic flight type. wing_span Numeric value. wingspan bird (\\(W\\)), metres. flight_speed Numeric value. bird flying speed (\\(v\\)), metres/sec. body_lt Numeric value. length bird (\\(L\\)), metres. n_blades integer, number blades rotor (\\(b\\)). prop_upwind Numeric value 0-1 giving proportion flights upwind - defaults 0.5. avoidance_rate numeric value within interval \\([0, 1]\\). avoidance rate, expressing probability bird flying collision course turbine take evading action avoid collision. flux_factor vector containing flux factor month mth_prop_oper numeric vector, proportion time turbines operational per month. lac_factor numerical value, large array correction factor. Defaults 1, meaning large array correction applicable.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/crm_opt3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of collisions under model Option 3 ‚Äî crm_opt3","text":"numeric vector, expected number collisions per month based model option 3","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/crm_opt3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Number of collisions under model Option 3 ‚Äî crm_opt3","text":"","code":"rotor_grids <- generate_rotor_grids(yinc = 0.05, xinc = 0.05, chord_prof_5MW)   gen_fhd_dat <- Johnston_Flight_heights_SOSS %>%       dplyr::filter(variable==\"Gannet.est\") %>%       dplyr::select(height,prop)   gen_fhd <- gen_fhd_dat$prop   gen_fhd_at_rotor <-     get_fhd_rotor(       hub_height = 150,       fhd = gen_fhd,       rotor_radius = 120,       tidal_offset = 2.5,       yinc = 0.05)    flux_fct <- get_flux_factor(       n_turbines = 100,       rotor_radius = 120,       flight_speed = 13.1,       bird_dens = c(1.19,0.85,1.05,1.45,1.41,1.45,1.12,1.45,0.93,0.902,1.06,1.23),       daynight_hrs = Day_Length(52),       noct_activity = 0.5       )  turb_oper <- data.frame(    month = month.abb,    prop_oper = runif(12,0.5,0.8)    ) turb_oper_month <- turb_oper$prop_oper  crm_opt3(   rotor_grids = rotor_grids,   d_y_gen = gen_fhd_at_rotor,   rotor_radius = 120,   blade_width = 5,   rotor_speed = 15,   blade_pitch = 15,   flight_type = \"flapping\",   wing_span = 1.01,   flight_speed = 13.1,   body_lt = 0.85,   n_blades = 3,   prop_upwind = 0.5,   avoidance_rate = 0.981,   flux_factor = flux_fct,   mth_prop_oper = turb_oper_month,   lac_factor = 0.9998299   ) #>  [1]  8.235105  5.561286  8.039464  8.805287 12.135732 11.168427  7.183323 #>  [8] 12.290647  6.583484  7.680092  8.032467  7.865372"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/crm_opt4.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of collisions under model Option 4 ‚Äî crm_opt4","title":"Number of collisions under model Option 4 ‚Äî crm_opt4","text":"Wrapper function run CRM calculations option 4, .e.: Using extended model, takes account distribution bird flight heights risk height (minimum maximum height rotor blade) Using site-specific flight height distribution species obtained site survey data","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/crm_opt4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of collisions under model Option 4 ‚Äî crm_opt4","text":"","code":"crm_opt4(   rotor_grids,   d_y_surv,   rotor_radius,   blade_width,   rotor_speed,   blade_pitch,   flight_type,   wing_span,   flight_speed,   body_lt,   n_blades,   prop_upwind,   avoidance_rate,   flux_factor,   mth_prop_oper,   lac_factor )"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/crm_opt4.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of collisions under model Option 4 ‚Äî crm_opt4","text":"rotor_grids list object containing geometric attributes rotor equidistant points within unit circle. object built via function generate_rotor_grids(). d_y_surv vector proportion birds height bands within rotor disc, site-specific flight height distribution rotor_radius Numeric value. radius rotor (\\(R\\)), metres. blade_width Numeric value, giving maximum blade width, metres. rotor_speed Numeric value. operational rotation speed, revolutions/min. blade_pitch Numeric value. average blade pitch angle, angle blade surface rotor plane (\\(\\gamma\\)), radians. flight_type character string, either 'flapping' 'gliding', indicating species' characteristic flight type. wing_span Numeric value. wingspan bird (\\(W\\)), metres. flight_speed Numeric value. bird flying speed (\\(v\\)), metres/sec. body_lt Numeric value. length bird (\\(L\\)), metres. n_blades integer, number blades rotor (\\(b\\)). prop_upwind Numeric value 0-1 giving proportion flights upwind - defaults 0.5. avoidance_rate numeric value within interval \\([0, 1]\\). avoidance rate, expressing probability bird flying collision course turbine take evading action avoid collision. flux_factor vector containing flux factor month mth_prop_oper numeric vector, proportion time turbines operational per month. lac_factor numerical value, large array correction factor. Defaults 1, meaning large array correction applicable.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/crm_opt4.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of collisions under model Option 4 ‚Äî crm_opt4","text":"numeric vector, expected number collisions per month based model option 4","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/crm_opt4.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Number of collisions under model Option 4 ‚Äî crm_opt4","text":"","code":"rotor_grids <- generate_rotor_grids(yinc = 0.05, xinc = 0.05, chord_prof_5MW)   site_fhd_dat <- Johnston_Flight_heights_SOSS %>%       dplyr::filter(variable==\"Gannet.est\") %>%       dplyr::select(height,prop)   site_fhd <- site_fhd_dat$prop   surv_fhd_at_rotor <-     get_fhd_rotor(       hub_height = 150,       fhd = site_fhd,       rotor_radius = 120,       tidal_offset = 2.5,       yinc = 0.05)    flux_fct <- get_flux_factor(       n_turbines = 100,       rotor_radius = 120,       flight_speed = 13.1,       bird_dens = c(1.19,0.85,1.05,1.45,1.41,1.45,1.12,1.45,0.93,0.902,1.06,1.23),       daynight_hrs = Day_Length(52),       noct_activity = 0.5       )  turb_oper <- data.frame(    month = month.abb,    prop_oper = runif(12,0.5,0.8)    ) turb_oper_month <- turb_oper$prop_oper  crm_opt4(   rotor_grids = rotor_grids,   d_y_surv = surv_fhd_at_rotor,   rotor_radius = 120,   blade_width = 5,   rotor_speed = 15,   blade_pitch = 15,   flight_type = \"flapping\",   wing_span = 1.01,   flight_speed = 13.1,   body_lt = 0.85,   n_blades = 3,   prop_upwind = 0.5,   avoidance_rate = 0.981,   flux_factor = flux_fct,   mth_prop_oper = turb_oper_month,   lac_factor = 0.9998299   ) #>  [1]  8.056472  5.196662  7.819123 12.413462 13.703347 10.608460  7.178322 #>  [8] 11.743893  5.966451  4.930470  6.908438  7.968039"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/dens_tnorm_wide_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Example of Truncated Normal parameters for monthly estimates of bird density ‚Äî dens_tnorm_wide_example","title":"Example of Truncated Normal parameters for monthly estimates of bird density ‚Äî dens_tnorm_wide_example","text":"data frame (fake) monthly bird density parameters three seabird species.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/dens_tnorm_wide_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example of Truncated Normal parameters for monthly estimates of bird density ‚Äî dens_tnorm_wide_example","text":"","code":"dens_tnorm_wide_example"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/dens_tnorm_wide_example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example of Truncated Normal parameters for monthly estimates of bird density ‚Äî dens_tnorm_wide_example","text":"3 x 25 data frame, monthly density parameters (columns) 3 species (rows). Columns include: Species Species name Jan January mean density JanSD SD density January Feb February mean density FebSD SD density February","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/dens_tnorm_wide_example.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example of Truncated Normal parameters for monthly estimates of bird density ‚Äî dens_tnorm_wide_example","text":"Intended illustrate application stoch_scrm() multiple scenario setting, parameter data available tables wide format.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/format_months.html","id":null,"dir":"Reference","previous_headings":"","what":"Format any month name to three letter code ‚Äî format_months","title":"Format any month name to three letter code ‚Äî format_months","text":"Format month name three letter code","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/format_months.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format any month name to three letter code ‚Äî format_months","text":"","code":"format_months(months)"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/format_months.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format any month name to three letter code ‚Äî format_months","text":"months character string vector. name month","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/format_months.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format any month name to three letter code ‚Äî format_months","text":"","code":"format_months(\"January\") #> [1] \"Jan\""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/generate_rotor_grids.html","id":null,"dir":"Reference","previous_headings":"","what":"Geometric attributes at equidistant points within the rotor's unit circle ‚Äî generate_rotor_grids","title":"Geometric attributes at equidistant points within the rotor's unit circle ‚Äî generate_rotor_grids","text":"Generates list grids containing geometric attributes rotor disk equidistant locations, taking center rotor reference point overlaying left-half rotor disk. size grid cells determined xinc yinc, values map properties rotor cell's location.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/generate_rotor_grids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geometric attributes at equidistant points within the rotor's unit circle ‚Äî generate_rotor_grids","text":"","code":"generate_rotor_grids(yinc = 0.05, xinc = 0.05, chord_prof)"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/generate_rotor_grids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Geometric attributes at equidistant points within the rotor's unit circle ‚Äî generate_rotor_grids","text":"yinc, xinc numeric values, grid increments along y-axis x-axis (.e. grid cell dimensions) chord_prof data frame chord taper profile rotor blade. Function expects two named columns: pp_radius, equidistant intervals radius bird passage point, proportion rotor_radius, within range \\([0, 1]\\). chord, chord width pp_radius, proportion blade_width. Defaults generic profile typical modern 5MW turbine. See chord_prof_5MW() details.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/generate_rotor_grids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Geometric attributes at equidistant points within the rotor's unit circle ‚Äî generate_rotor_grids","text":"list following elements, taking center rotor origin rotor's plane: x_grid, 2D array horizontal distances rotor's horizontal axis, proportion rotor radius, grid point y_grid, 2D array vertical distances rotor's vertical axis, proportion rotor radius, grid point r_grid, 2D array radial distances rotor center, proportion rotor radius, grid point phi_grid, 2D array angles, relative vertical, grid point chord_grid, 2D array blade chord width grid point elements representative left-half rotor circle","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/generate_rotor_grids.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Geometric attributes at equidistant points within the rotor's unit circle ‚Äî generate_rotor_grids","text":"grids required alternative approach calculation probability collision extended model (.e. non-uniform flight distribution risk height). Functions xrisksum2, pcollxy pcoll used Masden & Cook implementation (PCollFunctions.r script) based Visual Basic computations available original Band worksheet. Visual Basic code devised deterministic context, .e. one single set collision calculations one given species turbine scenario. However, stochastic context, potentially thousands collision calculations performed per species turbine scenario, became clear xrisksum2 associated functions highly inefficient task hand. alternative approach streamlines computations calculating (relative) rotor geometric attributes outside stochastic sampling loop, remain constant iterations. elements, calculated via generate_rotor_grids, applied sampled parameters via vectorized operations. number calculations per iteration thence substantially reduced, leading significant gains computational speed - 30x faster Masden's implementation 1000 iterations run.","code":""},{"path":[]},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/generate_rotor_grids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Geometric attributes at equidistant points within the rotor's unit circle ‚Äî generate_rotor_grids","text":"","code":"rotor_grids <- generate_rotor_grids(yinc = 0.05, xinc = 0.05, chord_prof_5MW)"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/generic_fhd_bootstraps.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrap samples of generic FHDs of 25 seabird species ‚Äî generic_fhd_bootstraps","title":"Bootstrap samples of generic FHDs of 25 seabird species ‚Äî generic_fhd_bootstraps","text":"list object comprising bootstrap samples generic flight height distribution (FHD) 25 seabird species. FHD expressed proportion bird flights 1 metre height intervals.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/generic_fhd_bootstraps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootstrap samples of generic FHDs of 25 seabird species ‚Äî generic_fhd_bootstraps","text":"","code":"generic_fhd_bootstraps"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/generic_fhd_bootstraps.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Bootstrap samples of generic FHDs of 25 seabird species ‚Äî generic_fhd_bootstraps","text":"list object 25 elements, one species, containing data frame 500 bootstrap samples distribution bird flights height. nested data frame contains: height Height sea level, metres. First element represents 0-1 meters height band, height interval 1 metre. bootId_1 First bootstrap sample proportion birds flights within height interval bootId_200 200th bootstrap sample proportion birds flights within height interval","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/generic_fhd_bootstraps.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Bootstrap samples of generic FHDs of 25 seabird species ‚Äî generic_fhd_bootstraps","text":"https://besjournals.onlinelibrary.wiley.com/doi/full/10.1111/1365-2664.12191","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_avg_prob_collision.html","id":null,"dir":"Reference","previous_headings":"","what":"Average single transit collision risk with no avoidance ‚Äî get_avg_prob_collision","title":"Average single transit collision risk with no avoidance ‚Äî get_avg_prob_collision","text":"Calculate average probability collision single bird transit point across rotor, assuming avoidance action. Required Basic model calculations, flights collision risk height assumed uniformly distributed.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_avg_prob_collision.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Average single transit collision risk with no avoidance ‚Äî get_avg_prob_collision","text":"","code":"get_avg_prob_collision(   flight_speed,   body_lt,   wing_span,   prop_upwind = 0.5,   flap_glide,   rotor_speed,   rotor_radius,   blade_width,   blade_pitch,   n_blades,   chord_prof = chord_prof_5MW )"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_avg_prob_collision.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Average single transit collision risk with no avoidance ‚Äî get_avg_prob_collision","text":"flight_speed Numeric value. bird flying speed (\\(v\\)), metres/sec. body_lt Numeric value. length bird (\\(L\\)), metres. wing_span Numeric value. wingspan bird (\\(W\\)), metres. prop_upwind Numeric value 0-1 giving proportion flights upwind - defaults 0.5. flap_glide Numeric value representing correction flapping gliding birds (\\(F\\)). rotor_speed Numeric value. operational rotation speed, revolutions/min. rotor_radius Numeric value. radius rotor (\\(R\\)), metres. blade_width Numeric value, giving maximum blade width, metres. blade_pitch Numeric value. average blade pitch angle, angle blade surface rotor plane (\\(\\gamma\\)), radians. n_blades integer, number blades rotor (\\(b\\)). chord_prof data frame chord taper profile rotor blade. Function expects two named columns: pp_radius, equidistant intervals radius bird passage point, proportion rotor_radius, within range \\([0, 1]\\). chord, chord width pp_radius, proportion blade_width. Defaults generic profile typical modern 5MW turbine. See chord_prof_5MW() details.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_avg_prob_collision.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Average single transit collision risk with no avoidance ‚Äî get_avg_prob_collision","text":"numeric value. average collision probability (risk) bird flying point rotor circle area.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_avg_prob_collision.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Average single transit collision risk with no avoidance ‚Äî get_avg_prob_collision","text":"Methodology assumptions underpinning get_avg_prob_collision described \"Stage C\" Band (2012).","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_avg_prob_collision.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Average single transit collision risk with no avoidance ‚Äî get_avg_prob_collision","text":"","code":"get_avg_prob_collision(            flight_speed = 13.1,            body_lt = 0.85,            wing_span = 1.01,            prop_upwind = 0.5,            flap_glide = 1,            rotor_speed = 15,            rotor_radius = 120,            blade_width = 5,            blade_pitch = 15,            n_blades = 3,            chord_prof = chord_prof_5MW            ) #> [1] 0.1494609"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_collisions_basic.html","id":null,"dir":"Reference","previous_headings":"","what":"Get expected collisions based on the basic model ‚Äî get_collisions_basic","title":"Get expected collisions based on the basic model ‚Äî get_collisions_basic","text":"Provides number collisions expected occur month. basic model assumes uniform distribution bird flights risk height (.e. min max rotor height).","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_collisions_basic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get expected collisions based on the basic model ‚Äî get_collisions_basic","text":"","code":"get_collisions_basic(   n_transits,   avg_prob_coll,   mth_prop_oper,   avoidance_rate,   lac_factor = 1 )"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_collisions_basic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get expected collisions based on the basic model ‚Äî get_collisions_basic","text":"n_transits numeric vector, estimated number bird flights crossing rotors wind farm time period. avg_prob_coll numeric value, average probability collision single bird transit rotor, assuming avoidance action (\\(p_{average}\\)). mth_prop_oper numeric vector, proportion time turbines operational per month. avoidance_rate numeric value within interval \\([0, 1]\\). avoidance rate, expressing probability bird flying collision course turbine take evading action avoid collision. lac_factor numerical value, large array correction factor. Defaults 1, meaning large array correction applicable.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_collisions_basic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get expected collisions based on the basic model ‚Äî get_collisions_basic","text":"numeric vector. expected number collisions time periods","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_collisions_basic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get expected collisions based on the basic model ‚Äî get_collisions_basic","text":"","code":"turb_oper <- data.frame(  month = month.abb,  prop_oper = runif(12,0.5,0.8)  )  mth_oper_month <- turb_oper$prop_oper   flux_factor <- get_flux_factor(    n_turbines = 100,    rotor_radius = 120,    flight_speed = 13.1,    bird_dens = c(1.19,0.85,1.05,1.45,1.41,1.45,1.12,1.45,0.93,0.902,1.06,1.23),    daynight_hrs = Day_Length(52),    noct_activity = 0.5  )   prop_crh_surv <- 0.13   n_transits_opt1 <- flux_factor * prop_crh_surv   get_collisions_basic(    n_transits = n_transits_opt1,    avg_prob_coll = 0.1494609,    mth_prop_oper = mth_oper_month,    avoidance_rate = 0.989,    lac_factor = 0.9998287  ) #>  [1]  87.19937  57.35788  77.87907 119.60359  92.24973  98.24149  83.10316 #>  [8] 126.01877  50.99295  61.68861  54.76806  85.28255"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_collisions_extended.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of collisions based on the extended model ‚Äî get_collisions_extended","title":"Number of collisions based on the extended model ‚Äî get_collisions_extended","text":"Calculates expected number collisions extended model, .e. taking account distribution bird flight heights risk height (minimum  maximum height rotor blade)","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_collisions_extended.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of collisions based on the extended model ‚Äî get_collisions_extended","text":"","code":"get_collisions_extended(   rotor_grids,   d_y,   rotor_radius,   blade_width,   rotor_speed,   blade_pitch,   flight_type,   wing_span,   flight_speed,   body_lt,   n_blades,   prop_upwind,   avoidance_rate,   flux_factor,   mth_prop_oper,   lac_factor )"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_collisions_extended.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of collisions based on the extended model ‚Äî get_collisions_extended","text":"rotor_grids list object containing geometric attributes rotor equidistant points within unit circle. object built via function generate_rotor_grids(). d_y vector proportion birds height bands within rotor disc rotor_radius Numeric value. radius rotor (\\(R\\)), metres. blade_width Numeric value, giving maximum blade width, metres. rotor_speed Numeric value. operational rotation speed, revolutions/min. blade_pitch Numeric value. average blade pitch angle, angle blade surface rotor plane (\\(\\gamma\\)), radians. flight_type character string, either 'flapping' 'gliding', indicating species' characteristic flight type. wing_span Numeric value. wingspan bird (\\(W\\)), metres. flight_speed Numeric value. bird flying speed (\\(v\\)), metres/sec. body_lt Numeric value. length bird (\\(L\\)), metres. n_blades integer, number blades rotor (\\(b\\)). prop_upwind Numeric value 0-1 giving proportion flights upwind - defaults 0.5. avoidance_rate numeric value within interval \\([0, 1]\\). avoidance rate, expressing probability bird flying collision course turbine take evading action avoid collision. flux_factor vector containing flux factor month mth_prop_oper numeric vector, proportion time turbines operational per month. lac_factor numerical value, large array correction factor. Defaults 1, meaning large array correction applicable.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_collisions_extended.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of collisions based on the extended model ‚Äî get_collisions_extended","text":"Numeric vector expected number collisions per month based extended model","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_collisions_extended.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Number of collisions based on the extended model ‚Äî get_collisions_extended","text":"original Masden code extendend model (Option 3) included calculation \"Flux Integral\" \"Average collision risk single rotor transit\". quantities required calculation collisions extended model, used anywhere else package. Therefore, calculations dropped current implementation keep computations minimum required.","code":""},{"path":[]},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_collisions_extended.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Number of collisions based on the extended model ‚Äî get_collisions_extended","text":"","code":"rotor_grids <- generate_rotor_grids(yinc = 0.05, xinc = 0.05, chord_prof_5MW)   gen_fhd_dat <- Johnston_Flight_heights_SOSS %>%       dplyr::filter(variable==\"Gannet.est\") %>%       dplyr::select(height,prop)   gen_fhd <- gen_fhd_dat$prop   gen_fhd_at_rotor <-     get_fhd_rotor(       hub_height = 150,       fhd = gen_fhd,       rotor_radius = 120,       tidal_offset = 2.5,       yinc = 0.05)    flux_fct <- get_flux_factor(       n_turbines = 100,       rotor_radius = 120,       flight_speed = 13.1,       bird_dens = c(1.19,0.85,1.05,1.45,1.41,1.45,1.12,1.45,0.93,0.902,1.06,1.23),       daynight_hrs = Day_Length(52),       noct_activity = 0.5       )  turb_oper <- data.frame(    month = month.abb,    prop_oper = runif(12,0.5,0.8)    ) turb_oper_month <- turb_oper$prop_oper  get_collisions_extended(   rotor_grids = rotor_grids,   d_y = gen_fhd_at_rotor, # ... with generic FHD = Option 3, with site FHD = Option 4   rotor_radius = 120,   blade_width = 5,   rotor_speed = 15,   blade_pitch = 15,   flight_type = \"flapping\",   wing_span = 1.01,   flight_speed = 13.1,   body_lt = 0.85,   n_blades = 3,   prop_upwind = 0.5,   avoidance_rate = 0.981,   flux_factor = flux_fct,   mth_prop_oper = turb_oper_month,   lac_factor = 0.9998299   ) #>  [1]  9.336789  5.485682  5.985183 12.928915 12.097790 11.408557 10.332208 #>  [8] 11.437890  7.313314  7.246310  7.954811  9.391212"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_fhd_rotor.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the proportion of birds at height bands along the rotor ‚Äî get_fhd_rotor","title":"Returns the proportion of birds at height bands along the rotor ‚Äî get_fhd_rotor","text":"Derive expected proportion bird flights equidistant height bands lowest highest points rotor. words, returns flight height distribution collision risk (\\(d(y)\\)).","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_fhd_rotor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the proportion of birds at height bands along the rotor ‚Äî get_fhd_rotor","text":"","code":"get_fhd_rotor(hub_height, fhd, rotor_radius, tidal_offset, yinc = 0.05)"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_fhd_rotor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the proportion of birds at height bands along the rotor ‚Äî get_fhd_rotor","text":"hub_height numeric value, height rotor hub (\\(H\\)), given sum rotor radius minimum blade clearance highest astronomical tide (HAT), metres. fhd numeric vector, proportion bird flights per-1 metre height bands sea surface, starting 0-1 metre band. rotor_radius numeric value, radius rotor (\\(R\\)), metres. tidal_offset numeric value, tidal offset, difference HAT mean sea level, metres. yinc numeric value, increment height bands lowest highest points rotor, expressed proportion rotor radius (defaults 0.05).","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_fhd_rotor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the proportion of birds at height bands along the rotor ‚Äî get_fhd_rotor","text":"numeric vector, flight height distribution collision risk, .e. minimum maximum rotor height.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_fhd_rotor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns the proportion of birds at height bands along the rotor ‚Äî get_fhd_rotor","text":"","code":"gen_fhd_dat <- Johnston_Flight_heights_SOSS %>%        dplyr::filter(variable==\"Gannet.est\") %>%        dplyr::select(height,prop)  if(is.data.frame(gen_fhd_dat)) gen_fhd <- gen_fhd_dat$prop   get_fhd_rotor(    hub_height = 150,    fhd = gen_fhd,    rotor_radius = 120,    tidal_offset = 2.5,    yinc = 0.05) #>  [1] 4.080875e-01 2.184714e-01 1.166795e-01 6.212004e-02 3.294138e-02 #>  [6] 1.738272e-02 9.120000e-03 4.746000e-03 2.454000e-03 1.252200e-03 #> [11] 6.348000e-04 3.174000e-04 1.560000e-04 7.566000e-05 3.600000e-05 #> [16] 1.680000e-05 7.674000e-06 3.426000e-06 1.488000e-06 6.270000e-07 #> [21] 2.568000e-07 1.015200e-07 3.870000e-08 1.422000e-08 5.004000e-09 #> [26] 1.680000e-09 5.406000e-10 1.650000e-10 4.776000e-11 1.305600e-11 #> [31] 3.348000e-12 8.058000e-13 1.812000e-13 3.804000e-14 7.374000e-15 #> [36] 1.321200e-15 2.184000e-16 3.300000e-17 4.554000e-18 5.706000e-19 #> [41] 6.468000e-20"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_flux_factor.html","id":null,"dir":"Reference","previous_headings":"","what":"Flux factor ‚Äî get_flux_factor","title":"Flux factor ‚Äî get_flux_factor","text":"Returns flux factor, expressing total number bird flights rotors wind farm per month flights occurred within rotor's circle area turbines, .e. proportion risk height avoidance level taken account.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_flux_factor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flux factor ‚Äî get_flux_factor","text":"","code":"get_flux_factor(   n_turbines,   rotor_radius,   flight_speed,   bird_dens,   daynight_hrs,   noct_activity )"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_flux_factor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flux factor ‚Äî get_flux_factor","text":"n_turbines integer, number turbines wind farm (\\(T\\)). rotor_radius numeric value, radius rotor (\\(R\\)), metres. flight_speed numeric value, bird flight speed (\\(v\\)), metres/sec. bird_dens numeric vector daytime -flight bird densities (\\(D_A\\)), month, birds/km^2. daynight_hrs data frame total number daylight hours night hours wind farm site's location, month. must contain, least, following columns: Month, name month. Day, daylight duration, decimal hours. Night, night time duration, decimal hour noct_activity numeric value. nocturnal flight activity level, expressed proportion daytime activity levels (\\(f_night\\)).","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_flux_factor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flux factor ‚Äî get_flux_factor","text":"number bird flights potentially transiting rotors time period (assuming avoidance), flights occur within rotor's circular area.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_flux_factor.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Flux factor ‚Äî get_flux_factor","text":"flux factor used model calculations. Methodology assumptions underpinning get_flux_factor described \"Stage B\" Band (2012)","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_flux_factor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flux factor ‚Äî get_flux_factor","text":"","code":"get_flux_factor(       n_turbines = 100,       rotor_radius = 120,       flight_speed = 13.1,       bird_dens = c(1.19,0.85,1.05,1.45,1.41,1.45,1.12,1.45,0.93,0.902,1.06,1.23),       daynight_hrs = Day_Length(52),       noct_activity = 0.5       ) #>  [1] 530055.8 358508.1 518368.7 731968.6 770303.2 785694.9 620622.8 772488.3 #>  [9] 455350.9 431349.1 464701.3 539745.3"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_lac_factor.html","id":null,"dir":"Reference","previous_headings":"","what":"Large array correction factor ‚Äî get_lac_factor","title":"Large array correction factor ‚Äî get_lac_factor","text":"correction factor large windfarms large array turbines, take account depletion bird density later rows site.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_lac_factor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Large array correction factor ‚Äî get_lac_factor","text":"","code":"get_lac_factor(   n_turbines,   rotor_radius,   avoidance_rate,   avg_prob_coll,   avg_prop_operational,   wf_width )"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_lac_factor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Large array correction factor ‚Äî get_lac_factor","text":"n_turbines Integer, number turbines wind farm (\\(T\\)). rotor_radius Numeric value, radius rotor (\\(R\\)), metres. avoidance_rate Numeric value within interval \\([0, 1]\\). species avoidance rate, expressing probability bird flying collision course turbine take evading action avoid collision. (\\(\\)). avg_prob_coll Numeric value, average probability collision single bird transit rotor, assuming avoidance action (\\(p_average\\)). avg_prop_operational Numeric value, average proportion time turbines operational year. wf_width Numeric value, approximate longitudinal width wind farm, kilometres (\\(w\\)).","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_lac_factor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Large array correction factor ‚Äî get_lac_factor","text":"large array correction factor applied","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_lac_factor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Large array correction factor ‚Äî get_lac_factor","text":"","code":"get_lac_factor(      n_turbines = 100,      rotor_radius = 120,      avoidance_rate = 0.989,      avg_prob_coll = 0.1494609,      avg_prop_operational = 0.6388292,      wf_width = 52      ) #> [1] 0.9998287"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_mig_flux_factor.html","id":null,"dir":"Reference","previous_headings":"","what":"Migration Flux factor ‚Äî get_mig_flux_factor","title":"Migration Flux factor ‚Äî get_mig_flux_factor","text":"Returns migratory flux factor, expressing total number bird flights rotors wind farm per month, flights occur within rotor's circle area turbines, assuming birds take avoiding action.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_mig_flux_factor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Migration Flux factor ‚Äî get_mig_flux_factor","text":"","code":"get_mig_flux_factor(n_turbines, rotor_radius, wf_width, popn_est)"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_mig_flux_factor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Migration Flux factor ‚Äî get_mig_flux_factor","text":"n_turbines integer. number turbines wind farm (\\(T\\)). rotor_radius integer. radius rotor (\\(R\\)), metres wf_width integer. width (km) popn_est integer. population estimate spatial line sampling technique","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_mig_flux_factor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Migration Flux factor ‚Äî get_mig_flux_factor","text":"number bird flights potentially transiting rotors time period (assuming avoidance), flights occur within rotor's circular area","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_mig_flux_factor.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Migration Flux factor ‚Äî get_mig_flux_factor","text":"flux factor used model calculations. Methodology assumptions underpinning get_mig_flux_factor described \"Stage B\" Band (2012)","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_mig_flux_factor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Migration Flux factor ‚Äî get_mig_flux_factor","text":"","code":"get_mig_flux_factor(      n_turbines = 100,      rotor_radius = 120,      wf_width = 51,      popn_est = 10000 ) #> [1] 3695.991"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_pcoll_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Grid of probabilities of single transit collision at points in rotor circle ‚Äî get_pcoll_grid","title":"Grid of probabilities of single transit collision at points in rotor circle ‚Äî get_pcoll_grid","text":"Calculates single transit collision risk grid points (X, Y) inside left-half rotor circle, given flight direction (upwind downwind), assuming avoidance action. origin (X, Y) coordinates rotor center","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_pcoll_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grid of probabilities of single transit collision at points in rotor circle ‚Äî get_pcoll_grid","text":"","code":"get_pcoll_grid(   rotor_grids,   direction,   rotor_radius,   blade_width,   rotor_speed,   blade_pitch,   flight_type,   n_blades,   flight_speed,   wing_span,   body_lt )"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_pcoll_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grid of probabilities of single transit collision at points in rotor circle ‚Äî get_pcoll_grid","text":"rotor_grids list object containing geometric attributes rotor equidistant points within unit circle. object built via function generate_rotor_grids(). direction integer, indicating flight direction: 1 upwind; -1 downwind. rotor_radius Numeric value. radius rotor (\\(R\\)), metres. blade_width Numeric value, giving maximum blade width, metres. rotor_speed Numeric value. operational rotation speed, revolutions/min. blade_pitch Numeric value. average blade pitch angle, angle blade surface rotor plane (\\(\\gamma\\)), radians. flight_type character string, either 'flapping' 'gliding', indicating species' characteristic flight type. n_blades integer, number blades rotor (\\(b\\)). flight_speed Numeric value. bird flying speed (\\(v\\)), metres/sec. wing_span Numeric value. wingspan bird (\\(W\\)), metres. body_lt Numeric value. length bird (\\(L\\)), metres.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_pcoll_grid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Grid of probabilities of single transit collision at points in rotor circle ‚Äî get_pcoll_grid","text":"Methodology assumptions underpinning get_pcoll_grid described section \"Extended Approach Taking Account Flight Heights\" Band (2012). Note collision risk calculations based equation (3) \"Stage C\" section, using (X, Y) coordinates reference transit points instead equivalent (r, phi) coordinates.","code":""},{"path":[]},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_pcoll_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Grid of probabilities of single transit collision at points in rotor circle ‚Äî get_pcoll_grid","text":"","code":"rotor_grids <- generate_rotor_grids(yinc = 0.05, xinc = 0.05, chord_prof_5MW)    get_pcoll_grid(     rotor_grids = rotor_grids,     direction = 1,     rotor_radius = 120,     blade_width = 5,     rotor_speed = 15,     blade_pitch = 15,     flight_type = \"flapping\",     n_blades = 3,     flight_speed = 13.1,     wing_span = 1.01,     body_lt = 0.85) #>             [,1]       [,2]       [,3]       [,4]       [,5]       [,6] #>  [1,] 0.04866412         NA         NA         NA         NA         NA #>  [2,] 0.08952224 0.08845290 0.08525201 0.07994061 0.07255312 0.06313622 #>  [3,] 0.09947161 0.09919728 0.09837615 0.09701378 0.09511924 0.09270487 #>  [4,] 0.11096121 0.11062615 0.10962345 0.10796045 0.10564912 0.10270571 #>  [5,] 0.11724040 0.11704657 0.11646643 0.11550404 0.11416607 0.11246162 #>  [6,] 0.12668401 0.12637326 0.12544353 0.12390225 0.12176163 0.11903827 #>  [7,] 0.13423551 0.13397046 0.13317732 0.13186208 0.13003472 0.12770909 #>  [8,] 0.14314586 0.14281006 0.14180530 0.14013959 0.13782636 0.13488438 #>  [9,] 0.15167975 0.15133351 0.15029709 0.14857766 0.14618776 0.14314586 #> [10,] 0.15973451 0.15938135 0.15832309 0.15656413 0.15411369 0.15098765 #> [11,] 0.16560718 0.16533047 0.16449766 0.16310249 0.16113972 0.15832309 #> [12,] 0.17071654 0.17045781 0.16967283 0.16833969 0.16643411 0.16394052 #> [13,] 0.17477635 0.17456159 0.17389488 0.17272016 0.17097366 0.16860849 #> [14,] 0.18019619 0.17988207 0.17888884 0.17709524 0.17456159 0.17247714 #> [15,] 0.18172140 0.18171552 0.18156066 0.18093833 0.17922782 0.17595458 #> [16,] 0.17436118 0.17528390 0.17768346 0.18074417 0.18146894 0.17988207 #> [17,] 0.15482433 0.15754598 0.16472217 0.17436118 0.17963738 0.18146894 #> [18,] 0.12381116 0.12953693 0.14365920 0.16008846 0.17436118 0.18074417 #> [19,] 0.07632676 0.09001476 0.11720842 0.14365920 0.16472217 0.17768346 #> [20,] 0.16514020 0.07765600 0.09001476 0.12953693 0.15754598 0.17528390 #> [21,] 1.00000000 0.16514020 0.07632676 0.12381116 0.15482433 0.17436118 #> [22,] 0.16514020 0.07765600 0.09001476 0.12953693 0.15754598 0.17528390 #> [23,] 0.07632676 0.09001476 0.11720842 0.14365920 0.16472217 0.17768346 #> [24,] 0.12381116 0.12953693 0.14365920 0.16008846 0.17436118 0.18074417 #> [25,] 0.15482433 0.15754598 0.16472217 0.17436118 0.17963738 0.18146894 #> [26,] 0.17436118 0.17528390 0.17768346 0.18074417 0.18146894 0.17988207 #> [27,] 0.18172140 0.18171552 0.18156066 0.18093833 0.17922782 0.17595458 #> [28,] 0.18019619 0.17988207 0.17888884 0.17709524 0.17456159 0.17247714 #> [29,] 0.17477635 0.17456159 0.17389488 0.17272016 0.17097366 0.16860849 #> [30,] 0.17071654 0.17045781 0.16967283 0.16833969 0.16643411 0.16394052 #> [31,] 0.16560718 0.16533047 0.16449766 0.16310249 0.16113972 0.15832309 #> [32,] 0.15973451 0.15938135 0.15832309 0.15656413 0.15411369 0.15098765 #> [33,] 0.15167975 0.15133351 0.15029709 0.14857766 0.14618776 0.14314586 #> [34,] 0.14314586 0.14281006 0.14180530 0.14013959 0.13782636 0.13488438 #> [35,] 0.13423551 0.13397046 0.13317732 0.13186208 0.13003472 0.12770909 #> [36,] 0.12668401 0.12637326 0.12544353 0.12390225 0.12176163 0.11903827 #> [37,] 0.11724040 0.11704657 0.11646643 0.11550404 0.11416607 0.11246162 #> [38,] 0.11096121 0.11062615 0.10962345 0.10796045 0.10564912 0.10270571 #> [39,] 0.09947161 0.09919728 0.09837615 0.09701378 0.09511924 0.09270487 #> [40,] 0.08952224 0.08845290 0.08525201 0.07994061 0.07255312 0.06313622 #> [41,] 0.04866412         NA         NA         NA         NA         NA #>             [,7]       [,8]       [,9]      [,10]      [,11]      [,12] #>  [1,]         NA         NA         NA         NA         NA         NA #>  [2,] 0.05174757 0.04866412         NA         NA         NA         NA #>  [3,] 0.08978589 0.07676768 0.06105577 0.04866412         NA         NA #>  [4,] 0.09919728 0.09565903 0.09163941 0.07994061 0.06001719 0.04866412 #>  [5,] 0.10995727 0.10564912 0.10076073 0.09592938 0.09084334 0.07255312 #>  [6,] 0.11627350 0.11378577 0.11096121 0.10532051 0.09919728 0.09350701 #>  [7,] 0.12451753 0.12054728 0.11646643 0.11321698 0.10862443 0.10173151 #>  [8,] 0.13186208 0.12848134 0.12420969 0.11903827 0.11473816 0.11062615 #>  [9,] 0.13947643 0.13520948 0.13107693 0.12668401 0.12085026 0.11550404 #> [10,] 0.14720948 0.14281006 0.13782636 0.13265022 0.12770909 0.12145744 #> [11,] 0.15446280 0.14995241 0.14483146 0.13914552 0.13317732 0.12770909 #> [12,] 0.16085879 0.15656413 0.15133351 0.14550875 0.13914552 0.13265022 #> [13,] 0.16560718 0.16198185 0.15726693 0.15133351 0.14483146 0.13782636 #> [14,] 0.16967283 0.16615904 0.16198185 0.15656413 0.14995241 0.14281006 #> [15,] 0.17296068 0.16967283 0.16560718 0.16085879 0.15446280 0.14720948 #> [16,] 0.17595458 0.17247714 0.16860849 0.16394052 0.15832309 0.15098765 #> [17,] 0.17922782 0.17456159 0.17097366 0.16643411 0.16113972 0.15411369 #> [18,] 0.18093833 0.17709524 0.17272016 0.16833969 0.16310249 0.15656413 #> [19,] 0.18156066 0.17888884 0.17389488 0.16967283 0.16449766 0.15832309 #> [20,] 0.18171552 0.17988207 0.17456159 0.17045781 0.16533047 0.15938135 #> [21,] 0.18172140 0.18019619 0.17477635 0.17071654 0.16560718 0.15973451 #> [22,] 0.18171552 0.17988207 0.17456159 0.17045781 0.16533047 0.15938135 #> [23,] 0.18156066 0.17888884 0.17389488 0.16967283 0.16449766 0.15832309 #> [24,] 0.18093833 0.17709524 0.17272016 0.16833969 0.16310249 0.15656413 #> [25,] 0.17922782 0.17456159 0.17097366 0.16643411 0.16113972 0.15411369 #> [26,] 0.17595458 0.17247714 0.16860849 0.16394052 0.15832309 0.15098765 #> [27,] 0.17296068 0.16967283 0.16560718 0.16085879 0.15446280 0.14720948 #> [28,] 0.16967283 0.16615904 0.16198185 0.15656413 0.14995241 0.14281006 #> [29,] 0.16560718 0.16198185 0.15726693 0.15133351 0.14483146 0.13782636 #> [30,] 0.16085879 0.15656413 0.15133351 0.14550875 0.13914552 0.13265022 #> [31,] 0.15446280 0.14995241 0.14483146 0.13914552 0.13317732 0.12770909 #> [32,] 0.14720948 0.14281006 0.13782636 0.13265022 0.12770909 0.12145744 #> [33,] 0.13947643 0.13520948 0.13107693 0.12668401 0.12085026 0.11550404 #> [34,] 0.13186208 0.12848134 0.12420969 0.11903827 0.11473816 0.11062615 #> [35,] 0.12451753 0.12054728 0.11646643 0.11321698 0.10862443 0.10173151 #> [36,] 0.11627350 0.11378577 0.11096121 0.10532051 0.09919728 0.09350701 #> [37,] 0.10995727 0.10564912 0.10076073 0.09592938 0.09084334 0.07255312 #> [38,] 0.09919728 0.09565903 0.09163941 0.07994061 0.06001719 0.04866412 #> [39,] 0.08978589 0.07676768 0.06105577 0.04866412         NA         NA #> [40,] 0.05174757 0.04866412         NA         NA         NA         NA #> [41,]         NA         NA         NA         NA         NA         NA #>            [,13]      [,14]      [,15]      [,16]      [,17]      [,18] #>  [1,]         NA         NA         NA         NA         NA         NA #>  [2,]         NA         NA         NA         NA         NA         NA #>  [3,]         NA         NA         NA         NA         NA         NA #>  [4,]         NA         NA         NA         NA         NA         NA #>  [5,] 0.04866412         NA         NA         NA         NA         NA #>  [6,] 0.08100056 0.05484060 0.04866412         NA         NA         NA #>  [7,] 0.09511924 0.08525201 0.05690799 0.04866412         NA         NA #>  [8,] 0.10303121 0.09565903 0.08525201 0.05484060 0.04866412         NA #>  [9,] 0.11114801 0.10303121 0.09511924 0.08100056 0.04866412 0.04866412 #> [10,] 0.11550404 0.11062615 0.10173151 0.09350701 0.07255312 0.04866412 #> [11,] 0.12085026 0.11473816 0.10862443 0.09919728 0.09084334 0.06001719 #> [12,] 0.12668401 0.11903827 0.11321698 0.10532051 0.09592938 0.07994061 #> [13,] 0.13107693 0.12420969 0.11646643 0.11096121 0.10076073 0.09163941 #> [14,] 0.13520948 0.12848134 0.12054728 0.11378577 0.10564912 0.09565903 #> [15,] 0.13947643 0.13186208 0.12451753 0.11627350 0.10995727 0.09919728 #> [16,] 0.14314586 0.13488438 0.12770909 0.11903827 0.11246162 0.10270571 #> [17,] 0.14618776 0.13782636 0.13003472 0.12176163 0.11416607 0.10564912 #> [18,] 0.14857766 0.14013959 0.13186208 0.12390225 0.11550404 0.10796045 #> [19,] 0.15029709 0.14180530 0.13317732 0.12544353 0.11646643 0.10962345 #> [20,] 0.15133351 0.14281006 0.13397046 0.12637326 0.11704657 0.11062615 #> [21,] 0.15167975 0.14314586 0.13423551 0.12668401 0.11724040 0.11096121 #> [22,] 0.15133351 0.14281006 0.13397046 0.12637326 0.11704657 0.11062615 #> [23,] 0.15029709 0.14180530 0.13317732 0.12544353 0.11646643 0.10962345 #> [24,] 0.14857766 0.14013959 0.13186208 0.12390225 0.11550404 0.10796045 #> [25,] 0.14618776 0.13782636 0.13003472 0.12176163 0.11416607 0.10564912 #> [26,] 0.14314586 0.13488438 0.12770909 0.11903827 0.11246162 0.10270571 #> [27,] 0.13947643 0.13186208 0.12451753 0.11627350 0.10995727 0.09919728 #> [28,] 0.13520948 0.12848134 0.12054728 0.11378577 0.10564912 0.09565903 #> [29,] 0.13107693 0.12420969 0.11646643 0.11096121 0.10076073 0.09163941 #> [30,] 0.12668401 0.11903827 0.11321698 0.10532051 0.09592938 0.07994061 #> [31,] 0.12085026 0.11473816 0.10862443 0.09919728 0.09084334 0.06001719 #> [32,] 0.11550404 0.11062615 0.10173151 0.09350701 0.07255312 0.04866412 #> [33,] 0.11114801 0.10303121 0.09511924 0.08100056 0.04866412         NA #> [34,] 0.10303121 0.09565903 0.08525201 0.05484060 0.04866412         NA #> [35,] 0.09511924 0.08525201 0.05690799 0.04866412         NA         NA #> [36,] 0.08100056 0.05484060 0.04866412         NA         NA         NA #> [37,] 0.04866412         NA         NA         NA         NA         NA #> [38,]         NA         NA         NA         NA         NA         NA #> [39,]         NA         NA         NA         NA         NA         NA #> [40,]         NA         NA         NA         NA         NA         NA #> [41,]         NA         NA         NA         NA         NA         NA #>            [,19]      [,20]      [,21] #>  [1,]         NA         NA         NA #>  [2,]         NA         NA         NA #>  [3,]         NA         NA         NA #>  [4,]         NA         NA         NA #>  [5,]         NA         NA         NA #>  [6,]         NA         NA         NA #>  [7,]         NA         NA         NA #>  [8,]         NA         NA         NA #>  [9,]         NA         NA         NA #> [10,]         NA         NA         NA #> [11,] 0.04866412         NA         NA #> [12,] 0.04866412         NA         NA #> [13,] 0.06105577 0.04866412         NA #> [14,] 0.07676768 0.04866412         NA #> [15,] 0.08978589 0.05174757 0.04866412 #> [16,] 0.09270487 0.06313622 0.04866412 #> [17,] 0.09511924 0.07255312 0.04866412 #> [18,] 0.09701378 0.07994061 0.04866412 #> [19,] 0.09837615 0.08525201 0.04866412 #> [20,] 0.09919728 0.08845290 0.04866412 #> [21,] 0.09947161 0.08952224 0.04866412 #> [22,] 0.09919728 0.08845290 0.04866412 #> [23,] 0.09837615 0.08525201 0.04866412 #> [24,] 0.09701378 0.07994061 0.04866412 #> [25,] 0.09511924 0.07255312 0.04866412 #> [26,] 0.09270487 0.06313622 0.04866412 #> [27,] 0.08978589 0.05174757 0.04866412 #> [28,] 0.07676768 0.04866412         NA #> [29,] 0.06105577 0.04866412         NA #> [30,] 0.04866412         NA         NA #> [31,] 0.04866412         NA         NA #> [32,]         NA         NA         NA #> [33,]         NA         NA         NA #> [34,]         NA         NA         NA #> [35,]         NA         NA         NA #> [36,]         NA         NA         NA #> [37,]         NA         NA         NA #> [38,]         NA         NA         NA #> [39,]         NA         NA         NA #> [40,]         NA         NA         NA #> [41,]         NA         NA         NA"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_phi_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Grid with angles between points \\((x, y)\\) and the rotor's vertical axis ‚Äî get_phi_grid","title":"Grid with angles between points \\((x, y)\\) and the rotor's vertical axis ‚Äî get_phi_grid","text":"Given grids vertical horizontal distances rotor axes points \\((x, y)\\) inside rotor circle, get_phi_grid calculates associated radial angles, relative rotor vertical axis. Returned grid represents left-half rotor's circle.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_phi_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grid with angles between points \\((x, y)\\) and the rotor's vertical axis ‚Äî get_phi_grid","text":"","code":"get_phi_grid(x_grid, y_grid)"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_phi_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grid with angles between points \\((x, y)\\) and the rotor's vertical axis ‚Äî get_phi_grid","text":"x_grid 2D array, horizontal distances \\(x\\) rotor's vertical axis, expressed proportion rotor radius, left-half rotor circle area. y_grid 2D array, vertical distances (\\(y\\) rotor's horizontal axis, expressed proportion rotor radius, left-half rotor circle area.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_phi_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Grid with angles between points \\((x, y)\\) and the rotor's vertical axis ‚Äî get_phi_grid","text":"2D array, giving grid angles (radians) points \\((x, y)\\) inside rotor circle rotor center, left-half rotor circle area.","code":""},{"path":[]},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_phi_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Grid with angles between points \\((x, y)\\) and the rotor's vertical axis ‚Äî get_phi_grid","text":"","code":"x_grid <- get_x_grid(yinc=0.05, xinc=0.05)  y_grid <- get_y_grid(x_grid,yinc=0.05)  get_phi_grid(x_grid,y_grid) #>           [,1]       [,2]      [,3]      [,4]      [,5]      [,6]      [,7] #>  [1,] 3.141593         NA        NA        NA        NA        NA        NA #>  [2,] 3.141593 3.08900959 3.0367157 2.9849908 2.9340964 2.8842689 2.8357138 #>  [3,] 3.141593 3.08609415 3.0309354 2.9764440 2.9229237 2.8706458 2.8198421 #>  [4,] 3.141593 3.08283683 3.0244839 2.9669205 2.9105020 2.8555412 2.8023000 #>  [5,] 3.141593 3.07917384 3.0172377 2.9562447 2.8966140 2.8387078 2.7828220 #>  [6,] 3.141593 3.07502449 3.0090411 2.9441971 2.8809903 2.8198421 2.7610863 #>  [7,] 3.141593 3.07028519 2.9996956 2.9304993 2.8632930 2.7985687 2.7367009 #>  [8,] 3.141593 3.06482076 2.9889433 2.9147938 2.8430937 2.7744188 2.7091849 #>  [9,] 3.141593 3.05845142 2.9764440 2.8966140 2.8198421 2.7468015 2.6779450 #> [10,] 3.141593 3.05093277 2.9617392 2.8753406 2.7928217 2.7149652 2.6422459 #> [11,] 3.141593 3.04192400 2.9441971 2.8501359 2.7610863 2.6779450 2.6011732 #> [12,] 3.141593 3.03093543 2.9229237 2.8198421 2.7233683 2.6344941 2.5535901 #> [13,] 3.141593 3.01723766 2.8966140 2.7828220 2.6779450 2.5829933 2.4980915 #> [14,] 3.141593 2.99969560 2.8632930 2.7367009 2.6224465 2.5213432 2.4329664 #> [15,] 3.141593 2.97644398 2.8198421 2.6779450 2.5535901 2.4468544 2.3561945 #> [16,] 3.141593 2.94419709 2.7610863 2.6011732 2.4668517 2.3561945 2.2655346 #> [17,] 3.141593 2.89661399 2.6779450 2.4980915 2.3561945 2.2455373 2.1587989 #> [18,] 3.141593 2.81984210 2.5535901 2.3561945 2.2142974 2.1112158 2.0344439 #> [19,] 3.141593 2.67794504 2.3561945 2.1587989 2.0344439 1.9513027 1.8925469 #> [20,] 3.141593 2.35619449 2.0344439 1.8925469 1.8157750 1.7681919 1.7359450 #> [21,]      NaN 1.57079633 1.5707963 1.5707963 1.5707963 1.5707963 1.5707963 #> [22,] 0.000000 0.78539816 1.1071487 1.2490458 1.3258177 1.3734008 1.4056476 #> [23,] 0.000000 0.46364761 0.7853982 0.9827937 1.1071487 1.1902899 1.2490458 #> [24,] 0.000000 0.32175055 0.5880026 0.7853982 0.9272952 1.0303768 1.1071487 #> [25,] 0.000000 0.24497866 0.4636476 0.6435011 0.7853982 0.8960554 0.9827937 #> [26,] 0.000000 0.19739556 0.3805064 0.5404195 0.6747409 0.7853982 0.8760581 #> [27,] 0.000000 0.16514868 0.3217506 0.4636476 0.5880026 0.6947383 0.7853982 #> [28,] 0.000000 0.14189705 0.2782997 0.4048918 0.5191461 0.6202495 0.7086263 #> [29,] 0.000000 0.12435499 0.2449787 0.3587707 0.4636476 0.5585993 0.6435011 #> [30,] 0.000000 0.11065722 0.2186689 0.3217506 0.4182243 0.5070985 0.5880026 #> [31,] 0.000000 0.09966865 0.1973956 0.2914568 0.3805064 0.4636476 0.5404195 #> [32,] 0.000000 0.09065989 0.1798535 0.2662520 0.3487710 0.4266275 0.4993467 #> [33,] 0.000000 0.08314123 0.1651487 0.2449787 0.3217506 0.3947911 0.4636476 #> [34,] 0.000000 0.07677189 0.1526493 0.2267988 0.2984989 0.3671738 0.4324078 #> [35,] 0.000000 0.07130746 0.1418971 0.2110933 0.2782997 0.3430239 0.4048918 #> [36,] 0.000000 0.06656816 0.1325515 0.1973956 0.2606024 0.3217506 0.3805064 #> [37,] 0.000000 0.06241881 0.1243550 0.1853479 0.2449787 0.3028849 0.3587707 #> [38,] 0.000000 0.05875582 0.1171087 0.1746722 0.2310907 0.2860514 0.3392926 #> [39,] 0.000000 0.05549851 0.1106572 0.1651487 0.2186689 0.2709469 0.3217506 #> [40,] 0.000000 0.05258306 0.1048769 0.1566019 0.2074962 0.2573237 0.3058789 #> [41,] 0.000000         NA        NA        NA        NA        NA        NA #>            [,8]      [,9]     [,10]     [,11]     [,12]     [,13]     [,14] #>  [1,]        NA        NA        NA        NA        NA        NA        NA #>  [2,] 2.8240322        NA        NA        NA        NA        NA        NA #>  [3,] 2.7707014 2.7233683 2.6905658        NA        NA        NA        NA #>  [4,] 2.7509856 2.7017501 2.6546934 2.6098686 2.5867816        NA        NA #>  [5,] 2.7291822 2.6779450 2.6292032 2.5829933 2.5393053 2.4980915        NA #>  [6,] 2.7049655 2.6516353 2.6011732 2.5535901 2.5088438 2.4668517 2.4275020 #>  [7,] 2.6779450 2.6224465 2.5702552 2.5213432 2.4756234 2.4329664 2.3932146 #>  [8,] 2.6476513 2.5899377 2.5360480 2.4858970 2.4393357 2.3961732 2.3561945 #>  [9,] 2.6135182 2.5535901 2.4980915 2.4468544 2.3996454 2.3561945 2.3162158 #> [10,] 2.5748634 2.5127964 2.4558631 2.4037776 2.3561945 2.3127436 2.2730533 #> [11,] 2.5308667 2.4668517 2.4087776 2.3561945 2.3086114 2.2655346 2.2264920 #> [12,] 2.4805495 2.4149503 2.3561945 2.3036114 2.2565258 2.2142974 2.1763410 #> [13,] 2.4227627 2.3561945 2.2974387 2.2455373 2.1995926 2.1587989 2.1224513 #> [14,] 2.3561945 2.2896263 2.2318395 2.1815223 2.1375255 2.0988708 2.0647377 #> [15,] 2.2794226 2.2142974 2.1587989 2.1112158 2.0701430 2.0344439 2.0032041 #> [16,] 2.1910458 2.1293956 2.0778948 2.0344439 1.9974238 1.9655874 1.9379702 #> [17,] 2.0899424 2.0344439 1.9890207 1.9513027 1.9195673 1.8925469 1.8692953 #> [18,] 1.9756881 1.9295670 1.8925469 1.8622531 1.8370484 1.8157750 1.7975952 #> [19,] 1.8490960 1.8157750 1.7894653 1.7681919 1.7506498 1.7359450 1.7234457 #> [20,] 1.7126934 1.6951513 1.6814535 1.6704650 1.6614562 1.6539376 1.6475682 #> [21,] 1.5707963 1.5707963 1.5707963 1.5707963 1.5707963 1.5707963 1.5707963 #> [22,] 1.4288993 1.4464413 1.4601391 1.4711277 1.4801364 1.4876551 1.4940244 #> [23,] 1.2924967 1.3258177 1.3521274 1.3734008 1.3909428 1.4056476 1.4181470 #> [24,] 1.1659045 1.2120257 1.2490458 1.2793395 1.3045443 1.3258177 1.3439975 #> [25,] 1.0516502 1.1071487 1.1525720 1.1902899 1.2220253 1.2490458 1.2722974 #> [26,] 0.9505468 1.0121970 1.0636978 1.1071487 1.1441688 1.1760052 1.2036225 #> [27,] 0.8621701 0.9272952 0.9827937 1.0303768 1.0714496 1.1071487 1.1383886 #> [28,] 0.7853982 0.8519663 0.9097532 0.9600704 1.0040671 1.0427219 1.0768550 #> [29,] 0.7188300 0.7853982 0.8441540 0.8960554 0.9420000 0.9827937 1.0191413 #> [30,] 0.6610432 0.7266423 0.7853982 0.8379812 0.8850668 0.9272952 0.9652517 #> [31,] 0.6107260 0.6747409 0.7328151 0.7853982 0.8329813 0.8760581 0.9151007 #> [32,] 0.5667292 0.6287963 0.6857295 0.7378151 0.7853982 0.8288491 0.8685394 #> [33,] 0.5280744 0.5880026 0.6435011 0.6947383 0.7419473 0.7853982 0.8253769 #> [34,] 0.4939414 0.5516550 0.6055447 0.6556956 0.7022569 0.7454195 0.7853982 #> [35,] 0.4636476 0.5191461 0.5713375 0.6202495 0.6659692 0.7086263 0.7483780 #> [36,] 0.4366272 0.4899573 0.5404195 0.5880026 0.6327488 0.6747409 0.7140907 #> [37,] 0.4124104 0.4636476 0.5123895 0.5585993 0.6022873 0.6435011        NA #> [38,] 0.3906070 0.4398426 0.4868992 0.5317241 0.5548110        NA        NA #> [39,] 0.3708913 0.4182243 0.4510268        NA        NA        NA        NA #> [40,] 0.3175604        NA        NA        NA        NA        NA        NA #> [41,]        NA        NA        NA        NA        NA        NA        NA #>           [,15]     [,16]     [,17]     [,18]    [,19]    [,20]    [,21] #>  [1,]        NA        NA        NA        NA       NA       NA       NA #>  [2,]        NA        NA        NA        NA       NA       NA       NA #>  [3,]        NA        NA        NA        NA       NA       NA       NA #>  [4,]        NA        NA        NA        NA       NA       NA       NA #>  [5,]        NA        NA        NA        NA       NA       NA       NA #>  [6,] 2.4188584        NA        NA        NA       NA       NA       NA #>  [7,] 2.3561945 2.3461938        NA        NA       NA       NA       NA #>  [8,] 2.3191744 2.2848870 2.2783808        NA       NA       NA       NA #>  [9,] 2.2794226 2.2455373 2.2142974 2.2142974       NA       NA       NA #> [10,] 2.2367656 2.2035452 2.1730837 2.1531606       NA       NA       NA #> [11,] 2.1910458 2.1587989 2.1293956 2.1025204 2.094395       NA       NA #> [12,] 2.1421338 2.1112158 2.0831858 2.0576956 2.037562       NA       NA #> [13,] 2.0899424 2.0607537 2.0344439 2.0106389 1.989021 1.982313       NA #> [14,] 2.0344439 2.0074235 1.9832068 1.9614034 1.941688 1.928367       NA #> [15,] 1.9756881 1.9513027 1.9295670 1.9100889 1.892547 1.876675 1.875489 #> [16,] 1.9138203 1.8925469 1.8736812 1.8568478 1.841743 1.828120 1.823477 #> [17,] 1.8490960 1.8313987 1.8157750 1.8018870 1.789465 1.778293 1.772154 #> [18,] 1.7818897 1.7681919 1.7561443 1.7454685 1.735945 1.727398 1.721365 #> [19,] 1.7126934 1.7033479 1.6951513 1.6879051 1.681454 1.675673 1.670964 #> [20,] 1.6421038 1.6373645 1.6332151 1.6295521 1.626295 1.623379 1.620817 #> [21,] 1.5707963 1.5707963 1.5707963 1.5707963 1.570796 1.570796 1.570796 #> [22,] 1.4994889 1.5042282 1.5083775 1.5120405 1.515298 1.518213 1.520775 #> [23,] 1.4288993 1.4382448 1.4464413 1.4536876 1.460139 1.465919 1.470629 #> [24,] 1.3597030 1.3734008 1.3854484 1.3961241 1.405648 1.414194 1.420228 #> [25,] 1.2924967 1.3101939 1.3258177 1.3397057 1.352127 1.363300 1.369438 #> [26,] 1.2277724 1.2490458 1.2679115 1.2847449 1.299849 1.313473 1.318116 #> [27,] 1.1659045 1.1902899 1.2120257 1.2315037 1.249046 1.264917 1.266104 #> [28,] 1.1071487 1.1341692 1.1583859 1.1801893 1.199905 1.213225       NA #> [29,] 1.0516502 1.0808390 1.1071487 1.1309537 1.152572 1.159279       NA #> [30,] 0.9994588 1.0303768 1.0584069 1.0838971 1.104031       NA       NA #> [31,] 0.9505468 0.9827937 1.0121970 1.0390723 1.047198       NA       NA #> [32,] 0.9048271 0.9380475 0.9685090 0.9884321       NA       NA       NA #> [33,] 0.8621701 0.8960554 0.9272952        NA       NA       NA       NA #> [34,] 0.8224183 0.8567056 0.8632119        NA       NA       NA       NA #> [35,] 0.7853982 0.7953988        NA        NA       NA       NA       NA #> [36,] 0.7227342        NA        NA        NA       NA       NA       NA #> [37,]        NA        NA        NA        NA       NA       NA       NA #> [38,]        NA        NA        NA        NA       NA       NA       NA #> [39,]        NA        NA        NA        NA       NA       NA       NA #> [40,]        NA        NA        NA        NA       NA       NA       NA #> [41,]        NA        NA        NA        NA       NA       NA       NA"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_prop_crh_fhd.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the total proportion of bird flights at collision risk based\non a flight height distribution ‚Äî get_prop_crh_fhd","title":"Calculate the total proportion of bird flights at collision risk based\non a flight height distribution ‚Äî get_prop_crh_fhd","text":"Calculate expected proportion bird flights collision risk height (.e. rotor height, bottom top rotor) based bird's flight height distribution  (\\(Q'_{2R}\\)).","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_prop_crh_fhd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the total proportion of bird flights at collision risk based\non a flight height distribution ‚Äî get_prop_crh_fhd","text":"","code":"get_prop_crh_fhd(d_y)"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_prop_crh_fhd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the total proportion of bird flights at collision risk based\non a flight height distribution ‚Äî get_prop_crh_fhd","text":"d_y Numeric vector proportion birds height bands across rotor disc","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_prop_crh_fhd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the total proportion of bird flights at collision risk based\non a flight height distribution ‚Äî get_prop_crh_fhd","text":"total proportion birds collision risk height derived flight height distribution","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_prop_crh_fhd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the total proportion of bird flights at collision risk based\non a flight height distribution ‚Äî get_prop_crh_fhd","text":"","code":"gen_fhd_dat <- Johnston_Flight_heights_SOSS %>%       dplyr::filter(variable==\"Gannet.est\") %>%       dplyr::select(height,prop)   gen_fhd <- gen_fhd_dat$prop   d_y <-     get_fhd_rotor(       hub_height = 150,       fhd = gen_fhd,       rotor_radius = 120,       tidal_offset = 2.5,       yinc = 0.05)   prop_chr_fhd <- get_prop_crh_fhd(d_y)"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_risk_y.html","id":null,"dir":"Reference","previous_headings":"","what":"Single transit collision risk along the chord of the rotor at height band\n\\(y\\) ‚Äî get_risk_y","title":"Single transit collision risk along the chord of the rotor at height band\n\\(y\\) ‚Äî get_risk_y","text":"Calculates single transit collision risk/probability along horizontal chord rotor height \\(y\\) via numerical integration.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_risk_y.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Single transit collision risk along the chord of the rotor at height band\n\\(y\\) ‚Äî get_risk_y","text":"","code":"get_risk_y(x_at_y, pcoll_doty)"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_risk_y.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Single transit collision risk along the chord of the rotor at height band\n\\(y\\) ‚Äî get_risk_y","text":"x_at_y vector, sequence horizontal distances rotor's vertical axis points \\(x\\) along half rotor circle, expressed proportion rotor radius, height band \\(y\\) pcoll_doty vector, single transit collision risk horizontal distances \\(x\\), height band \\(y\\)","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_risk_y.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Single transit collision risk along the chord of the rotor at height band\n\\(y\\) ‚Äî get_risk_y","text":"numeric value, single transit collision risk along whole horizontal chord rotor circle height band \\(y\\)","code":""},{"path":[]},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_risk_y.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Single transit collision risk along the chord of the rotor at height band\n\\(y\\) ‚Äî get_risk_y","text":"","code":"rotor_grids <- generate_rotor_grids(yinc = 0.05, xinc = 0.05, chord_prof_5MW)    y_lt <- dim(rotor_grids$r_grid)[1]    pcollxy_grid_up <- get_pcoll_grid(     rotor_grids = rotor_grids,     direction = 1,     rotor_radius = 120,     blade_width = 5,     rotor_speed = 15,     blade_pitch = 15,     flight_type = \"flapping\",     n_blades = 3,     flight_speed = 13.1,     wing_span = 1.01,     body_lt = 0.85)      risk_up <- rep(NA, y_lt)     for(i in 1:y_lt){       risk_up[i] <- get_risk_y(rotor_grids$x_grid[i, ], pcollxy_grid_up[i, ])     }"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_x_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Grid of horizontal distances from points in the rotor circle to its vertical\naxis ‚Äî get_x_grid","title":"Grid of horizontal distances from points in the rotor circle to its vertical\naxis ‚Äî get_x_grid","text":"Taking center rotor circle origin, get_x_grid generates grid containing horizontal distances \\(x\\) (xinc increments) y-axis outer edge rotor circle, equidistant height bands \\(y\\) (yinc increments) minimum maximum rotor height. Distances expressed proportion rotor radius (.e. \\(x\\) dimensionless). Returned grid represents left-half rotor's circle.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_x_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grid of horizontal distances from points in the rotor circle to its vertical\naxis ‚Äî get_x_grid","text":"","code":"get_x_grid(xinc = 0.05, yinc = 0.05)"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_x_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grid of horizontal distances from points in the rotor circle to its vertical\naxis ‚Äî get_x_grid","text":"xinc, yinc numeric values, grid increments along y-axis x-axis (.e. grid cell dimensions)","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_x_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Grid of horizontal distances from points in the rotor circle to its vertical\naxis ‚Äî get_x_grid","text":"2D array giving grid horizontal distances \\(x\\) rotor's vertical axis, expressed proportion rotor radius (.e. \\([0,   1]\\)), left-half rotor circle area.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_x_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Grid of horizontal distances from points in the rotor circle to its vertical\naxis ‚Äî get_x_grid","text":"","code":"get_x_grid(xinc=0.05,yinc=0.05) #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7]      [,8] [,9]     [,10] [,11] #>  [1,]    0   NA   NA   NA   NA   NA   NA        NA   NA        NA    NA #>  [2,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3122499   NA        NA    NA #>  [3,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4358899    NA #>  [4,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #>  [5,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #>  [6,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #>  [7,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #>  [8,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #>  [9,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [10,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [11,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [12,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [13,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [14,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [15,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [16,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [17,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [18,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [19,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [20,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [21,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [22,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [23,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [24,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [25,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [26,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [27,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [28,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [29,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [30,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [31,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [32,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [33,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [34,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [35,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [36,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [37,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [38,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [39,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4358899    NA #> [40,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3122499   NA        NA    NA #> [41,]    0   NA   NA   NA   NA   NA   NA        NA   NA        NA    NA #>           [,12] [,13] [,14]     [,15]     [,16]     [,17]     [,18]     [,19] #>  [1,]        NA    NA    NA        NA        NA        NA        NA        NA #>  [2,]        NA    NA    NA        NA        NA        NA        NA        NA #>  [3,]        NA    NA    NA        NA        NA        NA        NA        NA #>  [4,] 0.5267827    NA    NA        NA        NA        NA        NA        NA #>  [5,] 0.5500000   0.6    NA        NA        NA        NA        NA        NA #>  [6,] 0.5500000   0.6  0.65 0.6614378        NA        NA        NA        NA #>  [7,] 0.5500000   0.6  0.65 0.7000000 0.7141428        NA        NA        NA #>  [8,] 0.5500000   0.6  0.65 0.7000000 0.7500000 0.7599342        NA        NA #>  [9,] 0.5500000   0.6  0.65 0.7000000 0.7500000 0.8000000 0.8000000        NA #> [10,] 0.5500000   0.6  0.65 0.7000000 0.7500000 0.8000000 0.8351647        NA #> [11,] 0.5500000   0.6  0.65 0.7000000 0.7500000 0.8000000 0.8500000 0.8660254 #> [12,] 0.5500000   0.6  0.65 0.7000000 0.7500000 0.8000000 0.8500000 0.8930286 #> [13,] 0.5500000   0.6  0.65 0.7000000 0.7500000 0.8000000 0.8500000 0.9000000 #> [14,] 0.5500000   0.6  0.65 0.7000000 0.7500000 0.8000000 0.8500000 0.9000000 #> [15,] 0.5500000   0.6  0.65 0.7000000 0.7500000 0.8000000 0.8500000 0.9000000 #> [16,] 0.5500000   0.6  0.65 0.7000000 0.7500000 0.8000000 0.8500000 0.9000000 #> [17,] 0.5500000   0.6  0.65 0.7000000 0.7500000 0.8000000 0.8500000 0.9000000 #> [18,] 0.5500000   0.6  0.65 0.7000000 0.7500000 0.8000000 0.8500000 0.9000000 #> [19,] 0.5500000   0.6  0.65 0.7000000 0.7500000 0.8000000 0.8500000 0.9000000 #> [20,] 0.5500000   0.6  0.65 0.7000000 0.7500000 0.8000000 0.8500000 0.9000000 #> [21,] 0.5500000   0.6  0.65 0.7000000 0.7500000 0.8000000 0.8500000 0.9000000 #> [22,] 0.5500000   0.6  0.65 0.7000000 0.7500000 0.8000000 0.8500000 0.9000000 #> [23,] 0.5500000   0.6  0.65 0.7000000 0.7500000 0.8000000 0.8500000 0.9000000 #> [24,] 0.5500000   0.6  0.65 0.7000000 0.7500000 0.8000000 0.8500000 0.9000000 #> [25,] 0.5500000   0.6  0.65 0.7000000 0.7500000 0.8000000 0.8500000 0.9000000 #> [26,] 0.5500000   0.6  0.65 0.7000000 0.7500000 0.8000000 0.8500000 0.9000000 #> [27,] 0.5500000   0.6  0.65 0.7000000 0.7500000 0.8000000 0.8500000 0.9000000 #> [28,] 0.5500000   0.6  0.65 0.7000000 0.7500000 0.8000000 0.8500000 0.9000000 #> [29,] 0.5500000   0.6  0.65 0.7000000 0.7500000 0.8000000 0.8500000 0.9000000 #> [30,] 0.5500000   0.6  0.65 0.7000000 0.7500000 0.8000000 0.8500000 0.8930286 #> [31,] 0.5500000   0.6  0.65 0.7000000 0.7500000 0.8000000 0.8500000 0.8660254 #> [32,] 0.5500000   0.6  0.65 0.7000000 0.7500000 0.8000000 0.8351647        NA #> [33,] 0.5500000   0.6  0.65 0.7000000 0.7500000 0.8000000        NA        NA #> [34,] 0.5500000   0.6  0.65 0.7000000 0.7500000 0.7599342        NA        NA #> [35,] 0.5500000   0.6  0.65 0.7000000 0.7141428        NA        NA        NA #> [36,] 0.5500000   0.6  0.65 0.6614378        NA        NA        NA        NA #> [37,] 0.5500000   0.6    NA        NA        NA        NA        NA        NA #> [38,] 0.5267827    NA    NA        NA        NA        NA        NA        NA #> [39,]        NA    NA    NA        NA        NA        NA        NA        NA #> [40,]        NA    NA    NA        NA        NA        NA        NA        NA #> [41,]        NA    NA    NA        NA        NA        NA        NA        NA #>           [,20]     [,21] #>  [1,]        NA        NA #>  [2,]        NA        NA #>  [3,]        NA        NA #>  [4,]        NA        NA #>  [5,]        NA        NA #>  [6,]        NA        NA #>  [7,]        NA        NA #>  [8,]        NA        NA #>  [9,]        NA        NA #> [10,]        NA        NA #> [11,]        NA        NA #> [12,]        NA        NA #> [13,] 0.9165151        NA #> [14,] 0.9367497        NA #> [15,] 0.9500000 0.9539392 #> [16,] 0.9500000 0.9682458 #> [17,] 0.9500000 0.9797959 #> [18,] 0.9500000 0.9886860 #> [19,] 0.9500000 0.9949874 #> [20,] 0.9500000 0.9987492 #> [21,] 0.9500000 1.0000000 #> [22,] 0.9500000 0.9987492 #> [23,] 0.9500000 0.9949874 #> [24,] 0.9500000 0.9886860 #> [25,] 0.9500000 0.9797959 #> [26,] 0.9500000 0.9682458 #> [27,] 0.9500000 0.9539392 #> [28,] 0.9367497        NA #> [29,] 0.9165151        NA #> [30,]        NA        NA #> [31,]        NA        NA #> [32,]        NA        NA #> [33,]        NA        NA #> [34,]        NA        NA #> [35,]        NA        NA #> [36,]        NA        NA #> [37,]        NA        NA #> [38,]        NA        NA #> [39,]        NA        NA #> [40,]        NA        NA #> [41,]        NA        NA"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_y_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Grid of vertical distances from points in the rotor circle to its horizontal\naxis ‚Äî get_y_grid","title":"Grid of vertical distances from points in the rotor circle to its horizontal\naxis ‚Äî get_y_grid","text":"Taking center rotor circle origin, get_y_grid generates grid vertical distances \\(y\\) (yinc increments) x-axis outer edge rotor circle, across width intervals \\(x\\) (xinc increments) center maximum rotor width. Returned grid represents left-half rotor's circle. Distances expressed proportion rotor radius (.e. \\(y\\) dimensionless).","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_y_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grid of vertical distances from points in the rotor circle to its horizontal\naxis ‚Äî get_y_grid","text":"","code":"get_y_grid(x_grid, yinc = 0.05)"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_y_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grid of vertical distances from points in the rotor circle to its horizontal\naxis ‚Äî get_y_grid","text":"x_grid 2D array, horizontal distances rotor's vertical axis, expressed proportion rotor radius, left-half rotor circle area. yinc numeric value, grid increment along y-axis","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_y_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Grid of vertical distances from points in the rotor circle to its horizontal\naxis ‚Äî get_y_grid","text":"2D array giving grid vertical distances \\(y\\) rotor's horizontal axis, expressed proportion rotor radius, left-half rotor circle area. Negative values represent distances bottom half rotor circle.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_y_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Grid of vertical distances from points in the rotor circle to its horizontal\naxis ‚Äî get_y_grid","text":"","code":"x_grid <- get_x_grid(yinc=0.05, xinc=0.05)  get_y_grid(x_grid,yinc=0.05) #>        [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9] [,10] [,11] [,12] #>  [1,] -1.00    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA #>  [2,] -0.95 -0.95 -0.95 -0.95 -0.95 -0.95 -0.95 -0.95    NA    NA    NA    NA #>  [3,] -0.90 -0.90 -0.90 -0.90 -0.90 -0.90 -0.90 -0.90 -0.90 -0.90    NA    NA #>  [4,] -0.85 -0.85 -0.85 -0.85 -0.85 -0.85 -0.85 -0.85 -0.85 -0.85 -0.85 -0.85 #>  [5,] -0.80 -0.80 -0.80 -0.80 -0.80 -0.80 -0.80 -0.80 -0.80 -0.80 -0.80 -0.80 #>  [6,] -0.75 -0.75 -0.75 -0.75 -0.75 -0.75 -0.75 -0.75 -0.75 -0.75 -0.75 -0.75 #>  [7,] -0.70 -0.70 -0.70 -0.70 -0.70 -0.70 -0.70 -0.70 -0.70 -0.70 -0.70 -0.70 #>  [8,] -0.65 -0.65 -0.65 -0.65 -0.65 -0.65 -0.65 -0.65 -0.65 -0.65 -0.65 -0.65 #>  [9,] -0.60 -0.60 -0.60 -0.60 -0.60 -0.60 -0.60 -0.60 -0.60 -0.60 -0.60 -0.60 #> [10,] -0.55 -0.55 -0.55 -0.55 -0.55 -0.55 -0.55 -0.55 -0.55 -0.55 -0.55 -0.55 #> [11,] -0.50 -0.50 -0.50 -0.50 -0.50 -0.50 -0.50 -0.50 -0.50 -0.50 -0.50 -0.50 #> [12,] -0.45 -0.45 -0.45 -0.45 -0.45 -0.45 -0.45 -0.45 -0.45 -0.45 -0.45 -0.45 #> [13,] -0.40 -0.40 -0.40 -0.40 -0.40 -0.40 -0.40 -0.40 -0.40 -0.40 -0.40 -0.40 #> [14,] -0.35 -0.35 -0.35 -0.35 -0.35 -0.35 -0.35 -0.35 -0.35 -0.35 -0.35 -0.35 #> [15,] -0.30 -0.30 -0.30 -0.30 -0.30 -0.30 -0.30 -0.30 -0.30 -0.30 -0.30 -0.30 #> [16,] -0.25 -0.25 -0.25 -0.25 -0.25 -0.25 -0.25 -0.25 -0.25 -0.25 -0.25 -0.25 #> [17,] -0.20 -0.20 -0.20 -0.20 -0.20 -0.20 -0.20 -0.20 -0.20 -0.20 -0.20 -0.20 #> [18,] -0.15 -0.15 -0.15 -0.15 -0.15 -0.15 -0.15 -0.15 -0.15 -0.15 -0.15 -0.15 #> [19,] -0.10 -0.10 -0.10 -0.10 -0.10 -0.10 -0.10 -0.10 -0.10 -0.10 -0.10 -0.10 #> [20,] -0.05 -0.05 -0.05 -0.05 -0.05 -0.05 -0.05 -0.05 -0.05 -0.05 -0.05 -0.05 #> [21,]  0.00  0.00  0.00  0.00  0.00  0.00  0.00  0.00  0.00  0.00  0.00  0.00 #> [22,]  0.05  0.05  0.05  0.05  0.05  0.05  0.05  0.05  0.05  0.05  0.05  0.05 #> [23,]  0.10  0.10  0.10  0.10  0.10  0.10  0.10  0.10  0.10  0.10  0.10  0.10 #> [24,]  0.15  0.15  0.15  0.15  0.15  0.15  0.15  0.15  0.15  0.15  0.15  0.15 #> [25,]  0.20  0.20  0.20  0.20  0.20  0.20  0.20  0.20  0.20  0.20  0.20  0.20 #> [26,]  0.25  0.25  0.25  0.25  0.25  0.25  0.25  0.25  0.25  0.25  0.25  0.25 #> [27,]  0.30  0.30  0.30  0.30  0.30  0.30  0.30  0.30  0.30  0.30  0.30  0.30 #> [28,]  0.35  0.35  0.35  0.35  0.35  0.35  0.35  0.35  0.35  0.35  0.35  0.35 #> [29,]  0.40  0.40  0.40  0.40  0.40  0.40  0.40  0.40  0.40  0.40  0.40  0.40 #> [30,]  0.45  0.45  0.45  0.45  0.45  0.45  0.45  0.45  0.45  0.45  0.45  0.45 #> [31,]  0.50  0.50  0.50  0.50  0.50  0.50  0.50  0.50  0.50  0.50  0.50  0.50 #> [32,]  0.55  0.55  0.55  0.55  0.55  0.55  0.55  0.55  0.55  0.55  0.55  0.55 #> [33,]  0.60  0.60  0.60  0.60  0.60  0.60  0.60  0.60  0.60  0.60  0.60  0.60 #> [34,]  0.65  0.65  0.65  0.65  0.65  0.65  0.65  0.65  0.65  0.65  0.65  0.65 #> [35,]  0.70  0.70  0.70  0.70  0.70  0.70  0.70  0.70  0.70  0.70  0.70  0.70 #> [36,]  0.75  0.75  0.75  0.75  0.75  0.75  0.75  0.75  0.75  0.75  0.75  0.75 #> [37,]  0.80  0.80  0.80  0.80  0.80  0.80  0.80  0.80  0.80  0.80  0.80  0.80 #> [38,]  0.85  0.85  0.85  0.85  0.85  0.85  0.85  0.85  0.85  0.85  0.85  0.85 #> [39,]  0.90  0.90  0.90  0.90  0.90  0.90  0.90  0.90  0.90  0.90    NA    NA #> [40,]  0.95  0.95  0.95  0.95  0.95  0.95  0.95  0.95    NA    NA    NA    NA #> [41,]  1.00    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA #>       [,13] [,14] [,15] [,16] [,17] [,18] [,19] [,20] [,21] #>  [1,]    NA    NA    NA    NA    NA    NA    NA    NA    NA #>  [2,]    NA    NA    NA    NA    NA    NA    NA    NA    NA #>  [3,]    NA    NA    NA    NA    NA    NA    NA    NA    NA #>  [4,]    NA    NA    NA    NA    NA    NA    NA    NA    NA #>  [5,] -0.80    NA    NA    NA    NA    NA    NA    NA    NA #>  [6,] -0.75 -0.75 -0.75    NA    NA    NA    NA    NA    NA #>  [7,] -0.70 -0.70 -0.70 -0.70    NA    NA    NA    NA    NA #>  [8,] -0.65 -0.65 -0.65 -0.65 -0.65    NA    NA    NA    NA #>  [9,] -0.60 -0.60 -0.60 -0.60 -0.60 -0.60    NA    NA    NA #> [10,] -0.55 -0.55 -0.55 -0.55 -0.55 -0.55    NA    NA    NA #> [11,] -0.50 -0.50 -0.50 -0.50 -0.50 -0.50 -0.50    NA    NA #> [12,] -0.45 -0.45 -0.45 -0.45 -0.45 -0.45 -0.45    NA    NA #> [13,] -0.40 -0.40 -0.40 -0.40 -0.40 -0.40 -0.40 -0.40    NA #> [14,] -0.35 -0.35 -0.35 -0.35 -0.35 -0.35 -0.35 -0.35    NA #> [15,] -0.30 -0.30 -0.30 -0.30 -0.30 -0.30 -0.30 -0.30 -0.30 #> [16,] -0.25 -0.25 -0.25 -0.25 -0.25 -0.25 -0.25 -0.25 -0.25 #> [17,] -0.20 -0.20 -0.20 -0.20 -0.20 -0.20 -0.20 -0.20 -0.20 #> [18,] -0.15 -0.15 -0.15 -0.15 -0.15 -0.15 -0.15 -0.15 -0.15 #> [19,] -0.10 -0.10 -0.10 -0.10 -0.10 -0.10 -0.10 -0.10 -0.10 #> [20,] -0.05 -0.05 -0.05 -0.05 -0.05 -0.05 -0.05 -0.05 -0.05 #> [21,]  0.00  0.00  0.00  0.00  0.00  0.00  0.00  0.00  0.00 #> [22,]  0.05  0.05  0.05  0.05  0.05  0.05  0.05  0.05  0.05 #> [23,]  0.10  0.10  0.10  0.10  0.10  0.10  0.10  0.10  0.10 #> [24,]  0.15  0.15  0.15  0.15  0.15  0.15  0.15  0.15  0.15 #> [25,]  0.20  0.20  0.20  0.20  0.20  0.20  0.20  0.20  0.20 #> [26,]  0.25  0.25  0.25  0.25  0.25  0.25  0.25  0.25  0.25 #> [27,]  0.30  0.30  0.30  0.30  0.30  0.30  0.30  0.30  0.30 #> [28,]  0.35  0.35  0.35  0.35  0.35  0.35  0.35  0.35    NA #> [29,]  0.40  0.40  0.40  0.40  0.40  0.40  0.40  0.40    NA #> [30,]  0.45  0.45  0.45  0.45  0.45  0.45  0.45    NA    NA #> [31,]  0.50  0.50  0.50  0.50  0.50  0.50  0.50    NA    NA #> [32,]  0.55  0.55  0.55  0.55  0.55  0.55    NA    NA    NA #> [33,]  0.60  0.60  0.60  0.60  0.60    NA    NA    NA    NA #> [34,]  0.65  0.65  0.65  0.65  0.65    NA    NA    NA    NA #> [35,]  0.70  0.70  0.70  0.70    NA    NA    NA    NA    NA #> [36,]  0.75  0.75  0.75    NA    NA    NA    NA    NA    NA #> [37,]  0.80    NA    NA    NA    NA    NA    NA    NA    NA #> [38,]    NA    NA    NA    NA    NA    NA    NA    NA    NA #> [39,]    NA    NA    NA    NA    NA    NA    NA    NA    NA #> [40,]    NA    NA    NA    NA    NA    NA    NA    NA    NA #> [41,]    NA    NA    NA    NA    NA    NA    NA    NA    NA"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/mig_stoch_crm.html","id":null,"dir":"Reference","previous_headings":"","what":"Stochastic migration collision risk model ‚Äî mig_stoch_crm","title":"Stochastic migration collision risk model ‚Äî mig_stoch_crm","text":"Run migration stochastic collision risk model single species one turbine scenario","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/mig_stoch_crm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stochastic migration collision risk model ‚Äî mig_stoch_crm","text":"","code":"mig_stoch_crm(   wing_span_pars,   flt_speed_pars,   body_lt_pars,   prop_crh_pars,   avoid_bsc_pars,   n_turbines,   n_blades = 3,   rtn_speed_pars,   bld_pitch_pars,   rtr_radius_pars,   bld_width_pars,   wf_width,   wf_latitude,   flight_type,   prop_upwind = 0.5,   popn_estim_pars,   season_specs,   chord_profile = chord_prof_5MW,   trb_wind_avbl,   trb_downtime_pars,   n_iter = 10,   LargeArrayCorrection = TRUE,   log_file = NULL,   seed = NULL,   verbose = TRUE )"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/mig_stoch_crm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stochastic migration collision risk model ‚Äî mig_stoch_crm","text":"wing_span_pars single row data frame columns mean sd, mean standard deviation species wingspan, metres. Assumed follow tnorm-lw0 distribution. flt_speed_pars single row data frame columns mean sd, mean standard deviation species flying speed, metres/sec. Assumed follow Truncated Normal lower bound 0 (tnorm-lw0). body_lt_pars single row data frame columns mean sd, mean standard deviation species body length, metres. Assumed follow tnorm-lw0 distribution. prop_crh_pars single row data frame columns mean sd. mean standard deviation proportion flights collision risk height. avoid_bsc_pars Single row data frame columns mean sd, mean standard deviation species avoidance rate used. Avoidance rate expresses probability bird flying collision course turbine take evading action avoid collision, assumed follow Beta distribution. n_turbines integer. number turbines expected installed n_blades integer. number blades per turbine (defaults 3) rtn_speed_pars single row data frame columns mean sd, mean standard deviation rotation speed. bld_pitch_pars single row data frame columns mean sd, mean standard deviation blade pitch angle, .e. angle blade surface rotor plane, degrees. Assumed follow tnorm-lw0 distribution. rtr_radius_pars single row data frame columns mean sd, mean standard deviation radius rotor, metres. Assumed follow tnorm-lw0 distribution. bld_width_pars single row data frame columns mean sd, mean standard deviation maximum blade width, metres. Assumed tnorm-lw0 distribution. wf_width Numeric value, approximate longitudinal width wind farm, kilometres (\\(w\\)). wf_latitude decimal value. latitude centroid windfarm, degrees. flight_type character. Either \"flying\" \"gliding\" representing type flight commonly used species prop_upwind Numeric value 0-1 giving proportion flights upwind - defaults 0.5. popn_estim_pars single row data frame columns mean sd. population estimate species expected fly wind farm area. season_specs data frame defining seasons aggregating collision estimates. must comprise following columns: season_id, (unique) season identifier, start_month, name season's first month, end_month, name season's last month. chord_profile data frame chord taper profile rotor blade. must contain columns: pp_radius, equidistant intervals radius bird passage point, proportion rotor_radius, within range \\([0, 1]\\). chord, chord width pp_radius, proportion blade_width. Defaults generic profile typical modern 5MW turbine. See chord_prof_5MW() details. trb_wind_avbl data frame monthly estimates operational wind availability. must contain columns: month, (unique) month names, pctg, percentage time wind conditions allow turbine operation per month. trb_downtime_pars data frame monthly estimates maintenance downtime, assumed follow tnorm-lw0 distribution. must contain following columns: month, (unique) month names, mean, numeric, mean percentage time month turbines operating due maintenance, sd, standard deviation monthly maintenance downtime. n_iter integer > 0. number iterations model simulation. LargeArrayCorrection boolean. large array correction calculated log_file Path log file store session info main model run options. set NULL (default value), log file created. seed Integer, random seed random number generation, analysis reproducibility. verbose boolean. TRUE verbose output","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/mig_stoch_crm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stochastic migration collision risk model ‚Äî mig_stoch_crm","text":"Estimates number collisions per migratory season n number iterations specified","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/mig_stoch_crm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Stochastic migration collision risk model ‚Äî mig_stoch_crm","text":"function adaption code Masden(2015) used estimating collision risk seabirds offshore windfarm sites adaptation Band(2012). adaptation stoch_crm function. collision risk model evaluates risk defined migratory period flux rate simply number birds travelling windfarm. Changes relation previous top-line function stoch_crm function run option 1 migratory species","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/mig_stoch_crm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stochastic migration collision risk model ‚Äî mig_stoch_crm","text":"","code":"# ------------------------------------------------------ # Run with arbitrary parameter values, for illustration # ------------------------------------------------------ season_specs <- data.frame(   season_id = c(\"PrBMigration\", \"PoBMigration\",\"OMigration\"),   start_month = c(\"Mar\", \"May\", \"Oct\"), end_month = c(\"Apr\", \"Sep\", \"Feb\") )  # wind availability windavb <- data.frame(   month = month.abb,   pctg = runif(12, 85, 98) ) head(windavb) #>   month     pctg #> 1   Jan 90.18353 #> 2   Feb 87.67227 #> 3   Mar 92.45762 #> 4   Apr 90.81179 #> 5   May 94.57596 #> 6   Jun 94.58314  # maintenance downtime dwntm <- data.frame(   month = month.abb,   mean = runif(12, 6, 10),   sd = rep(2, 12)) head(dwntm) #>   month     mean sd #> 1   Jan 8.463319  2 #> 2   Feb 9.173367  2 #> 3   Mar 6.312379  2 #> 4   Apr 7.120587  2 #> 5   May 7.751003  2 #> 6   Jun 6.450767  2   mig_stoch_crm(   # Wing span in m,   wing_span_pars = data.frame(mean = 1.08, sd = 0.04),   # Flight speed in m/s   flt_speed_pars = data.frame(mean = 7.26, sd = 1.5),   # Body length in m,   body_lt_pars = data.frame(mean = 0.39, sd = 0.005),   # Proportion of birds at CRH   prop_crh_pars = data.frame(mean = 0.06, sd = 0.009),   # avoidance rate   avoid_bsc_pars = data.frame(mean = 0.99, sd = 0.001),   n_turbines = 150,   n_blades = 3,   # rotation speed in m/s of turbine blades   rtn_speed_pars = data.frame(mean = 13.1, sd = 4),   # pitch in degrees of turbine blades   bld_pitch_pars = data.frame(mean = 3, sd = 0.3),   # sd = 0, rotor radius is fixed   rtr_radius_pars = data.frame(mean = 80, sd = 0),   # sd = 0, blade width is fixed   bld_width_pars = data.frame(mean = 8, sd = 0),   wf_width = 100,   wf_latitude = 54.1,   prop_upwind = 0.5,   flight_type = \"flapping\",   # population flying through windfarm,   popn_estim_pars = data.frame(mean = 21584, sd = 2023),   season_specs = season_specs,   chord_profile = chord_prof_5MW,   trb_wind_avbl = windavb,   trb_downtime_pars = dwntm,   n_iter = 1000,   LargeArrayCorrection = TRUE,   log_file = NULL,   seed = 1234,   verbose = TRUE) #>  #> ‚îÄ‚îÄ Stochastic CRM for Migratory birds ‚îÄ‚îÄ #>  #> ‚Ñπ Checking for manditory arguments #> ‚úî Checking for manditory arguments [11ms] #>  #> ‚Ñπ Data validation #> ‚úî Data validation [20ms] #>  #> ‚Ñπ Sampling data #> ‚úî Sampling data [54ms] #>  #> ‚Ñπ Running simulation... #> ‚úî Running simulation... [729ms] #>  #> ‚Ñπ Creating outputs #> ‚úî Creating outputs [17ms] #>  #> $collisions #>         PrBMigration PoBMigration OMigration #>    [1,]    0.1990079    0.1984620  0.1942896 #>    [2,]    0.2058062    0.2052416  0.2009267 #>    [3,]    0.2291901    0.2285614  0.2237562 #>    [4,]    0.1927455    0.1922167  0.1881756 #>    [5,]    0.2105346    0.2099570  0.2055430 #>    [6,]    0.2761494    0.2753918  0.2696022 #>    [7,]    0.2285894    0.2279623  0.2231697 #>    [8,]    0.1776655    0.1771781  0.1734531 #>    [9,]    0.2502593    0.2495727  0.2443259 #>   [10,]    0.3870194    0.3859577  0.3778440 #>   [11,]    0.3077267    0.3068825  0.3004310 #>   [12,]    0.2407457    0.2400852  0.2350379 #>   [13,]    0.1980531    0.1975097  0.1933573 #>   [14,]    0.1845608    0.1840544  0.1801849 #>   [15,]    0.2705354    0.2697932  0.2641213 #>   [16,]    0.2210142    0.2204079  0.2157741 #>   [17,]    0.2501875    0.2495012  0.2442559 #>   [18,]    0.2377758    0.2371234  0.2321383 #>   [19,]    0.1487038    0.1482959  0.1451781 #>   [20,]    0.2547134    0.2540146  0.2486743 #>   [21,]    0.1818919    0.1813929  0.1775793 #>   [22,]    0.2505102    0.2498229  0.2445709 #>   [23,]    0.2144556    0.2138672  0.2093709 #>   [24,]    0.2075939    0.2070243  0.2026719 #>   [25,]    0.2296610    0.2290309  0.2242159 #>   [26,]    0.1907422    0.1902189  0.1862197 #>   [27,]    0.2769232    0.2761634  0.2703576 #>   [28,]    0.2424656    0.2418004  0.2367170 #>   [29,]    0.2059343    0.2053693  0.2010517 #>   [30,]    0.1737149    0.1732383  0.1695963 #>   [31,]    0.2601531    0.2594394  0.2539852 #>   [32,]    0.2463226    0.2456468  0.2404824 #>   [33,]    0.2502981    0.2496114  0.2443639 #>   [34,]    0.3159769    0.3151101  0.3084855 #>   [35,]    0.2083730    0.2078014  0.2034327 #>   [36,]    0.2220472    0.2214380  0.2167826 #>   [37,]    0.2252166    0.2245987  0.2198769 #>   [38,]    0.1521045    0.1516872  0.1484981 #>   [39,]    0.2344981    0.2338547  0.2289383 #>   [40,]    0.3279521    0.3270524  0.3201770 #>   [41,]    0.2282420    0.2276158  0.2228305 #>   [42,]    0.2029856    0.2024287  0.1981729 #>   [43,]    0.3573837    0.3564032  0.3489106 #>   [44,]    0.1898291    0.1893084  0.1853284 #>   [45,]    0.2560263    0.2553239  0.2499561 #>   [46,]    0.1499988    0.1495873  0.1464424 #>   [47,]    0.2966832    0.2958693  0.2896492 #>   [48,]    0.1783993    0.1779099  0.1741695 #>   [49,]    0.2199142    0.2193109  0.2147002 #>   [50,]    0.1970398    0.1964992  0.1923681 #>   [51,]    0.2055405    0.2049766  0.2006672 #>   [52,]    0.2239179    0.2233036  0.2186089 #>   [53,]    0.2271952    0.2265719  0.2218086 #>   [54,]    0.2650419    0.2643148  0.2587581 #>   [55,]    0.2696837    0.2689438  0.2632898 #>   [56,]    0.2964157    0.2956025  0.2893881 #>   [57,]    0.2637799    0.2630562  0.2575259 #>   [58,]    0.1861523    0.1856416  0.1817387 #>   [59,]    0.2421779    0.2415135  0.2364361 #>   [60,]    0.1743248    0.1738466  0.1701916 #>   [61,]    0.2632110    0.2624889  0.2569705 #>   [62,]    0.2050470    0.2044845  0.2001855 #>   [63,]    0.1712576    0.1707878  0.1671971 #>   [64,]    0.2528835    0.2521897  0.2468878 #>   [65,]    0.1978928    0.1973499  0.1932008 #>   [66,]    0.2443673    0.2436969  0.2385736 #>   [67,]    0.2360163    0.2353688  0.2304205 #>   [68,]    0.2367084    0.2360590  0.2310963 #>   [69,]    0.1988333    0.1982877  0.1941190 #>   [70,]    0.2574176    0.2567114  0.2513145 #>   [71,]    0.1886722    0.1881546  0.1841989 #>   [72,]    0.1891805    0.1886615  0.1846952 #>   [73,]    0.2353315    0.2346859  0.2297519 #>   [74,]    0.2351737    0.2345285  0.2295978 #>   [75,]    0.2773145    0.2765537  0.2707396 #>   [76,]    0.1971078    0.1965671  0.1924345 #>   [77,]    0.2541868    0.2534895  0.2481603 #>   [78,]    0.1890278    0.1885092  0.1845460 #>   [79,]    0.2173394    0.2167432  0.2121865 #>   [80,]    0.2005407    0.1999905  0.1957860 #>   [81,]    0.1919756    0.1914489  0.1874239 #>   [82,]    0.2877825    0.2869930  0.2809595 #>   [83,]    0.3172058    0.3163355  0.3096852 #>   [84,]    0.1887740    0.1882560  0.1842982 #>   [85,]    0.1903182    0.1897960  0.1858058 #>   [86,]    0.1798927    0.1793992  0.1756275 #>   [87,]    0.2455204    0.2448469  0.2396994 #>   [88,]    0.1944767    0.1939432  0.1898658 #>   [89,]    0.3023550    0.3015255  0.2951865 #>   [90,]    0.1431827    0.1427899  0.1397878 #>   [91,]    0.3142017    0.3133397  0.3067524 #>   [92,]    0.1568457    0.1564154  0.1531269 #>   [93,]    0.2299790    0.2293480  0.2245263 #>   [94,]    0.2469817    0.2463042  0.2411261 #>   [95,]    0.2497214    0.2490363  0.2438007 #>   [96,]    0.2270044    0.2263816  0.2216223 #>   [97,]    0.2002833    0.1997338  0.1955346 #>   [98,]    0.2480424    0.2473619  0.2421615 #>   [99,]    0.2066029    0.2060361  0.2017045 #>  [100,]    0.2206584    0.2200531  0.2154268 #>  [101,]    0.2339100    0.2332683  0.2283642 #>  [102,]    0.1921450    0.1916178  0.1875893 #>  [103,]    0.2142591    0.2136713  0.2091793 #>  [104,]    0.1295672    0.1292117  0.1264952 #>  [105,]    0.2647013    0.2639751  0.2584254 #>  [106,]    0.2226543    0.2220434  0.2173754 #>  [107,]    0.1893939    0.1888743  0.1849035 #>  [108,]    0.1157862    0.1154685  0.1130409 #>  [109,]    0.2618096    0.2610914  0.2556023 #>  [110,]    0.2249685    0.2243513  0.2196347 #>  [111,]    0.2950984    0.2942888  0.2881020 #>  [112,]    0.3556374    0.3546617  0.3472059 #>  [113,]    0.2143621    0.2137740  0.2092797 #>  [114,]    0.2139884    0.2134013  0.2089148 #>  [115,]    0.2010546    0.2005030  0.1962877 #>  [116,]    0.1440865    0.1436912  0.1406703 #>  [117,]    0.1940704    0.1935380  0.1894691 #>  [118,]    0.1713120    0.1708420  0.1672503 #>  [119,]    0.2004768    0.1999267  0.1957236 #>  [120,]    0.1831418    0.1826394  0.1787996 #>  [121,]    0.2189137    0.2183131  0.2137234 #>  [122,]    0.1786725    0.1781823  0.1744362 #>  [123,]    0.1595594    0.1591217  0.1557763 #>  [124,]    0.2627057    0.2619850  0.2564774 #>  [125,]    0.3145182    0.3136554  0.3070614 #>  [126,]    0.2634968    0.2627739  0.2572495 #>  [127,]    0.2223183    0.2217084  0.2170473 #>  [128,]    0.2767241    0.2759649  0.2701633 #>  [129,]    0.5112778    0.5098752  0.4991566 #>  [130,]    0.2267268    0.2261048  0.2213513 #>  [131,]    0.2193143    0.2187126  0.2141146 #>  [132,]    0.2177451    0.2171477  0.2125825 #>  [133,]    0.1829826    0.1824805  0.1786441 #>  [134,]    0.1558233    0.1553958  0.1521288 #>  [135,]    0.2372764    0.2366255  0.2316507 #>  [136,]    0.2214498    0.2208422  0.2161993 #>  [137,]    0.2678201    0.2670853  0.2614703 #>  [138,]    0.2207876    0.2201818  0.2155528 #>  [139,]    0.1744111    0.1739326  0.1702759 #>  [140,]    0.1605062    0.1600658  0.1567006 #>  [141,]    0.2202862    0.2196819  0.2150634 #>  [142,]    0.1541746    0.1537517  0.1505192 #>  [143,]    0.1512109    0.1507961  0.1476257 #>  [144,]    0.1635189    0.1630702  0.1596419 #>  [145,]    0.3021874    0.3013583  0.2950229 #>  [146,]    0.2533950    0.2526998  0.2473873 #>  [147,]    0.2474235    0.2467447  0.2415573 #>  [148,]    0.1840501    0.1835451  0.1796863 #>  [149,]    0.2017181    0.2011647  0.1969355 #>  [150,]    0.2919310    0.2911301  0.2850096 #>  [151,]    0.2298127    0.2291822  0.2243640 #>  [152,]    0.1800342    0.1795402  0.1757656 #>  [153,]    0.2108761    0.2102975  0.2058763 #>  [154,]    0.2881898    0.2873992  0.2813571 #>  [155,]    0.2124911    0.2119081  0.2074530 #>  [156,]    0.3425157    0.3415761  0.3343952 #>  [157,]    0.1431752    0.1427824  0.1397806 #>  [158,]    0.2145132    0.2139247  0.2094272 #>  [159,]    0.2007343    0.2001835  0.1959750 #>  [160,]    0.2489758    0.2482927  0.2430728 #>  [161,]    0.1585922    0.1581571  0.1548320 #>  [162,]    0.2587057    0.2579959  0.2525720 #>  [163,]    0.3230512    0.3221650  0.3153921 #>  [164,]    0.2087164    0.2081438  0.2037678 #>  [165,]    0.1877986    0.1872834  0.1833460 #>  [166,]    0.3173777    0.3165070  0.3098531 #>  [167,]    0.2430330    0.2423662  0.2372709 #>  [168,]    0.2216006    0.2209927  0.2163466 #>  [169,]    0.2458522    0.2451777  0.2400232 #>  [170,]    0.2016445    0.2010913  0.1968636 #>  [171,]    0.2880278    0.2872376  0.2811989 #>  [172,]    0.1875681    0.1870535  0.1831209 #>  [173,]    0.2346557    0.2340119  0.2290922 #>  [174,]    0.2379137    0.2372610  0.2322730 #>  [175,]    0.2463062    0.2456305  0.2404665 #>  [176,]    0.2740243    0.2732725  0.2675275 #>  [177,]    0.2354694    0.2348234  0.2298866 #>  [178,]    0.3031607    0.3023290  0.2959731 #>  [179,]    0.2088715    0.2082985  0.2039193 #>  [180,]    0.1995233    0.1989759  0.1947927 #>  [181,]    0.1933888    0.1928583  0.1888037 #>  [182,]    0.1997887    0.1992406  0.1950519 #>  [183,]    0.2017496    0.2011961  0.1969663 #>  [184,]    0.1397717    0.1393883  0.1364578 #>  [185,]    0.2234327    0.2228197  0.2181353 #>  [186,]    0.2676612    0.2669269  0.2613152 #>  [187,]    0.1886000    0.1880826  0.1841284 #>  [188,]    0.2181469    0.2175484  0.2129748 #>  [189,]    0.2444882    0.2438174  0.2386916 #>  [190,]    0.2158747    0.2152825  0.2107565 #>  [191,]    0.1865186    0.1860069  0.1820963 #>  [192,]    0.2109229    0.2103442  0.2059221 #>  [193,]    0.1825280    0.1820273  0.1782004 #>  [194,]    0.1932333    0.1927032  0.1886519 #>  [195,]    0.2112334    0.2106538  0.2062252 #>  [196,]    0.2294211    0.2287917  0.2239817 #>  [197,]    0.2073196    0.2067508  0.2024041 #>  [198,]    0.2841457    0.2833662  0.2774089 #>  [199,]    0.2138579    0.2132712  0.2087875 #>  [200,]    0.2116096    0.2110291  0.2065925 #>  [201,]    0.2127100    0.2121265  0.2076668 #>  [202,]    0.1764479    0.1759638  0.1722644 #>  [203,]    0.2703373    0.2695956  0.2639278 #>  [204,]    0.1631764    0.1627287  0.1593076 #>  [205,]    0.2698184    0.2690781  0.2634212 #>  [206,]    0.2665464    0.2658151  0.2602268 #>  [207,]    0.2655632    0.2648346  0.2592670 #>  [208,]    0.2872518    0.2864637  0.2804413 #>  [209,]    0.2059817    0.2054166  0.2010980 #>  [210,]    0.2201256    0.2195217  0.2149066 #>  [211,]    0.2187851    0.2181848  0.2135978 #>  [212,]    0.2186194    0.2180196  0.2134361 #>  [213,]    0.1740523    0.1735748  0.1699256 #>  [214,]    0.1844128    0.1839068  0.1800404 #>  [215,]    0.2400049    0.2393465  0.2343145 #>  [216,]    0.2344861    0.2338428  0.2289267 #>  [217,]    0.2115757    0.2109953  0.2065594 #>  [218,]    0.2349078    0.2342634  0.2293383 #>  [219,]    0.2040160    0.2034563  0.1991789 #>  [220,]    0.2432145    0.2425472  0.2374480 #>  [221,]    0.2086182    0.2080459  0.2036720 #>  [222,]    0.2203896    0.2197850  0.2151644 #>  [223,]    0.2936065    0.2928010  0.2866454 #>  [224,]    0.2120737    0.2114918  0.2070455 #>  [225,]    0.2143137    0.2137258  0.2092325 #>  [226,]    0.2109332    0.2103545  0.2059321 #>  [227,]    0.2092595    0.2086854  0.2042981 #>  [228,]    0.2556413    0.2549399  0.2495802 #>  [229,]    0.2208901    0.2202841  0.2156529 #>  [230,]    0.1784272    0.1779377  0.1741968 #>  [231,]    0.2737510    0.2729999  0.2672606 #>  [232,]    0.2317974    0.2311615  0.2263018 #>  [233,]    0.2026397    0.2020837  0.1978352 #>  [234,]    0.2763114    0.2755534  0.2697603 #>  [235,]    0.2695386    0.2687992  0.2631481 #>  [236,]    0.2568213    0.2561167  0.2507323 #>  [237,]    0.3483279    0.3473723  0.3400695 #>  [238,]    0.2699821    0.2692414  0.2635810 #>  [239,]    0.3103391    0.3094877  0.3029813 #>  [240,]    0.3020522    0.3012235  0.2948909 #>  [241,]    0.2124223    0.2118395  0.2073859 #>  [242,]    0.1892438    0.1887246  0.1847570 #>  [243,]    0.2762424    0.2754845  0.2696930 #>  [244,]    0.2875976    0.2868086  0.2807790 #>  [245,]    0.1671311    0.1666726  0.1631685 #>  [246,]    0.3028717    0.3020408  0.2956910 #>  [247,]    0.2800021    0.2792340  0.2733636 #>  [248,]    0.1961756    0.1956374  0.1915243 #>  [249,]    0.2103517    0.2097746  0.2053643 #>  [250,]    0.2259685    0.2253486  0.2206109 #>  [251,]    0.2421967    0.2415322  0.2364544 #>  [252,]    0.1725246    0.1720513  0.1684341 #>  [253,]    0.1993994    0.1988523  0.1946718 #>  [254,]    0.2514518    0.2507620  0.2454901 #>  [255,]    0.2729250    0.2721762  0.2664543 #>  [256,]    0.1753822    0.1749011  0.1712240 #>  [257,]    0.2118814    0.2113001  0.2068579 #>  [258,]    0.1973666    0.1968251  0.1926872 #>  [259,]    0.2555558    0.2548547  0.2494968 #>  [260,]    0.2276845    0.2270599  0.2222862 #>  [261,]    0.2349476    0.2343030  0.2293771 #>  [262,]    0.3097148    0.3088651  0.3023719 #>  [263,]    0.3058959    0.3050567  0.2986435 #>  [264,]    0.1703294    0.1698621  0.1662910 #>  [265,]    0.1513856    0.1509703  0.1477963 #>  [266,]    0.2180618    0.2174635  0.2128917 #>  [267,]    0.1687015    0.1682387  0.1647017 #>  [268,]    0.2340260    0.2333839  0.2284774 #>  [269,]    0.2726562    0.2719082  0.2661919 #>  [270,]    0.1789623    0.1784713  0.1747192 #>  [271,]    0.1982618    0.1977179  0.1935611 #>  [272,]    0.3020859    0.3012571  0.2949237 #>  [273,]    0.1763440    0.1758602  0.1721630 #>  [274,]    0.1886812    0.1881636  0.1842076 #>  [275,]    0.2507683    0.2500803  0.2448228 #>  [276,]    0.2817661    0.2809931  0.2750857 #>  [277,]    0.2984359    0.2976171  0.2913604 #>  [278,]    0.1861154    0.1856047  0.1817026 #>  [279,]    0.1946461    0.1941121  0.1900311 #>  [280,]    0.2829795    0.2822032  0.2762704 #>  [281,]    0.1863204    0.1858093  0.1819029 #>  [282,]    0.1901772    0.1896554  0.1856682 #>  [283,]    0.1955287    0.1949922  0.1908928 #>  [284,]    0.2646182    0.2638922  0.2583443 #>  [285,]    0.2895797    0.2887852  0.2827141 #>  [286,]    0.1772317    0.1767454  0.1730296 #>  [287,]    0.2112651    0.2106855  0.2062562 #>  [288,]    0.2311364    0.2305023  0.2256563 #>  [289,]    0.2417161    0.2410529  0.2359852 #>  [290,]    0.2454453    0.2447719  0.2396260 #>  [291,]    0.2013054    0.2007531  0.1965326 #>  [292,]    0.2202575    0.2196532  0.2150353 #>  [293,]    0.2153675    0.2147766  0.2102613 #>  [294,]    0.2188579    0.2182574  0.2136689 #>  [295,]    0.2079666    0.2073960  0.2030358 #>  [296,]    0.2072169    0.2066484  0.2023039 #>  [297,]    0.2694589    0.2687197  0.2630703 #>  [298,]    0.2118145    0.2112334  0.2067925 #>  [299,]    0.2190913    0.2184902  0.2138968 #>  [300,]    0.2468812    0.2462039  0.2410279 #>  [301,]    0.3176244    0.3167530  0.3100940 #>  [302,]    0.1471337    0.1467300  0.1436452 #>  [303,]    0.2788723    0.2781072  0.2722605 #>  [304,]    0.2294366    0.2288072  0.2239969 #>  [305,]    0.1952807    0.1947449  0.1906506 #>  [306,]    0.2034199    0.2028618  0.1985970 #>  [307,]    0.2914840    0.2906843  0.2845733 #>  [308,]    0.2640954    0.2633709  0.2578340 #>  [309,]    0.2411312    0.2404697  0.2354142 #>  [310,]    0.1973283    0.1967869  0.1926497 #>  [311,]    0.2999812    0.2991583  0.2928691 #>  [312,]    0.1958031    0.1952659  0.1911607 #>  [313,]    0.2527655    0.2520720  0.2467726 #>  [314,]    0.2073978    0.2068288  0.2024806 #>  [315,]    0.1662321    0.1657760  0.1622907 #>  [316,]    0.1863507    0.1858394  0.1819324 #>  [317,]    0.2074673    0.2068981  0.2025484 #>  [318,]    0.1694909    0.1690259  0.1654723 #>  [319,]    0.1226725    0.1223359  0.1197639 #>  [320,]    0.2125401    0.2119570  0.2075009 #>  [321,]    0.2040194    0.2034597  0.1991823 #>  [322,]    0.2680417    0.2673064  0.2616868 #>  [323,]    0.2343854    0.2337424  0.2288283 #>  [324,]    0.2115727    0.2109923  0.2065565 #>  [325,]    0.2223173    0.2217074  0.2170464 #>  [326,]    0.1941764    0.1936436  0.1895725 #>  [327,]    0.1670199    0.1665617  0.1630599 #>  [328,]    0.2345101    0.2338667  0.2289501 #>  [329,]    0.2300412    0.2294101  0.2245871 #>  [330,]    0.1771634    0.1766774  0.1729630 #>  [331,]    0.1703255    0.1698582  0.1662871 #>  [332,]    0.2238158    0.2232017  0.2185093 #>  [333,]    0.3041754    0.3033409  0.2969637 #>  [334,]    0.2347841    0.2341400  0.2292175 #>  [335,]    0.2068613    0.2062938  0.2019568 #>  [336,]    0.2558423    0.2551404  0.2497765 #>  [337,]    0.1533738    0.1529531  0.1497374 #>  [338,]    0.1915487    0.1910232  0.1870072 #>  [339,]    0.1972463    0.1967051  0.1925697 #>  [340,]    0.2184454    0.2178461  0.2132662 #>  [341,]    0.1659649    0.1655095  0.1620299 #>  [342,]    0.2259589    0.2253390  0.2206016 #>  [343,]    0.2537998    0.2531035  0.2477824 #>  [344,]    0.2597120    0.2589995  0.2535545 #>  [345,]    0.2371419    0.2364913  0.2315194 #>  [346,]    0.2352710    0.2346255  0.2296928 #>  [347,]    0.2017395    0.2011860  0.1969563 #>  [348,]    0.2065203    0.2059537  0.2016238 #>  [349,]    0.2498810    0.2491954  0.2439565 #>  [350,]    0.2412777    0.2406158  0.2355572 #>  [351,]    0.1740490    0.1735715  0.1699223 #>  [352,]    0.1980441    0.1975008  0.1933486 #>  [353,]    0.2386811    0.2380262  0.2330221 #>  [354,]    0.2917399    0.2909396  0.2848231 #>  [355,]    0.2510839    0.2503951  0.2451309 #>  [356,]    0.1748961    0.1744162  0.1707494 #>  [357,]    0.2183416    0.2177425  0.2131649 #>  [358,]    0.2040137    0.2034540  0.1991766 #>  [359,]    0.1747214    0.1742421  0.1705788 #>  [360,]    0.1434607    0.1430671  0.1400593 #>  [361,]    0.2380767    0.2374235  0.2324321 #>  [362,]    0.2478891    0.2472090  0.2420119 #>  [363,]    0.2493161    0.2486321  0.2434050 #>  [364,]    0.2166385    0.2160441  0.2115021 #>  [365,]    0.2159199    0.2153275  0.2108006 #>  [366,]    0.2628251    0.2621041  0.2565938 #>  [367,]    0.1474513    0.1470467  0.1439552 #>  [368,]    0.2231901    0.2225777  0.2178984 #>  [369,]    0.1607114    0.1602705  0.1569010 #>  [370,]    0.2180939    0.2174956  0.2129230 #>  [371,]    0.2851640    0.2843816  0.2784031 #>  [372,]    0.1346315    0.1342622  0.1314395 #>  [373,]    0.2652283    0.2645006  0.2589400 #>  [374,]    0.2002780    0.1997286  0.1955295 #>  [375,]    0.2110045    0.2104256  0.2060017 #>  [376,]    0.2482986    0.2476175  0.2424118 #>  [377,]    0.2602892    0.2595751  0.2541180 #>  [378,]    0.1578687    0.1574356  0.1541257 #>  [379,]    0.2261061    0.2254858  0.2207453 #>  [380,]    0.2290792    0.2284507  0.2236479 #>  [381,]    0.2744669    0.2737139  0.2679595 #>  [382,]    0.1502980    0.1498857  0.1467345 #>  [383,]    0.2101867    0.2096101  0.2052033 #>  [384,]    0.2129224    0.2123382  0.2078742 #>  [385,]    0.3258316    0.3249377  0.3181066 #>  [386,]    0.1592998    0.1588627  0.1555228 #>  [387,]    0.3368760    0.3359519  0.3288893 #>  [388,]    0.2144235    0.2138353  0.2093397 #>  [389,]    0.2183187    0.2177198  0.2131425 #>  [390,]    0.3100382    0.3091876  0.3026875 #>  [391,]    0.2192521    0.2186506  0.2140538 #>  [392,]    0.2959453    0.2951334  0.2889288 #>  [393,]    0.2095475    0.2089727  0.2045793 #>  [394,]    0.2273820    0.2267581  0.2219908 #>  [395,]    0.1768589    0.1763736  0.1726656 #>  [396,]    0.3088289    0.3079817  0.3015071 #>  [397,]    0.2030718    0.2025147  0.1982571 #>  [398,]    0.1931408    0.1926109  0.1885615 #>  [399,]    0.2121931    0.2116109  0.2071621 #>  [400,]    0.1826248    0.1821238  0.1782949 #>  [401,]    0.2058688    0.2053040  0.2009878 #>  [402,]    0.1947112    0.1941770  0.1900948 #>  [403,]    0.1809044    0.1804081  0.1766152 #>  [404,]    0.2806420    0.2798721  0.2739884 #>  [405,]    0.2014720    0.2009192  0.1966952 #>  [406,]    0.1734227    0.1729469  0.1693109 #>  [407,]    0.2228843    0.2222728  0.2175999 #>  [408,]    0.1902775    0.1897554  0.1857661 #>  [409,]    0.2100772    0.2095008  0.2050964 #>  [410,]    0.1735100    0.1730340  0.1693962 #>  [411,]    0.1926812    0.1921525  0.1881128 #>  [412,]    0.2123356    0.2117531  0.2073013 #>  [413,]    0.2239466    0.2233322  0.2186370 #>  [414,]    0.1824939    0.1819932  0.1781670 #>  [415,]    0.3213712    0.3204895  0.3137519 #>  [416,]    0.1467867    0.1463840  0.1433064 #>  [417,]    0.1654871    0.1650331  0.1615635 #>  [418,]    0.1909995    0.1904754  0.1864710 #>  [419,]    0.2048528    0.2042908  0.1999959 #>  [420,]    0.1767440    0.1762591  0.1725535 #>  [421,]    0.2312140    0.2305797  0.2257321 #>  [422,]    0.2513589    0.2506693  0.2453994 #>  [423,]    0.2487698    0.2480873  0.2428716 #>  [424,]    0.2082200    0.2076487  0.2032832 #>  [425,]    0.2258073    0.2251878  0.2204536 #>  [426,]    0.2261799    0.2255594  0.2208173 #>  [427,]    0.1817528    0.1812541  0.1774436 #>  [428,]    0.1594653    0.1590278  0.1556845 #>  [429,]    0.2652649    0.2645371  0.2589757 #>  [430,]    0.1571707    0.1567395  0.1534443 #>  [431,]    0.3139186    0.3130574  0.3064760 #>  [432,]    0.2210480    0.2204415  0.2158071 #>  [433,]    0.3008616    0.3000362  0.2937285 #>  [434,]    0.2693252    0.2685864  0.2629399 #>  [435,]    0.2976181    0.2968016  0.2905619 #>  [436,]    0.2028225    0.2022661  0.1980137 #>  [437,]    0.2791733    0.2784074  0.2725544 #>  [438,]    0.2199432    0.2193398  0.2147285 #>  [439,]    0.2173842    0.2167878  0.2122301 #>  [440,]    0.2108064    0.2102280  0.2058083 #>  [441,]    0.2196422    0.2190396  0.2144346 #>  [442,]    0.2175755    0.2169786  0.2124170 #>  [443,]    0.2897727    0.2889777  0.2829024 #>  [444,]    0.1753034    0.1748225  0.1711470 #>  [445,]    0.2166577    0.2160633  0.2115208 #>  [446,]    0.2193660    0.2187642  0.2141650 #>  [447,]    0.2021235    0.2015690  0.1973313 #>  [448,]    0.3202009    0.3193224  0.3126093 #>  [449,]    0.3314599    0.3305506  0.3236015 #>  [450,]    0.1792705    0.1787786  0.1750201 #>  [451,]    0.1870062    0.1864932  0.1825724 #>  [452,]    0.1813564    0.1808589  0.1770565 #>  [453,]    0.1924804    0.1919524  0.1879168 #>  [454,]    0.1767594    0.1762745  0.1725685 #>  [455,]    0.2163014    0.2157080  0.2111730 #>  [456,]    0.2135195    0.2129337  0.2084571 #>  [457,]    0.1687604    0.1682974  0.1647592 #>  [458,]    0.2212478    0.2206408  0.2160022 #>  [459,]    0.2525165    0.2518237  0.2465296 #>  [460,]    0.2409978    0.2403366  0.2352839 #>  [461,]    0.2221263    0.2215169  0.2168598 #>  [462,]    0.1627283    0.1622819  0.1588701 #>  [463,]    0.1698658    0.1693998  0.1658383 #>  [464,]    0.2074867    0.2069174  0.2025673 #>  [465,]    0.2092871    0.2087129  0.2043250 #>  [466,]    0.2648063    0.2640798  0.2585279 #>  [467,]    0.2105051    0.2099276  0.2055142 #>  [468,]    0.1873917    0.1868776  0.1829488 #>  [469,]    0.1893538    0.1888343  0.1848643 #>  [470,]    0.3018115    0.3009835  0.2946558 #>  [471,]    0.2512481    0.2505588  0.2452912 #>  [472,]    0.1324824    0.1321189  0.1293413 #>  [473,]    0.1939424    0.1934103  0.1893442 #>  [474,]    0.1640185    0.1635685  0.1601297 #>  [475,]    0.2366911    0.2360418  0.2310793 #>  [476,]    0.1992409    0.1986942  0.1945170 #>  [477,]    0.2484210    0.2477394  0.2425312 #>  [478,]    0.2106201    0.2100423  0.2056264 #>  [479,]    0.1990190    0.1984730  0.1943004 #>  [480,]    0.3437551    0.3428120  0.3356052 #>  [481,]    0.1849850    0.1844775  0.1805991 #>  [482,]    0.1916787    0.1911529  0.1871341 #>  [483,]    0.2430531    0.2423862  0.2372904 #>  [484,]    0.1590487    0.1586124  0.1552777 #>  [485,]    0.1349629    0.1345926  0.1317629 #>  [486,]    0.2033533    0.2027954  0.1985319 #>  [487,]    0.1558435    0.1554159  0.1521485 #>  [488,]    0.2155288    0.2149375  0.2104188 #>  [489,]    0.2789877    0.2782223  0.2723731 #>  [490,]    0.2051616    0.2045987  0.2002973 #>  [491,]    0.1797584    0.1792653  0.1754964 #>  [492,]    0.2382450    0.2375914  0.2325964 #>  [493,]    0.1886522    0.1881347  0.1841794 #>  [494,]    0.2300233    0.2293923  0.2245696 #>  [495,]    0.2773379    0.2765770  0.2707626 #>  [496,]    0.1936987    0.1931673  0.1891062 #>  [497,]    0.2280020    0.2273765  0.2225962 #>  [498,]    0.2367936    0.2361439  0.2311794 #>  [499,]    0.2517666    0.2510759  0.2457974 #>  [500,]    0.1900353    0.1895139  0.1855296 #>  [501,]    0.2782218    0.2774585  0.2716255 #>  [502,]    0.2018344    0.2012807  0.1970490 #>  [503,]    0.2347871    0.2341429  0.2292205 #>  [504,]    0.1759165    0.1754338  0.1717456 #>  [505,]    0.1548919    0.1544669  0.1512195 #>  [506,]    0.1895936    0.1890734  0.1850985 #>  [507,]    0.2416275    0.2409646  0.2358987 #>  [508,]    0.1709797    0.1705106  0.1669258 #>  [509,]    0.1850259    0.1845182  0.1806390 #>  [510,]    0.2458572    0.2451827  0.2400282 #>  [511,]    0.2341787    0.2335363  0.2286265 #>  [512,]    0.1849423    0.1844349  0.1805574 #>  [513,]    0.2150644    0.2144744  0.2099654 #>  [514,]    0.2047332    0.2041716  0.1998792 #>  [515,]    0.1728468    0.1723726  0.1687487 #>  [516,]    0.2821996    0.2814254  0.2755090 #>  [517,]    0.2240503    0.2234356  0.2187382 #>  [518,]    0.1709409    0.1704719  0.1668880 #>  [519,]    0.2077517    0.2071817  0.2028261 #>  [520,]    0.1629308    0.1624838  0.1590678 #>  [521,]    0.3067741    0.3059325  0.2995009 #>  [522,]    0.2513717    0.2506821  0.2454119 #>  [523,]    0.2093409    0.2087665  0.2043775 #>  [524,]    0.2128307    0.2122468  0.2077847 #>  [525,]    0.2735325    0.2727820  0.2670472 #>  [526,]    0.2000501    0.1995013  0.1953070 #>  [527,]    0.2213572    0.2207499  0.2161090 #>  [528,]    0.2099008    0.2093250  0.2049242 #>  [529,]    0.1464792    0.1460773  0.1430063 #>  [530,]    0.2191843    0.2185830  0.2139876 #>  [531,]    0.1947171    0.1941829  0.1901005 #>  [532,]    0.1982512    0.1977073  0.1935508 #>  [533,]    0.1860298    0.1855194  0.1816192 #>  [534,]    0.2293474    0.2287182  0.2239098 #>  [535,]    0.2293344    0.2287052  0.2238971 #>  [536,]    0.1967417    0.1962019  0.1920771 #>  [537,]    0.1986376    0.1980926  0.1939280 #>  [538,]    0.2237744    0.2231605  0.2184689 #>  [539,]    0.1942401    0.1937072  0.1896348 #>  [540,]    0.2034897    0.2029314  0.1986651 #>  [541,]    0.1773535    0.1768669  0.1731485 #>  [542,]    0.2518197    0.2511289  0.2458493 #>  [543,]    0.2546508    0.2539522  0.2486133 #>  [544,]    0.2524939    0.2518012  0.2465075 #>  [545,]    0.2276075    0.2269830  0.2222110 #>  [546,]    0.1994630    0.1989157  0.1947339 #>  [547,]    0.2545291    0.2538308  0.2484945 #>  [548,]    0.1903658    0.1898435  0.1858523 #>  [549,]    0.2477229    0.2470433  0.2418497 #>  [550,]    0.2789375    0.2781723  0.2723242 #>  [551,]    0.3189300    0.3180550  0.3113686 #>  [552,]    0.3126027    0.3117451  0.3051914 #>  [553,]    0.1767416    0.1762567  0.1725512 #>  [554,]    0.1896033    0.1890831  0.1851079 #>  [555,]    0.2378364    0.2371839  0.2321974 #>  [556,]    0.2180841    0.2174858  0.2129134 #>  [557,]    0.2479709    0.2472906  0.2420917 #>  [558,]    0.2438857    0.2432166  0.2381035 #>  [559,]    0.2712645    0.2705202  0.2648331 #>  [560,]    0.2015121    0.2009592  0.1967344 #>  [561,]    0.2171075    0.2165119  0.2119600 #>  [562,]    0.1897030    0.1891825  0.1852052 #>  [563,]    0.1709733    0.1705042  0.1669196 #>  [564,]    0.1861088    0.1855982  0.1816963 #>  [565,]    0.2323737    0.2317362  0.2268643 #>  [566,]    0.1589860    0.1585498  0.1552165 #>  [567,]    0.2036323    0.2030737  0.1988043 #>  [568,]    0.2475844    0.2469051  0.2417144 #>  [569,]    0.2819363    0.2811628  0.2752519 #>  [570,]    0.1636805    0.1632315  0.1597997 #>  [571,]    0.2285933    0.2279661  0.2231735 #>  [572,]    0.2127430    0.2121593  0.2076990 #>  [573,]    0.1904114    0.1898890  0.1858968 #>  [574,]    0.2615135    0.2607960  0.2553133 #>  [575,]    0.2622445    0.2615251  0.2560270 #>  [576,]    0.2045218    0.2039606  0.1996727 #>  [577,]    0.2350426    0.2343978  0.2294699 #>  [578,]    0.2121934    0.2116112  0.2071624 #>  [579,]    0.2352500    0.2346046  0.2296725 #>  [580,]    0.2133395    0.2127542  0.2082814 #>  [581,]    0.1846077    0.1841012  0.1802308 #>  [582,]    0.2101171    0.2095406  0.2051353 #>  [583,]    0.2265966    0.2259749  0.2212242 #>  [584,]    0.2279447    0.2273193  0.2225403 #>  [585,]    0.1900039    0.1894826  0.1854990 #>  [586,]    0.2308734    0.2302400  0.2253996 #>  [587,]    0.2578426    0.2571353  0.2517295 #>  [588,]    0.1968234    0.1962834  0.1921568 #>  [589,]    0.2557210    0.2550194  0.2496581 #>  [590,]    0.1605892    0.1601486  0.1567817 #>  [591,]    0.2220025    0.2213934  0.2167390 #>  [592,]    0.1778626    0.1773747  0.1736456 #>  [593,]    0.2707337    0.2699910  0.2643149 #>  [594,]    0.1647890    0.1643369  0.1608819 #>  [595,]    0.1913046    0.1907798  0.1867689 #>  [596,]    0.2008156    0.2002646  0.1960544 #>  [597,]    0.2117050    0.2111242  0.2066856 #>  [598,]    0.2517843    0.2510935  0.2458147 #>  [599,]    0.1869015    0.1863888  0.1824702 #>  [600,]    0.1539708    0.1535483  0.1503202 #>  [601,]    0.1470760    0.1466725  0.1435889 #>  [602,]    0.1986805    0.1981354  0.1939699 #>  [603,]    0.2650025    0.2642755  0.2587196 #>  [604,]    0.1954591    0.1949228  0.1908249 #>  [605,]    0.1966052    0.1960658  0.1919438 #>  [606,]    0.1947596    0.1942252  0.1901419 #>  [607,]    0.2103618    0.2097847  0.2053743 #>  [608,]    0.2069185    0.2063508  0.2020126 #>  [609,]    0.2168530    0.2162581  0.2117116 #>  [610,]    0.1924913    0.1919632  0.1879274 #>  [611,]    0.1714694    0.1709990  0.1674040 #>  [612,]    0.1543241    0.1539007  0.1506651 #>  [613,]    0.2047596    0.2041978  0.1999049 #>  [614,]    0.2415939    0.2409311  0.2358659 #>  [615,]    0.2245876    0.2239715  0.2192628 #>  [616,]    0.1644521    0.1640010  0.1605531 #>  [617,]    0.1745397    0.1740608  0.1704014 #>  [618,]    0.1968990    0.1963588  0.1922307 #>  [619,]    0.1965762    0.1960369  0.1919155 #>  [620,]    0.2071515    0.2065832  0.2022401 #>  [621,]    0.2183841    0.2177850  0.2132064 #>  [622,]    0.2296907    0.2290605  0.2242449 #>  [623,]    0.2151197    0.2145296  0.2100194 #>  [624,]    0.1981287    0.1975851  0.1934312 #>  [625,]    0.2093923    0.2088178  0.2044277 #>  [626,]    0.2334578    0.2328173  0.2279227 #>  [627,]    0.2680686    0.2673332  0.2617130 #>  [628,]    0.1772389    0.1767526  0.1730366 #>  [629,]    0.2172326    0.2166366  0.2120821 #>  [630,]    0.2747036    0.2739499  0.2681907 #>  [631,]    0.2104757    0.2098983  0.2054855 #>  [632,]    0.2683975    0.2676611  0.2620340 #>  [633,]    0.2689545    0.2682167  0.2625779 #>  [634,]    0.1978537    0.1973109  0.1931628 #>  [635,]    0.1752269    0.1747462  0.1710723 #>  [636,]    0.2053944    0.2048308  0.2005245 #>  [637,]    0.2168894    0.2162944  0.2117471 #>  [638,]    0.1980940    0.1975505  0.1933973 #>  [639,]    0.2447145    0.2440431  0.2389125 #>  [640,]    0.1629255    0.1624785  0.1590626 #>  [641,]    0.2953641    0.2945538  0.2883613 #>  [642,]    0.1701693    0.1697024  0.1661346 #>  [643,]    0.1928916    0.1923624  0.1883182 #>  [644,]    0.2907232    0.2899256  0.2838305 #>  [645,]    0.2638969    0.2631729  0.2576401 #>  [646,]    0.2819377    0.2811642  0.2752532 #>  [647,]    0.1299926    0.1296359  0.1269105 #>  [648,]    0.2333758    0.2327356  0.2278427 #>  [649,]    0.1605011    0.1600608  0.1566957 #>  [650,]    0.2224943    0.2218839  0.2172191 #>  [651,]    0.1686006    0.1681380  0.1646031 #>  [652,]    0.2305197    0.2298873  0.2250543 #>  [653,]    0.2096498    0.2090747  0.2046792 #>  [654,]    0.1920295    0.1915026  0.1874766 #>  [655,]    0.1958363    0.1952990  0.1911931 #>  [656,]    0.2427558    0.2420898  0.2370003 #>  [657,]    0.2038440    0.2032848  0.1990110 #>  [658,]    0.2232727    0.2226601  0.2179790 #>  [659,]    0.2014251    0.2008725  0.1966494 #>  [660,]    0.2153875    0.2147966  0.2102809 #>  [661,]    0.1838076    0.1833033  0.1794496 #>  [662,]    0.2685832    0.2678463  0.2622154 #>  [663,]    0.1746281    0.1741490  0.1704877 #>  [664,]    0.2119123    0.2113309  0.2068880 #>  [665,]    0.1630654    0.1626180  0.1591992 #>  [666,]    0.2211328    0.2205261  0.2158899 #>  [667,]    0.2444207    0.2437501  0.2386257 #>  [668,]    0.1683058    0.1678441  0.1643153 #>  [669,]    0.2261925    0.2255720  0.2208297 #>  [670,]    0.2717440    0.2709984  0.2653013 #>  [671,]    0.2265565    0.2259350  0.2211850 #>  [672,]    0.3184352    0.3175616  0.3108856 #>  [673,]    0.2256937    0.2250745  0.2203426 #>  [674,]    0.2845626    0.2837819  0.2778159 #>  [675,]    0.2422971    0.2416323  0.2365524 #>  [676,]    0.2090334    0.2084600  0.2040774 #>  [677,]    0.2239827    0.2233682  0.2186723 #>  [678,]    0.2436419    0.2429735  0.2378654 #>  [679,]    0.1917750    0.1912489  0.1872281 #>  [680,]    0.1990876    0.1985415  0.1943674 #>  [681,]    0.2312605    0.2306261  0.2257775 #>  [682,]    0.1907131    0.1901898  0.1861913 #>  [683,]    0.2099339    0.2093580  0.2049566 #>  [684,]    0.1770636    0.1765778  0.1728655 #>  [685,]    0.2170957    0.2165001  0.2119485 #>  [686,]    0.2398563    0.2391982  0.2341695 #>  [687,]    0.2148651    0.2142756  0.2097708 #>  [688,]    0.1898150    0.1892942  0.1853146 #>  [689,]    0.2473717    0.2466930  0.2415067 #>  [690,]    0.1837343    0.1832302  0.1793781 #>  [691,]    0.1574951    0.1570630  0.1537609 #>  [692,]    0.2354883    0.2348422  0.2299051 #>  [693,]    0.2502977    0.2496110  0.2443634 #>  [694,]    0.2682285    0.2674926  0.2618691 #>  [695,]    0.2046897    0.2041281  0.1998366 #>  [696,]    0.1860000    0.1854897  0.1815901 #>  [697,]    0.1684663    0.1680041  0.1644720 #>  [698,]    0.3089963    0.3081485  0.3016703 #>  [699,]    0.1885969    0.1880795  0.1841253 #>  [700,]    0.1958849    0.1953475  0.1912406 #>  [701,]    0.1824544    0.1819538  0.1781285 #>  [702,]    0.2433495    0.2426819  0.2375798 #>  [703,]    0.1728019    0.1723278  0.1687048 #>  [704,]    0.1875065    0.1869920  0.1830607 #>  [705,]    0.1701179    0.1696512  0.1660845 #>  [706,]    0.1343572    0.1339886  0.1311716 #>  [707,]    0.1859671    0.1854569  0.1815579 #>  [708,]    0.1941473    0.1936147  0.1895442 #>  [709,]    0.1731226    0.1726476  0.1690179 #>  [710,]    0.3076143    0.3067704  0.3003212 #>  [711,]    0.2097586    0.2091831  0.2047853 #>  [712,]    0.1885987    0.1880813  0.1841271 #>  [713,]    0.2004039    0.1998541  0.1956524 #>  [714,]    0.3012960    0.3004694  0.2941526 #>  [715,]    0.2432375    0.2425702  0.2374705 #>  [716,]    0.3006329    0.2998082  0.2935053 #>  [717,]    0.2000425    0.1994936  0.1952996 #>  [718,]    0.1887714    0.1882535  0.1842957 #>  [719,]    0.2072997    0.2067310  0.2023847 #>  [720,]    0.2631999    0.2624778  0.2569597 #>  [721,]    0.1805184    0.1800232  0.1762384 #>  [722,]    0.2045648    0.2040036  0.1997147 #>  [723,]    0.2258478    0.2252281  0.2204931 #>  [724,]    0.2405995    0.2399394  0.2348951 #>  [725,]    0.1929131    0.1923839  0.1883392 #>  [726,]    0.2398434    0.2391854  0.2341570 #>  [727,]    0.2676167    0.2668825  0.2612718 #>  [728,]    0.1935662    0.1930351  0.1889769 #>  [729,]    0.2068852    0.2063176  0.2019800 #>  [730,]    0.3549471    0.3539734  0.3465318 #>  [731,]    0.2514535    0.2507636  0.2454918 #>  [732,]    0.2697488    0.2690088  0.2633534 #>  [733,]    0.2176842    0.2170870  0.2125230 #>  [734,]    0.1807826    0.1802866  0.1764963 #>  [735,]    0.1845672    0.1840609  0.1801912 #>  [736,]    0.1962580    0.1957196  0.1916049 #>  [737,]    0.1486308    0.1482230  0.1451068 #>  [738,]    0.1817085    0.1812100  0.1774003 #>  [739,]    0.1887770    0.1882591  0.1843012 #>  [740,]    0.2037980    0.2032388  0.1989661 #>  [741,]    0.2011732    0.2006213  0.1964035 #>  [742,]    0.2258950    0.2252752  0.2205392 #>  [743,]    0.1681567    0.1676954  0.1641698 #>  [744,]    0.2503017    0.2496150  0.2443672 #>  [745,]    0.2183349    0.2177359  0.2131583 #>  [746,]    0.2008596    0.2003086  0.1960974 #>  [747,]    0.2910706    0.2902721  0.2841696 #>  [748,]    0.3024729    0.3016431  0.2953017 #>  [749,]    0.1806475    0.1801519  0.1763645 #>  [750,]    0.2540217    0.2533248  0.2479991 #>  [751,]    0.1876099    0.1870952  0.1831617 #>  [752,]    0.2357542    0.2351074  0.2301647 #>  [753,]    0.1572454    0.1568140  0.1535171 #>  [754,]    0.2254853    0.2248666  0.2201392 #>  [755,]    0.1503245    0.1499121  0.1467604 #>  [756,]    0.1661361    0.1656803  0.1621970 #>  [757,]    0.2243608    0.2237452  0.2190413 #>  [758,]    0.1781812    0.1776924  0.1739566 #>  [759,]    0.1888667    0.1883485  0.1843887 #>  [760,]    0.2725663    0.2718185  0.2661041 #>  [761,]    0.1699334    0.1694671  0.1659043 #>  [762,]    0.1853156    0.1848072  0.1809219 #>  [763,]    0.2459983    0.2453234  0.2401659 #>  [764,]    0.2369730    0.2363229  0.2313546 #>  [765,]    0.1923792    0.1918514  0.1878180 #>  [766,]    0.2364732    0.2358244  0.2308666 #>  [767,]    0.2352739    0.2346284  0.2296957 #>  [768,]    0.1700365    0.1695700  0.1660051 #>  [769,]    0.1863979    0.1858865  0.1819785 #>  [770,]    0.2426949    0.2420291  0.2369408 #>  [771,]    0.2055709    0.2050069  0.2006970 #>  [772,]    0.3217143    0.3208317  0.3140869 #>  [773,]    0.1833022    0.1827993  0.1789562 #>  [774,]    0.2131380    0.2125533  0.2080847 #>  [775,]    0.1886952    0.1881775  0.1842213 #>  [776,]    0.2196658    0.2190632  0.2144578 #>  [777,]    0.2212433    0.2206363  0.2159977 #>  [778,]    0.2260318    0.2254117  0.2206728 #>  [779,]    0.1660278    0.1655723  0.1620913 #>  [780,]    0.2500350    0.2493490  0.2441069 #>  [781,]    0.1964176    0.1958788  0.1917607 #>  [782,]    0.2062994    0.2057334  0.2014082 #>  [783,]    0.2361568    0.2355089  0.2305577 #>  [784,]    0.3164271    0.3155590  0.3089250 #>  [785,]    0.1809384    0.1804420  0.1766485 #>  [786,]    0.2076300    0.2070604  0.2027073 #>  [787,]    0.3276718    0.3267729  0.3199032 #>  [788,]    0.2225854    0.2219747  0.2173080 #>  [789,]    0.2204308    0.2198260  0.2152045 #>  [790,]    0.2794433    0.2786766  0.2728180 #>  [791,]    0.1728555    0.1723813  0.1687572 #>  [792,]    0.1893025    0.1887832  0.1848143 #>  [793,]    0.1556225    0.1551955  0.1519327 #>  [794,]    0.2734180    0.2726679  0.2669355 #>  [795,]    0.2214154    0.2208079  0.2161657 #>  [796,]    0.3002373    0.2994136  0.2931191 #>  [797,]    0.1480203    0.1476142  0.1445107 #>  [798,]    0.1864864    0.1859748  0.1820649 #>  [799,]    0.1987264    0.1981812  0.1940148 #>  [800,]    0.2301474    0.2295160  0.2246908 #>  [801,]    0.2266808    0.2260589  0.2213064 #>  [802,]    0.2184271    0.2178278  0.2132483 #>  [803,]    0.2529037    0.2522098  0.2469076 #>  [804,]    0.1908365    0.1903130  0.1863119 #>  [805,]    0.1952269    0.1946913  0.1905982 #>  [806,]    0.1776437    0.1771563  0.1734319 #>  [807,]    0.2059840    0.2054189  0.2011002 #>  [808,]    0.2110645    0.2104854  0.2060603 #>  [809,]    0.1671460    0.1666875  0.1631831 #>  [810,]    0.2262351    0.2256144  0.2208713 #>  [811,]    0.2414087    0.2407464  0.2356852 #>  [812,]    0.1985605    0.1980157  0.1938527 #>  [813,]    0.1910513    0.1905271  0.1865216 #>  [814,]    0.2039147    0.2033553  0.1990800 #>  [815,]    0.2581337    0.2574255  0.2520135 #>  [816,]    0.1415703    0.1411819  0.1382137 #>  [817,]    0.2201080    0.2195042  0.2148894 #>  [818,]    0.1741184    0.1736407  0.1699902 #>  [819,]    0.2548348    0.2541357  0.2487929 #>  [820,]    0.1948230    0.1942885  0.1902039 #>  [821,]    0.2059395    0.2053745  0.2010568 #>  [822,]    0.2210588    0.2204523  0.2158176 #>  [823,]    0.1750107    0.1745306  0.1708614 #>  [824,]    0.2495443    0.2488597  0.2436278 #>  [825,]    0.2710757    0.2703320  0.2646488 #>  [826,]    0.3285311    0.3276298  0.3207420 #>  [827,]    0.1878547    0.1873393  0.1834007 #>  [828,]    0.2252717    0.2246536  0.2199306 #>  [829,]    0.1895083    0.1889884  0.1850151 #>  [830,]    0.2214018    0.2207944  0.2161525 #>  [831,]    0.2385644    0.2379099  0.2329082 #>  [832,]    0.2477154    0.2470358  0.2418423 #>  [833,]    0.2008190    0.2002681  0.1960577 #>  [834,]    0.1833075    0.1828046  0.1789613 #>  [835,]    0.1466517    0.1462493  0.1431746 #>  [836,]    0.1567396    0.1563096  0.1530234 #>  [837,]    0.1566298    0.1562000  0.1529161 #>  [838,]    0.1848111    0.1843041  0.1804294 #>  [839,]    0.2246389    0.2240226  0.2193129 #>  [840,]    0.2147230    0.2141339  0.2096321 #>  [841,]    0.2030499    0.2024929  0.1982358 #>  [842,]    0.2486352    0.2479531  0.2427403 #>  [843,]    0.2189043    0.2183037  0.2137142 #>  [844,]    0.2771006    0.2763404  0.2705309 #>  [845,]    0.3016648    0.3008372  0.2945127 #>  [846,]    0.1653344    0.1648808  0.1614144 #>  [847,]    0.2140030    0.2134159  0.2089292 #>  [848,]    0.2096757    0.2091004  0.2047043 #>  [849,]    0.2600185    0.2593051  0.2538537 #>  [850,]    0.2503151    0.2496284  0.2443803 #>  [851,]    0.2102261    0.2096493  0.2052417 #>  [852,]    0.2098937    0.2093179  0.2049173 #>  [853,]    0.1840854    0.1835804  0.1797209 #>  [854,]    0.2193787    0.2187768  0.2141773 #>  [855,]    0.1946503    0.1941163  0.1900352 #>  [856,]    0.2103229    0.2097459  0.2053363 #>  [857,]    0.2930812    0.2922771  0.2861326 #>  [858,]    0.2252068    0.2245889  0.2198673 #>  [859,]    0.3270714    0.3261741  0.3193169 #>  [860,]    0.1346165    0.1342472  0.1314248 #>  [861,]    0.2072442    0.2066757  0.2023306 #>  [862,]    0.1970190    0.1964785  0.1923478 #>  [863,]    0.1578359    0.1574029  0.1540936 #>  [864,]    0.2585727    0.2578633  0.2524421 #>  [865,]    0.2895672    0.2887728  0.2827018 #>  [866,]    0.1618532    0.1614092  0.1580157 #>  [867,]    0.2755428    0.2747868  0.2690100 #>  [868,]    0.1880674    0.1875514  0.1836084 #>  [869,]    0.1878879    0.1873724  0.1834331 #>  [870,]    0.1893887    0.1888691  0.1848984 #>  [871,]    0.1683225    0.1678607  0.1643317 #>  [872,]    0.2139956    0.2134085  0.2089219 #>  [873,]    0.2226842    0.2220733  0.2174045 #>  [874,]    0.2290878    0.2284593  0.2236563 #>  [875,]    0.1491007    0.1486916  0.1455656 #>  [876,]    0.3077346    0.3068904  0.3004386 #>  [877,]    0.2094383    0.2088637  0.2044727 #>  [878,]    0.2339935    0.2333516  0.2284457 #>  [879,]    0.2053106    0.2047474  0.2004428 #>  [880,]    0.2587326    0.2580228  0.2525984 #>  [881,]    0.2472348    0.2465566  0.2413732 #>  [882,]    0.2305249    0.2298924  0.2250593 #>  [883,]    0.2352170    0.2345717  0.2296403 #>  [884,]    0.2326924    0.2320540  0.2271755 #>  [885,]    0.1872107    0.1866971  0.1827720 #>  [886,]    0.2240264    0.2234118  0.2187149 #>  [887,]    0.2234079    0.2227949  0.2181110 #>  [888,]    0.2001824    0.1996332  0.1954362 #>  [889,]    0.1988926    0.1983469  0.1941770 #>  [890,]    0.2111390    0.2105597  0.2061330 #>  [891,]    0.2392336    0.2385773  0.2335616 #>  [892,]    0.1824928    0.1819921  0.1781660 #>  [893,]    0.2177982    0.2172007  0.2126343 #>  [894,]    0.1743054    0.1738272  0.1701727 #>  [895,]    0.2675614    0.2668273  0.2612178 #>  [896,]    0.2860019    0.2852172  0.2792211 #>  [897,]    0.2460642    0.2453891  0.2402302 #>  [898,]    0.1490996    0.1486905  0.1455644 #>  [899,]    0.1774502    0.1769634  0.1732429 #>  [900,]    0.1691386    0.1686746  0.1651284 #>  [901,]    0.1843903    0.1838844  0.1800185 #>  [902,]    0.1769052    0.1764198  0.1727108 #>  [903,]    0.2292865    0.2286575  0.2238504 #>  [904,]    0.2355693    0.2349230  0.2299842 #>  [905,]    0.2523489    0.2516565  0.2463658 #>  [906,]    0.1789708    0.1784798  0.1747275 #>  [907,]    0.2706416    0.2698991  0.2642250 #>  [908,]    0.2655824    0.2648538  0.2592857 #>  [909,]    0.1787638    0.1782734  0.1745254 #>  [910,]    0.1790078    0.1785167  0.1747636 #>  [911,]    0.2135007    0.2129149  0.2084387 #>  [912,]    0.1991132    0.1985669  0.1943924 #>  [913,]    0.3406654    0.3397308  0.3325886 #>  [914,]    0.1665798    0.1661228  0.1626303 #>  [915,]    0.1360175    0.1356444  0.1327926 #>  [916,]    0.2364079    0.2357593  0.2308028 #>  [917,]    0.1835676    0.1830640  0.1792154 #>  [918,]    0.2013532    0.2008008  0.1965793 #>  [919,]    0.2268354    0.2262131  0.2214574 #>  [920,]    0.1804068    0.1799118  0.1761294 #>  [921,]    0.2268697    0.2262473  0.2214908 #>  [922,]    0.2306981    0.2300652  0.2252285 #>  [923,]    0.1816146    0.1811164  0.1773086 #>  [924,]    0.3263834    0.3254880  0.3186453 #>  [925,]    0.2457960    0.2451217  0.2399684 #>  [926,]    0.2656303    0.2649015  0.2593324 #>  [927,]    0.2180824    0.2174841  0.2129118 #>  [928,]    0.1953889    0.1948529  0.1907564 #>  [929,]    0.2501635    0.2494771  0.2442323 #>  [930,]    0.2663174    0.2655867  0.2600033 #>  [931,]    0.2211848    0.2205780  0.2159407 #>  [932,]    0.2265702    0.2259487  0.2211984 #>  [933,]    0.2106568    0.2100789  0.2056622 #>  [934,]    0.1805236    0.1800283  0.1762434 #>  [935,]    0.2209207    0.2203146  0.2156829 #>  [936,]    0.3534707    0.3525010  0.3450905 #>  [937,]    0.2062628    0.2056970  0.2013725 #>  [938,]    0.1968248    0.1962848  0.1921582 #>  [939,]    0.1901710    0.1896493  0.1856622 #>  [940,]    0.2170666    0.2164711  0.2119201 #>  [941,]    0.2266504    0.2260286  0.2212767 #>  [942,]    0.2025672    0.2020115  0.1977645 #>  [943,]    0.2103617    0.2097845  0.2053741 #>  [944,]    0.2015022    0.2009494  0.1967248 #>  [945,]    0.2006595    0.2001090  0.1959020 #>  [946,]    0.2239104    0.2232961  0.2186016 #>  [947,]    0.2290774    0.2284489  0.2236461 #>  [948,]    0.2134775    0.2128918  0.2084161 #>  [949,]    0.2517095    0.2510190  0.2457417 #>  [950,]    0.1879955    0.1874798  0.1835382 #>  [951,]    0.1712547    0.1707848  0.1671943 #>  [952,]    0.1792993    0.1788074  0.1750483 #>  [953,]    0.1875952    0.1870805  0.1831474 #>  [954,]    0.2093803    0.2088058  0.2044160 #>  [955,]    0.3088971    0.3080497  0.3015735 #>  [956,]    0.2256544    0.2250353  0.2203043 #>  [957,]    0.2061069    0.2055414  0.2012202 #>  [958,]    0.2114109    0.2108309  0.2063985 #>  [959,]    0.1575453    0.1571130  0.1538099 #>  [960,]    0.2213238    0.2207166  0.2160765 #>  [961,]    0.2611238    0.2604074  0.2549328 #>  [962,]    0.2154791    0.2148880  0.2103703 #>  [963,]    0.1947585    0.1942242  0.1901409 #>  [964,]    0.2659382    0.2652086  0.2596332 #>  [965,]    0.2004850    0.1999349  0.1957316 #>  [966,]    0.2805898    0.2798200  0.2739374 #>  [967,]    0.2227171    0.2221061  0.2174366 #>  [968,]    0.3285352    0.3276340  0.3207464 #>  [969,]    0.2372804    0.2366294  0.2316547 #>  [970,]    0.2736986    0.2729477  0.2672095 #>  [971,]    0.1739751    0.1734978  0.1698502 #>  [972,]    0.2683100    0.2675739  0.2619485 #>  [973,]    0.1853581    0.1848495  0.1809633 #>  [974,]    0.1931753    0.1926453  0.1885952 #>  [975,]    0.2938561    0.2930499  0.2868891 #>  [976,]    0.1923815    0.1918537  0.1878203 #>  [977,]    0.2218565    0.2212478  0.2165964 #>  [978,]    0.2387338    0.2380788  0.2330736 #>  [979,]    0.2084004    0.2078287  0.2034594 #>  [980,]    0.1800355    0.1795415  0.1757669 #>  [981,]    0.1836940    0.1831900  0.1793387 #>  [982,]    0.2514761    0.2507862  0.2455138 #>  [983,]    0.3091748    0.3083266  0.3018447 #>  [984,]    0.2236174    0.2230039  0.2183156 #>  [985,]    0.2763169    0.2755588  0.2697657 #>  [986,]    0.1803819    0.1798871  0.1761052 #>  [987,]    0.3220668    0.3211833  0.3144311 #>  [988,]    0.1821475    0.1816478  0.1778289 #>  [989,]    0.1632480    0.1628001  0.1593774 #>  [990,]    0.2078453    0.2072751  0.2029175 #>  [991,]    0.2078728    0.2073025  0.2029442 #>  [992,]    0.1807337    0.1802378  0.1764486 #>  [993,]    0.2966536    0.2958397  0.2896203 #>  [994,]    0.3351524    0.3342329  0.3272064 #>  [995,]    0.2253918    0.2247734  0.2200479 #>  [996,]    0.2220236    0.2214145  0.2167595 #>  [997,]    0.1894221    0.1889024  0.1849310 #>  [998,]    0.2159295    0.2153371  0.2108100 #>  [999,]    0.2563132    0.2556100  0.2502363 #> [1000,]    0.1976754    0.1971330  0.1929886 #>  #> $flux_rates #>         PrBMigration PoBMigration OMigration #>    [1,]     4014.871     4014.871   4014.871 #>    [2,]     3958.797     3958.797   3958.797 #>    [3,]     4240.154     4240.154   4240.154 #>    [4,]     3946.004     3946.004   3946.004 #>    [5,]     4079.703     4079.703   4079.703 #>    [6,]     4027.776     4027.776   4027.776 #>    [7,]     4269.112     4269.112   4269.112 #>    [8,]     3899.252     3899.252   3899.252 #>    [9,]     3914.815     3914.815   3914.815 #>   [10,]     4144.593     4144.593   4144.593 #>   [11,]     3751.217     3751.217   3751.217 #>   [12,]     3833.054     3833.054   3833.054 #>   [13,]     4984.885     4984.885   4984.885 #>   [14,]     4172.573     4172.573   4172.573 #>   [15,]     4105.980     4105.980   4105.980 #>   [16,]     3996.240     3996.240   3996.240 #>   [17,]     3858.412     3858.412   3858.412 #>   [18,]     4073.902     4073.902   4073.902 #>   [19,]     3780.383     3780.383   3780.383 #>   [20,]     4438.169     4438.169   4438.169 #>   [21,]     4115.235     4115.235   4115.235 #>   [22,]     3873.551     3873.551   3873.551 #>   [23,]     4533.461     4533.461   4533.461 #>   [24,]     4342.140     4342.140   4342.140 #>   [25,]     3984.016     3984.016   3984.016 #>   [26,]     4208.152     4208.152   4208.152 #>   [27,]     4279.166     4279.166   4279.166 #>   [28,]     4184.354     4184.354   4184.354 #>   [29,]     3966.598     3966.598   3966.598 #>   [30,]     2796.723     2796.723   2796.723 #>   [31,]     4230.561     4230.561   4230.561 #>   [32,]     4833.555     4833.555   4833.555 #>   [33,]     3597.946     3597.946   3597.946 #>   [34,]     4162.208     4162.208   4162.208 #>   [35,]     3899.308     3899.308   3899.308 #>   [36,]     3794.727     3794.727   3794.727 #>   [37,]     4432.758     4432.758   4432.758 #>   [38,]     3343.915     3343.915   3343.915 #>   [39,]     4236.643     4236.643   4236.643 #>   [40,]     3923.625     3923.625   3923.625 #>   [41,]     4974.810     4974.810   4974.810 #>   [42,]     4228.696     4228.696   4228.696 #>   [43,]     4475.476     4475.476   4475.476 #>   [44,]     3522.532     3522.532   3522.532 #>   [45,]     4502.280     4502.280   4502.280 #>   [46,]     3545.643     3545.643   3545.643 #>   [47,]     4325.812     4325.812   4325.812 #>   [48,]     4045.412     4045.412   4045.412 #>   [49,]     4250.497     4250.497   4250.497 #>   [50,]     3399.045     3399.045   3399.045 #>   [51,]     4186.958     4186.958   4186.958 #>   [52,]     4275.378     4275.378   4275.378 #>   [53,]     4003.196     4003.196   4003.196 #>   [54,]     4249.261     4249.261   4249.261 #>   [55,]     4529.995     4529.995   4529.995 #>   [56,]     4241.673     4241.673   4241.673 #>   [57,]     4181.170     4181.170   4181.170 #>   [58,]     3612.582     3612.582   3612.582 #>   [59,]     3882.514     3882.514   3882.514 #>   [60,]     4291.953     4291.953   4291.953 #>   [61,]     4077.656     4077.656   4077.656 #>   [62,]     4086.788     4086.788   4086.788 #>   [63,]     4897.572     4897.572   4897.572 #>   [64,]     4456.002     4456.002   4456.002 #>   [65,]     4145.285     4145.285   4145.285 #>   [66,]     4110.023     4110.023   4110.023 #>   [67,]     4440.002     4440.002   4440.002 #>   [68,]     3886.443     3886.443   3886.443 #>   [69,]     4247.680     4247.680   4247.680 #>   [70,]     3925.101     3925.101   3925.101 #>   [71,]     3794.187     3794.187   3794.187 #>   [72,]     3675.469     3675.469   3675.469 #>   [73,]     4465.421     4465.421   4465.421 #>   [74,]     4568.764     4568.764   4568.764 #>   [75,]     4464.460     4464.460   4464.460 #>   [76,]     3984.703     3984.703   3984.703 #>   [77,]     4077.922     4077.922   4077.922 #>   [78,]     4310.988     4310.988   4310.988 #>   [79,]     4292.550     4292.550   4292.550 #>   [80,]     3644.121     3644.121   3644.121 #>   [81,]     4517.591     4517.591   4517.591 #>   [82,]     4142.875     4142.875   4142.875 #>   [83,]     4846.924     4846.924   4846.924 #>   [84,]     4172.742     4172.742   4172.742 #>   [85,]     4616.689     4616.689   4616.689 #>   [86,]     4167.839     4167.839   4167.839 #>   [87,]     4159.652     4159.652   4159.652 #>   [88,]     4103.108     4103.108   4103.108 #>   [89,]     4932.716     4932.716   4932.716 #>   [90,]     4091.558     4091.558   4091.558 #>   [91,]     4394.823     4394.823   4394.823 #>   [92,]     3535.360     3535.360   3535.360 #>   [93,]     4260.350     4260.350   4260.350 #>   [94,]     3570.103     3570.103   3570.103 #>   [95,]     4420.356     4420.356   4420.356 #>   [96,]     3927.591     3927.591   3927.591 #>   [97,]     4150.128     4150.128   4150.128 #>   [98,]     4052.317     4052.317   4052.317 #>   [99,]     4069.873     4069.873   4069.873 #>  [100,]     4133.251     4133.251   4133.251 #>  [101,]     3951.078     3951.078   3951.078 #>  [102,]     4250.645     4250.645   4250.645 #>  [103,]     3191.113     3191.113   3191.113 #>  [104,]     3089.725     3089.725   3089.725 #>  [105,]     4680.579     4680.579   4680.579 #>  [106,]     3529.583     3529.583   3529.583 #>  [107,]     3820.673     3820.673   3820.673 #>  [108,]     3260.225     3260.225   3260.225 #>  [109,]     4860.879     4860.879   4860.879 #>  [110,]     3875.930     3875.930   3875.930 #>  [111,]     4309.704     4309.704   4309.704 #>  [112,]     3994.148     3994.148   3994.148 #>  [113,]     4125.777     4125.777   4125.777 #>  [114,]     4245.598     4245.598   4245.598 #>  [115,]     3893.934     3893.934   3893.934 #>  [116,]     3726.772     3726.772   3726.772 #>  [117,]     4231.586     4231.586   4231.586 #>  [118,]     4413.683     4413.683   4413.683 #>  [119,]     3473.882     3473.882   3473.882 #>  [120,]     3979.913     3979.913   3979.913 #>  [121,]     4390.020     4390.020   4390.020 #>  [122,]     3810.672     3810.672   3810.672 #>  [123,]     3918.248     3918.248   3918.248 #>  [124,]     3251.688     3251.688   3251.688 #>  [125,]     4377.165     4377.165   4377.165 #>  [126,]     4693.837     4693.837   4693.837 #>  [127,]     4060.551     4060.551   4060.551 #>  [128,]     4261.777     4261.777   4261.777 #>  [129,]     5110.603     5110.603   5110.603 #>  [130,]     4446.305     4446.305   4446.305 #>  [131,]     3793.672     3793.672   3793.672 #>  [132,]     3550.395     3550.395   3550.395 #>  [133,]     3979.382     3979.382   3979.382 #>  [134,]     3601.400     3601.400   3601.400 #>  [135,]     4704.562     4704.562   4704.562 #>  [136,]     4222.615     4222.615   4222.615 #>  [137,]     4496.061     4496.061   4496.061 #>  [138,]     4081.271     4081.271   4081.271 #>  [139,]     4257.065     4257.065   4257.065 #>  [140,]     3898.274     3898.274   3898.274 #>  [141,]     3958.554     3958.554   3958.554 #>  [142,]     4033.512     4033.512   4033.512 #>  [143,]     3523.959     3523.959   3523.959 #>  [144,]     4029.460     4029.460   4029.460 #>  [145,]     4394.089     4394.089   4394.089 #>  [146,]     3674.491     3674.491   3674.491 #>  [147,]     3727.758     3727.758   3727.758 #>  [148,]     4441.705     4441.705   4441.705 #>  [149,]     4172.066     4172.066   4172.066 #>  [150,]     4600.111     4600.111   4600.111 #>  [151,]     3792.860     3792.860   3792.860 #>  [152,]     4137.594     4137.594   4137.594 #>  [153,]     3941.879     3941.879   3941.879 #>  [154,]     4480.491     4480.491   4480.491 #>  [155,]     5089.843     5089.843   5089.843 #>  [156,]     4177.081     4177.081   4177.081 #>  [157,]     3372.164     3372.164   3372.164 #>  [158,]     4115.340     4115.340   4115.340 #>  [159,]     3960.940     3960.940   3960.940 #>  [160,]     4239.526     4239.526   4239.526 #>  [161,]     4086.401     4086.401   4086.401 #>  [162,]     4355.914     4355.914   4355.914 #>  [163,]     4361.555     4361.555   4361.555 #>  [164,]     4450.031     4450.031   4450.031 #>  [165,]     4451.700     4451.700   4451.700 #>  [166,]     4412.748     4412.748   4412.748 #>  [167,]     4293.662     4293.662   4293.662 #>  [168,]     4139.934     4139.934   4139.934 #>  [169,]     4167.990     4167.990   4167.990 #>  [170,]     3767.449     3767.449   3767.449 #>  [171,]     4934.286     4934.286   4934.286 #>  [172,]     4263.429     4263.429   4263.429 #>  [173,]     4207.556     4207.556   4207.556 #>  [174,]     3830.620     3830.620   3830.620 #>  [175,]     4050.240     4050.240   4050.240 #>  [176,]     4251.278     4251.278   4251.278 #>  [177,]     4368.626     4368.626   4368.626 #>  [178,]     4150.598     4150.598   4150.598 #>  [179,]     3979.265     3979.265   3979.265 #>  [180,]     4266.389     4266.389   4266.389 #>  [181,]     3920.479     3920.479   3920.479 #>  [182,]     3653.677     3653.677   3653.677 #>  [183,]     3768.375     3768.375   3768.375 #>  [184,]     3872.484     3872.484   3872.484 #>  [185,]     3936.857     3936.857   3936.857 #>  [186,]     4128.758     4128.758   4128.758 #>  [187,]     3358.509     3358.509   3358.509 #>  [188,]     4132.358     4132.358   4132.358 #>  [189,]     4171.528     4171.528   4171.528 #>  [190,]     4061.875     4061.875   4061.875 #>  [191,]     3824.323     3824.323   3824.323 #>  [192,]     4013.705     4013.705   4013.705 #>  [193,]     4242.800     4242.800   4242.800 #>  [194,]     3619.643     3619.643   3619.643 #>  [195,]     3668.482     3668.482   3668.482 #>  [196,]     4270.974     4270.974   4270.974 #>  [197,]     4423.267     4423.267   4423.267 #>  [198,]     4771.139     4771.139   4771.139 #>  [199,]     4371.608     4371.608   4371.608 #>  [200,]     4530.742     4530.742   4530.742 #>  [201,]     4038.055     4038.055   4038.055 #>  [202,]     3507.077     3507.077   3507.077 #>  [203,]     4526.264     4526.264   4526.264 #>  [204,]     3315.115     3315.115   3315.115 #>  [205,]     4821.666     4821.666   4821.666 #>  [206,]     4258.237     4258.237   4258.237 #>  [207,]     3749.173     3749.173   3749.173 #>  [208,]     4563.913     4563.913   4563.913 #>  [209,]     4087.059     4087.059   4087.059 #>  [210,]     4040.410     4040.410   4040.410 #>  [211,]     4386.418     4386.418   4386.418 #>  [212,]     4317.505     4317.505   4317.505 #>  [213,]     3122.331     3122.331   3122.331 #>  [214,]     3939.738     3939.738   3939.738 #>  [215,]     4949.422     4949.422   4949.422 #>  [216,]     4047.692     4047.692   4047.692 #>  [217,]     3812.860     3812.860   3812.860 #>  [218,]     4284.101     4284.101   4284.101 #>  [219,]     4249.231     4249.231   4249.231 #>  [220,]     4277.838     4277.838   4277.838 #>  [221,]     3976.884     3976.884   3976.884 #>  [222,]     4018.776     4018.776   4018.776 #>  [223,]     5020.111     5020.111   5020.111 #>  [224,]     3889.789     3889.789   3889.789 #>  [225,]     4187.687     4187.687   4187.687 #>  [226,]     4068.798     4068.798   4068.798 #>  [227,]     4026.140     4026.140   4026.140 #>  [228,]     4577.838     4577.838   4577.838 #>  [229,]     4563.218     4563.218   4563.218 #>  [230,]     4186.203     4186.203   4186.203 #>  [231,]     4108.326     4108.326   4108.326 #>  [232,]     3197.870     3197.870   3197.870 #>  [233,]     4299.906     4299.906   4299.906 #>  [234,]     4488.824     4488.824   4488.824 #>  [235,]     4979.123     4979.123   4979.123 #>  [236,]     4217.930     4217.930   4217.930 #>  [237,]     4601.276     4601.276   4601.276 #>  [238,]     4351.133     4351.133   4351.133 #>  [239,]     4721.317     4721.317   4721.317 #>  [240,]     4169.289     4169.289   4169.289 #>  [241,]     4285.530     4285.530   4285.530 #>  [242,]     3883.456     3883.456   3883.456 #>  [243,]     3771.446     3771.446   3771.446 #>  [244,]     4056.727     4056.727   4056.727 #>  [245,]     3992.552     3992.552   3992.552 #>  [246,]     4521.723     4521.723   4521.723 #>  [247,]     4155.273     4155.273   4155.273 #>  [248,]     4401.207     4401.207   4401.207 #>  [249,]     4876.470     4876.470   4876.470 #>  [250,]     4147.554     4147.554   4147.554 #>  [251,]     4218.555     4218.555   4218.555 #>  [252,]     4079.607     4079.607   4079.607 #>  [253,]     3665.719     3665.719   3665.719 #>  [254,]     4280.818     4280.818   4280.818 #>  [255,]     3562.164     3562.164   3562.164 #>  [256,]     3966.657     3966.657   3966.657 #>  [257,]     3904.361     3904.361   3904.361 #>  [258,]     4216.664     4216.664   4216.664 #>  [259,]     4457.253     4457.253   4457.253 #>  [260,]     4510.083     4510.083   4510.083 #>  [261,]     4663.655     4663.655   4663.655 #>  [262,]     4196.103     4196.103   4196.103 #>  [263,]     4018.914     4018.914   4018.914 #>  [264,]     3699.413     3699.413   3699.413 #>  [265,]     3525.508     3525.508   3525.508 #>  [266,]     4012.657     4012.657   4012.657 #>  [267,]     3702.728     3702.728   3702.728 #>  [268,]     4093.556     4093.556   4093.556 #>  [269,]     4106.679     4106.679   4106.679 #>  [270,]     3327.323     3327.323   3327.323 #>  [271,]     4128.934     4128.934   4128.934 #>  [272,]     4787.895     4787.895   4787.895 #>  [273,]     3744.744     3744.744   3744.744 #>  [274,]     4280.527     4280.527   4280.527 #>  [275,]     4243.875     4243.875   4243.875 #>  [276,]     4386.926     4386.926   4386.926 #>  [277,]     3982.630     3982.630   3982.630 #>  [278,]     4051.630     4051.630   4051.630 #>  [279,]     4400.395     4400.395   4400.395 #>  [280,]     4242.703     4242.703   4242.703 #>  [281,]     3868.896     3868.896   3868.896 #>  [282,]     3820.777     3820.777   3820.777 #>  [283,]     3886.760     3886.760   3886.760 #>  [284,]     4210.534     4210.534   4210.534 #>  [285,]     4278.935     4278.935   4278.935 #>  [286,]     3315.112     3315.112   3315.112 #>  [287,]     3511.030     3511.030   3511.030 #>  [288,]     4162.552     4162.552   4162.552 #>  [289,]     4415.037     4415.037   4415.037 #>  [290,]     3988.412     3988.412   3988.412 #>  [291,]     4142.066     4142.066   4142.066 #>  [292,]     4283.601     4283.601   4283.601 #>  [293,]     4017.662     4017.662   4017.662 #>  [294,]     3788.144     3788.144   3788.144 #>  [295,]     3979.631     3979.631   3979.631 #>  [296,]     4549.134     4549.134   4549.134 #>  [297,]     4423.271     4423.271   4423.271 #>  [298,]     4112.733     4112.733   4112.733 #>  [299,]     3889.449     3889.449   3889.449 #>  [300,]     3904.077     3904.077   3904.077 #>  [301,]     4094.909     4094.909   4094.909 #>  [302,]     3557.937     3557.937   3557.937 #>  [303,]     4524.809     4524.809   4524.809 #>  [304,]     4043.963     4043.963   4043.963 #>  [305,]     4374.967     4374.967   4374.967 #>  [306,]     4140.477     4140.477   4140.477 #>  [307,]     4056.391     4056.391   4056.391 #>  [308,]     4078.940     4078.940   4078.940 #>  [309,]     4113.429     4113.429   4113.429 #>  [310,]     4026.027     4026.027   4026.027 #>  [311,]     3967.326     3967.326   3967.326 #>  [312,]     3759.047     3759.047   3759.047 #>  [313,]     4399.000     4399.000   4399.000 #>  [314,]     3614.781     3614.781   3614.781 #>  [315,]     3983.362     3983.362   3983.362 #>  [316,]     3696.883     3696.883   3696.883 #>  [317,]     4585.744     4585.744   4585.744 #>  [318,]     3914.528     3914.528   3914.528 #>  [319,]     3026.107     3026.107   3026.107 #>  [320,]     4254.778     4254.778   4254.778 #>  [321,]     3471.224     3471.224   3471.224 #>  [322,]     3963.232     3963.232   3963.232 #>  [323,]     4251.560     4251.560   4251.560 #>  [324,]     3765.107     3765.107   3765.107 #>  [325,]     3636.361     3636.361   3636.361 #>  [326,]     4301.905     4301.905   4301.905 #>  [327,]     3662.924     3662.924   3662.924 #>  [328,]     4062.074     4062.074   4062.074 #>  [329,]     4473.401     4473.401   4473.401 #>  [330,]     3852.327     3852.327   3852.327 #>  [331,]     4031.697     4031.697   4031.697 #>  [332,]     4139.127     4139.127   4139.127 #>  [333,]     4674.022     4674.022   4674.022 #>  [334,]     4191.588     4191.588   4191.588 #>  [335,]     3969.248     3969.248   3969.248 #>  [336,]     4443.127     4443.127   4443.127 #>  [337,]     3554.798     3554.798   3554.798 #>  [338,]     4132.412     4132.412   4132.412 #>  [339,]     3807.633     3807.633   3807.633 #>  [340,]     4513.898     4513.898   4513.898 #>  [341,]     3866.132     3866.132   3866.132 #>  [342,]     3839.738     3839.738   3839.738 #>  [343,]     4198.664     4198.664   4198.664 #>  [344,]     4055.739     4055.739   4055.739 #>  [345,]     4760.994     4760.994   4760.994 #>  [346,]     4692.984     4692.984   4692.984 #>  [347,]     4341.111     4341.111   4341.111 #>  [348,]     3993.586     3993.586   3993.586 #>  [349,]     4223.871     4223.871   4223.871 #>  [350,]     4008.741     4008.741   4008.741 #>  [351,]     3900.366     3900.366   3900.366 #>  [352,]     3257.126     3257.126   3257.126 #>  [353,]     4475.810     4475.810   4475.810 #>  [354,]     4600.883     4600.883   4600.883 #>  [355,]     4810.125     4810.125   4810.125 #>  [356,]     3888.920     3888.920   3888.920 #>  [357,]     3774.067     3774.067   3774.067 #>  [358,]     4154.148     4154.148   4154.148 #>  [359,]     3859.595     3859.595   3859.595 #>  [360,]     3992.087     3992.087   3992.087 #>  [361,]     3965.767     3965.767   3965.767 #>  [362,]     4446.090     4446.090   4446.090 #>  [363,]     4282.859     4282.859   4282.859 #>  [364,]     4033.151     4033.151   4033.151 #>  [365,]     4388.299     4388.299   4388.299 #>  [366,]     4480.543     4480.543   4480.543 #>  [367,]     3474.835     3474.835   3474.835 #>  [368,]     4163.871     4163.871   4163.871 #>  [369,]     3622.977     3622.977   3622.977 #>  [370,]     4938.766     4938.766   4938.766 #>  [371,]     3798.539     3798.539   3798.539 #>  [372,]     3568.424     3568.424   3568.424 #>  [373,]     4021.904     4021.904   4021.904 #>  [374,]     4148.866     4148.866   4148.866 #>  [375,]     4284.818     4284.818   4284.818 #>  [376,]     3618.776     3618.776   3618.776 #>  [377,]     4136.104     4136.104   4136.104 #>  [378,]     4104.282     4104.282   4104.282 #>  [379,]     4212.553     4212.553   4212.553 #>  [380,]     4325.566     4325.566   4325.566 #>  [381,]     4498.162     4498.162   4498.162 #>  [382,]     3688.901     3688.901   3688.901 #>  [383,]     4094.502     4094.502   4094.502 #>  [384,]     3533.811     3533.811   3533.811 #>  [385,]     4151.581     4151.581   4151.581 #>  [386,]     4277.204     4277.204   4277.204 #>  [387,]     3997.797     3997.797   3997.797 #>  [388,]     3728.818     3728.818   3728.818 #>  [389,]     3833.448     3833.448   3833.448 #>  [390,]     5028.884     5028.884   5028.884 #>  [391,]     3880.408     3880.408   3880.408 #>  [392,]     4630.880     4630.880   4630.880 #>  [393,]     4017.796     4017.796   4017.796 #>  [394,]     4662.865     4662.865   4662.865 #>  [395,]     3457.408     3457.408   3457.408 #>  [396,]     3984.034     3984.034   3984.034 #>  [397,]     4047.129     4047.129   4047.129 #>  [398,]     4227.838     4227.838   4227.838 #>  [399,]     4315.549     4315.549   4315.549 #>  [400,]     4062.184     4062.184   4062.184 #>  [401,]     3683.150     3683.150   3683.150 #>  [402,]     3637.119     3637.119   3637.119 #>  [403,]     3926.578     3926.578   3926.578 #>  [404,]     3993.622     3993.622   3993.622 #>  [405,]     4194.861     4194.861   4194.861 #>  [406,]     3359.984     3359.984   3359.984 #>  [407,]     3860.927     3860.927   3860.927 #>  [408,]     4065.932     4065.932   4065.932 #>  [409,]     4158.437     4158.437   4158.437 #>  [410,]     3564.285     3564.285   3564.285 #>  [411,]     4031.801     4031.801   4031.801 #>  [412,]     3775.286     3775.286   3775.286 #>  [413,]     3970.545     3970.545   3970.545 #>  [414,]     3859.145     3859.145   3859.145 #>  [415,]     4713.433     4713.433   4713.433 #>  [416,]     3708.146     3708.146   3708.146 #>  [417,]     3998.536     3998.536   3998.536 #>  [418,]     3755.665     3755.665   3755.665 #>  [419,]     4101.731     4101.731   4101.731 #>  [420,]     3849.182     3849.182   3849.182 #>  [421,]     4394.013     4394.013   4394.013 #>  [422,]     4131.532     4131.532   4131.532 #>  [423,]     4531.560     4531.560   4531.560 #>  [424,]     4073.746     4073.746   4073.746 #>  [425,]     4187.277     4187.277   4187.277 #>  [426,]     4311.541     4311.541   4311.541 #>  [427,]     3220.776     3220.776   3220.776 #>  [428,]     3175.656     3175.656   3175.656 #>  [429,]     4120.697     4120.697   4120.697 #>  [430,]     3414.586     3414.586   3414.586 #>  [431,]     4267.424     4267.424   4267.424 #>  [432,]     4227.826     4227.826   4227.826 #>  [433,]     4683.587     4683.587   4683.587 #>  [434,]     3716.378     3716.378   3716.378 #>  [435,]     4276.184     4276.184   4276.184 #>  [436,]     4032.949     4032.949   4032.949 #>  [437,]     4353.549     4353.549   4353.549 #>  [438,]     4318.634     4318.634   4318.634 #>  [439,]     4587.163     4587.163   4587.163 #>  [440,]     3864.379     3864.379   3864.379 #>  [441,]     4352.082     4352.082   4352.082 #>  [442,]     3860.442     3860.442   3860.442 #>  [443,]     4813.198     4813.198   4813.198 #>  [444,]     4473.660     4473.660   4473.660 #>  [445,]     4371.478     4371.478   4371.478 #>  [446,]     4457.847     4457.847   4457.847 #>  [447,]     3587.385     3587.385   3587.385 #>  [448,]     4608.620     4608.620   4608.620 #>  [449,]     4249.870     4249.870   4249.870 #>  [450,]     3515.669     3515.669   3515.669 #>  [451,]     4223.052     4223.052   4223.052 #>  [452,]     4351.422     4351.422   4351.422 #>  [453,]     3885.546     3885.546   3885.546 #>  [454,]     3957.587     3957.587   3957.587 #>  [455,]     4333.858     4333.858   4333.858 #>  [456,]     4032.764     4032.764   4032.764 #>  [457,]     3469.998     3469.998   3469.998 #>  [458,]     3872.814     3872.814   3872.814 #>  [459,]     3882.332     3882.332   3882.332 #>  [460,]     4680.170     4680.170   4680.170 #>  [461,]     3981.060     3981.060   3981.060 #>  [462,]     3472.634     3472.634   3472.634 #>  [463,]     4311.297     4311.297   4311.297 #>  [464,]     3917.236     3917.236   3917.236 #>  [465,]     4422.145     4422.145   4422.145 #>  [466,]     4428.580     4428.580   4428.580 #>  [467,]     3943.415     3943.415   3943.415 #>  [468,]     3663.310     3663.310   3663.310 #>  [469,]     3883.536     3883.536   3883.536 #>  [470,]     4573.676     4573.676   4573.676 #>  [471,]     4400.456     4400.456   4400.456 #>  [472,]     3282.006     3282.006   3282.006 #>  [473,]     3953.026     3953.026   3953.026 #>  [474,]     3339.419     3339.419   3339.419 #>  [475,]     4459.935     4459.935   4459.935 #>  [476,]     3880.331     3880.331   3880.331 #>  [477,]     3916.262     3916.262   3916.262 #>  [478,]     4005.631     4005.631   4005.631 #>  [479,]     4029.267     4029.267   4029.267 #>  [480,]     4487.191     4487.191   4487.191 #>  [481,]     3696.663     3696.663   3696.663 #>  [482,]     4052.909     4052.909   4052.909 #>  [483,]     4500.722     4500.722   4500.722 #>  [484,]     3654.257     3654.257   3654.257 #>  [485,]     3784.533     3784.533   3784.533 #>  [486,]     4202.540     4202.540   4202.540 #>  [487,]     3526.722     3526.722   3526.722 #>  [488,]     3421.778     3421.778   3421.778 #>  [489,]     4753.190     4753.190   4753.190 #>  [490,]     3985.846     3985.846   3985.846 #>  [491,]     3948.488     3948.488   3948.488 #>  [492,]     4047.956     4047.956   4047.956 #>  [493,]     4309.384     4309.384   4309.384 #>  [494,]     4759.801     4759.801   4759.801 #>  [495,]     3802.689     3802.689   3802.689 #>  [496,]     3974.875     3974.875   3974.875 #>  [497,]     3954.040     3954.040   3954.040 #>  [498,]     3870.758     3870.758   3870.758 #>  [499,]     4247.119     4247.119   4247.119 #>  [500,]     4545.693     4545.693   4545.693 #>  [501,]     3891.000     3891.000   3891.000 #>  [502,]     4186.330     4186.330   4186.330 #>  [503,]     3614.789     3614.789   3614.789 #>  [504,]     4212.562     4212.562   4212.562 #>  [505,]     3489.866     3489.866   3489.866 #>  [506,]     3109.322     3109.322   3109.322 #>  [507,]     3724.929     3724.929   3724.929 #>  [508,]     3567.204     3567.204   3567.204 #>  [509,]     4233.756     4233.756   4233.756 #>  [510,]     3965.963     3965.963   3965.963 #>  [511,]     4488.684     4488.684   4488.684 #>  [512,]     3915.748     3915.748   3915.748 #>  [513,]     4142.725     4142.725   4142.725 #>  [514,]     3233.064     3233.064   3233.064 #>  [515,]     3910.116     3910.116   3910.116 #>  [516,]     4080.790     4080.790   4080.790 #>  [517,]     4035.069     4035.069   4035.069 #>  [518,]     3549.492     3549.492   3549.492 #>  [519,]     3695.055     3695.055   3695.055 #>  [520,]     3364.561     3364.561   3364.561 #>  [521,]     4050.569     4050.569   4050.569 #>  [522,]     4818.331     4818.331   4818.331 #>  [523,]     4427.815     4427.815   4427.815 #>  [524,]     3820.972     3820.972   3820.972 #>  [525,]     4697.283     4697.283   4697.283 #>  [526,]     4402.699     4402.699   4402.699 #>  [527,]     3943.107     3943.107   3943.107 #>  [528,]     4269.118     4269.118   4269.118 #>  [529,]     2894.746     2894.746   2894.746 #>  [530,]     4271.278     4271.278   4271.278 #>  [531,]     3823.257     3823.257   3823.257 #>  [532,]     3608.366     3608.366   3608.366 #>  [533,]     3892.579     3892.579   3892.579 #>  [534,]     3859.943     3859.943   3859.943 #>  [535,]     4000.376     4000.376   4000.376 #>  [536,]     3415.862     3415.862   3415.862 #>  [537,]     3802.314     3802.314   3802.314 #>  [538,]     4285.148     4285.148   4285.148 #>  [539,]     4191.052     4191.052   4191.052 #>  [540,]     3839.776     3839.776   3839.776 #>  [541,]     4209.268     4209.268   4209.268 #>  [542,]     4032.661     4032.661   4032.661 #>  [543,]     4538.834     4538.834   4538.834 #>  [544,]     4034.526     4034.526   4034.526 #>  [545,]     4627.096     4627.096   4627.096 #>  [546,]     3324.411     3324.411   3324.411 #>  [547,]     4141.833     4141.833   4141.833 #>  [548,]     3852.855     3852.855   3852.855 #>  [549,]     3957.369     3957.369   3957.369 #>  [550,]     4327.016     4327.016   4327.016 #>  [551,]     4212.783     4212.783   4212.783 #>  [552,]     3978.572     3978.572   3978.572 #>  [553,]     3890.475     3890.475   3890.475 #>  [554,]     4063.418     4063.418   4063.418 #>  [555,]     4205.742     4205.742   4205.742 #>  [556,]     4133.616     4133.616   4133.616 #>  [557,]     4231.818     4231.818   4231.818 #>  [558,]     3415.961     3415.961   3415.961 #>  [559,]     4158.640     4158.640   4158.640 #>  [560,]     3783.329     3783.329   3783.329 #>  [561,]     4383.454     4383.454   4383.454 #>  [562,]     3796.828     3796.828   3796.828 #>  [563,]     3745.627     3745.627   3745.627 #>  [564,]     4418.729     4418.729   4418.729 #>  [565,]     4223.404     4223.404   4223.404 #>  [566,]     3384.343     3384.343   3384.343 #>  [567,]     4213.990     4213.990   4213.990 #>  [568,]     3706.330     3706.330   3706.330 #>  [569,]     3954.097     3954.097   3954.097 #>  [570,]     4555.895     4555.895   4555.895 #>  [571,]     4374.443     4374.443   4374.443 #>  [572,]     3333.227     3333.227   3333.227 #>  [573,]     3616.050     3616.050   3616.050 #>  [574,]     4229.746     4229.746   4229.746 #>  [575,]     4270.088     4270.088   4270.088 #>  [576,]     4145.152     4145.152   4145.152 #>  [577,]     4221.769     4221.769   4221.769 #>  [578,]     4009.652     4009.652   4009.652 #>  [579,]     3988.186     3988.186   3988.186 #>  [580,]     3841.649     3841.649   3841.649 #>  [581,]     3923.493     3923.493   3923.493 #>  [582,]     3691.702     3691.702   3691.702 #>  [583,]     3818.120     3818.120   3818.120 #>  [584,]     4071.446     4071.446   4071.446 #>  [585,]     3873.703     3873.703   3873.703 #>  [586,]     4005.418     4005.418   4005.418 #>  [587,]     3697.187     3697.187   3697.187 #>  [588,]     4172.754     4172.754   4172.754 #>  [589,]     4424.710     4424.710   4424.710 #>  [590,]     3551.635     3551.635   3551.635 #>  [591,]     4247.355     4247.355   4247.355 #>  [592,]     3634.609     3634.609   3634.609 #>  [593,]     3967.395     3967.395   3967.395 #>  [594,]     3493.421     3493.421   3493.421 #>  [595,]     3893.830     3893.830   3893.830 #>  [596,]     3331.556     3331.556   3331.556 #>  [597,]     4456.526     4456.526   4456.526 #>  [598,]     4425.346     4425.346   4425.346 #>  [599,]     4384.472     4384.472   4384.472 #>  [600,]     3689.691     3689.691   3689.691 #>  [601,]     3361.572     3361.572   3361.572 #>  [602,]     4186.245     4186.245   4186.245 #>  [603,]     3955.394     3955.394   3955.394 #>  [604,]     3693.059     3693.059   3693.059 #>  [605,]     3979.120     3979.120   3979.120 #>  [606,]     3680.071     3680.071   3680.071 #>  [607,]     4377.601     4377.601   4377.601 #>  [608,]     3327.500     3327.500   3327.500 #>  [609,]     4162.392     4162.392   4162.392 #>  [610,]     4127.555     4127.555   4127.555 #>  [611,]     3632.526     3632.526   3632.526 #>  [612,]     3726.603     3726.603   3726.603 #>  [613,]     4053.380     4053.380   4053.380 #>  [614,]     4243.021     4243.021   4243.021 #>  [615,]     4189.840     4189.840   4189.840 #>  [616,]     3590.762     3590.762   3590.762 #>  [617,]     4510.224     4510.224   4510.224 #>  [618,]     3946.367     3946.367   3946.367 #>  [619,]     3941.073     3941.073   3941.073 #>  [620,]     4232.371     4232.371   4232.371 #>  [621,]     4095.986     4095.986   4095.986 #>  [622,]     4272.874     4272.874   4272.874 #>  [623,]     4238.479     4238.479   4238.479 #>  [624,]     3923.515     3923.515   3923.515 #>  [625,]     4099.502     4099.502   4099.502 #>  [626,]     4038.820     4038.820   4038.820 #>  [627,]     4528.603     4528.603   4528.603 #>  [628,]     3880.221     3880.221   3880.221 #>  [629,]     4252.938     4252.938   4252.938 #>  [630,]     4162.830     4162.830   4162.830 #>  [631,]     3802.291     3802.291   3802.291 #>  [632,]     4066.795     4066.795   4066.795 #>  [633,]     4334.097     4334.097   4334.097 #>  [634,]     3619.427     3619.427   3619.427 #>  [635,]     4223.155     4223.155   4223.155 #>  [636,]     4684.815     4684.815   4684.815 #>  [637,]     4720.736     4720.736   4720.736 #>  [638,]     4114.863     4114.863   4114.863 #>  [639,]     4476.279     4476.279   4476.279 #>  [640,]     3470.573     3470.573   3470.573 #>  [641,]     4685.149     4685.149   4685.149 #>  [642,]     4070.223     4070.223   4070.223 #>  [643,]     4346.604     4346.604   4346.604 #>  [644,]     4365.684     4365.684   4365.684 #>  [645,]     4512.373     4512.373   4512.373 #>  [646,]     4370.883     4370.883   4370.883 #>  [647,]     3088.740     3088.740   3088.740 #>  [648,]     4373.331     4373.331   4373.331 #>  [649,]     4238.353     4238.353   4238.353 #>  [650,]     4072.654     4072.654   4072.654 #>  [651,]     3803.473     3803.473   3803.473 #>  [652,]     4067.937     4067.937   4067.937 #>  [653,]     3777.306     3777.306   3777.306 #>  [654,]     3990.744     3990.744   3990.744 #>  [655,]     4144.304     4144.304   4144.304 #>  [656,]     3913.299     3913.299   3913.299 #>  [657,]     3823.313     3823.313   3823.313 #>  [658,]     4252.871     4252.871   4252.871 #>  [659,]     4139.214     4139.214   4139.214 #>  [660,]     3838.062     3838.062   3838.062 #>  [661,]     4197.704     4197.704   4197.704 #>  [662,]     3974.890     3974.890   3974.890 #>  [663,]     3656.549     3656.549   3656.549 #>  [664,]     4101.702     4101.702   4101.702 #>  [665,]     3662.343     3662.343   3662.343 #>  [666,]     4114.889     4114.889   4114.889 #>  [667,]     4440.042     4440.042   4440.042 #>  [668,]     4158.220     4158.220   4158.220 #>  [669,]     4161.077     4161.077   4161.077 #>  [670,]     3715.209     3715.209   3715.209 #>  [671,]     4437.849     4437.849   4437.849 #>  [672,]     4447.430     4447.430   4447.430 #>  [673,]     4650.903     4650.903   4650.903 #>  [674,]     4202.673     4202.673   4202.673 #>  [675,]     4232.158     4232.158   4232.158 #>  [676,]     3524.199     3524.199   3524.199 #>  [677,]     3694.655     3694.655   3694.655 #>  [678,]     3610.847     3610.847   3610.847 #>  [679,]     3766.271     3766.271   3766.271 #>  [680,]     3514.672     3514.672   3514.672 #>  [681,]     4165.675     4165.675   4165.675 #>  [682,]     4000.156     4000.156   4000.156 #>  [683,]     3820.294     3820.294   3820.294 #>  [684,]     3948.407     3948.407   3948.407 #>  [685,]     4195.843     4195.843   4195.843 #>  [686,]     4073.110     4073.110   4073.110 #>  [687,]     4106.827     4106.827   4106.827 #>  [688,]     3922.688     3922.688   3922.688 #>  [689,]     4371.417     4371.417   4371.417 #>  [690,]     3996.196     3996.196   3996.196 #>  [691,]     4198.271     4198.271   4198.271 #>  [692,]     4298.104     4298.104   4298.104 #>  [693,]     4353.243     4353.243   4353.243 #>  [694,]     3994.834     3994.834   3994.834 #>  [695,]     4047.473     4047.473   4047.473 #>  [696,]     3938.820     3938.820   3938.820 #>  [697,]     4090.086     4090.086   4090.086 #>  [698,]     4635.802     4635.802   4635.802 #>  [699,]     3841.331     3841.331   3841.331 #>  [700,]     4057.663     4057.663   4057.663 #>  [701,]     4146.500     4146.500   4146.500 #>  [702,]     4524.254     4524.254   4524.254 #>  [703,]     3695.904     3695.904   3695.904 #>  [704,]     4251.495     4251.495   4251.495 #>  [705,]     3581.866     3581.866   3581.866 #>  [706,]     3237.119     3237.119   3237.119 #>  [707,]     3399.285     3399.285   3399.285 #>  [708,]     3743.958     3743.958   3743.958 #>  [709,]     4266.237     4266.237   4266.237 #>  [710,]     4242.745     4242.745   4242.745 #>  [711,]     4421.901     4421.901   4421.901 #>  [712,]     3993.169     3993.169   3993.169 #>  [713,]     4321.985     4321.985   4321.985 #>  [714,]     4899.514     4899.514   4899.514 #>  [715,]     3937.239     3937.239   3937.239 #>  [716,]     4024.154     4024.154   4024.154 #>  [717,]     4154.054     4154.054   4154.054 #>  [718,]     4270.285     4270.285   4270.285 #>  [719,]     4718.708     4718.708   4718.708 #>  [720,]     4042.673     4042.673   4042.673 #>  [721,]     4683.981     4683.981   4683.981 #>  [722,]     4205.732     4205.732   4205.732 #>  [723,]     4353.457     4353.457   4353.457 #>  [724,]     3495.295     3495.295   3495.295 #>  [725,]     3906.339     3906.339   3906.339 #>  [726,]     4063.573     4063.573   4063.573 #>  [727,]     3948.698     3948.698   3948.698 #>  [728,]     3403.915     3403.915   3403.915 #>  [729,]     3969.057     3969.057   3969.057 #>  [730,]     4682.499     4682.499   4682.499 #>  [731,]     3867.885     3867.885   3867.885 #>  [732,]     3974.080     3974.080   3974.080 #>  [733,]     4558.393     4558.393   4558.393 #>  [734,]     3393.530     3393.530   3393.530 #>  [735,]     3665.960     3665.960   3665.960 #>  [736,]     3772.583     3772.583   3772.583 #>  [737,]     3684.098     3684.098   3684.098 #>  [738,]     3609.304     3609.304   3609.304 #>  [739,]     3839.524     3839.524   3839.524 #>  [740,]     3522.093     3522.093   3522.093 #>  [741,]     4070.445     4070.445   4070.445 #>  [742,]     4217.540     4217.540   4217.540 #>  [743,]     3816.399     3816.399   3816.399 #>  [744,]     4571.737     4571.737   4571.737 #>  [745,]     3993.737     3993.737   3993.737 #>  [746,]     3500.433     3500.433   3500.433 #>  [747,]     4551.237     4551.237   4551.237 #>  [748,]     3942.853     3942.853   3942.853 #>  [749,]     3729.835     3729.835   3729.835 #>  [750,]     3990.408     3990.408   3990.408 #>  [751,]     3786.101     3786.101   3786.101 #>  [752,]     4295.686     4295.686   4295.686 #>  [753,]     3736.953     3736.953   3736.953 #>  [754,]     4034.428     4034.428   4034.428 #>  [755,]     3197.661     3197.661   3197.661 #>  [756,]     3705.336     3705.336   3705.336 #>  [757,]     4364.757     4364.757   4364.757 #>  [758,]     3911.249     3911.249   3911.249 #>  [759,]     3867.001     3867.001   3867.001 #>  [760,]     4114.592     4114.592   4114.592 #>  [761,]     3712.726     3712.726   3712.726 #>  [762,]     3882.440     3882.440   3882.440 #>  [763,]     4005.677     4005.677   4005.677 #>  [764,]     4001.495     4001.495   4001.495 #>  [765,]     4264.247     4264.247   4264.247 #>  [766,]     3990.710     3990.710   3990.710 #>  [767,]     4411.171     4411.171   4411.171 #>  [768,]     3638.632     3638.632   3638.632 #>  [769,]     3958.524     3958.524   3958.524 #>  [770,]     3991.978     3991.978   3991.978 #>  [771,]     3899.894     3899.894   3899.894 #>  [772,]     4253.216     4253.216   4253.216 #>  [773,]     4244.469     4244.469   4244.469 #>  [774,]     3939.799     3939.799   3939.799 #>  [775,]     4340.390     4340.390   4340.390 #>  [776,]     3473.768     3473.768   3473.768 #>  [777,]     4297.083     4297.083   4297.083 #>  [778,]     4015.322     4015.322   4015.322 #>  [779,]     3794.727     3794.727   3794.727 #>  [780,]     3753.481     3753.481   3753.481 #>  [781,]     4190.961     4190.961   4190.961 #>  [782,]     3942.913     3942.913   3942.913 #>  [783,]     4020.967     4020.967   4020.967 #>  [784,]     4672.887     4672.887   4672.887 #>  [785,]     3686.824     3686.824   3686.824 #>  [786,]     3986.586     3986.586   3986.586 #>  [787,]     4155.964     4155.964   4155.964 #>  [788,]     3928.342     3928.342   3928.342 #>  [789,]     4609.897     4609.897   4609.897 #>  [790,]     4276.930     4276.930   4276.930 #>  [791,]     3715.837     3715.837   3715.837 #>  [792,]     3770.353     3770.353   3770.353 #>  [793,]     4261.548     4261.548   4261.548 #>  [794,]     4390.748     4390.748   4390.748 #>  [795,]     4714.202     4714.202   4714.202 #>  [796,]     3984.075     3984.075   3984.075 #>  [797,]     3933.705     3933.705   3933.705 #>  [798,]     4033.884     4033.884   4033.884 #>  [799,]     3979.160     3979.160   3979.160 #>  [800,]     3946.166     3946.166   3946.166 #>  [801,]     4045.251     4045.251   4045.251 #>  [802,]     4066.404     4066.404   4066.404 #>  [803,]     4064.939     4064.939   4064.939 #>  [804,]     3594.580     3594.580   3594.580 #>  [805,]     3614.273     3614.273   3614.273 #>  [806,]     4002.188     4002.188   4002.188 #>  [807,]     3852.512     3852.512   3852.512 #>  [808,]     3952.512     3952.512   3952.512 #>  [809,]     3550.204     3550.204   3550.204 #>  [810,]     3418.351     3418.351   3418.351 #>  [811,]     4000.874     4000.874   4000.874 #>  [812,]     3993.944     3993.944   3993.944 #>  [813,]     3810.534     3810.534   3810.534 #>  [814,]     4135.888     4135.888   4135.888 #>  [815,]     4633.382     4633.382   4633.382 #>  [816,]     3231.912     3231.912   3231.912 #>  [817,]     4261.920     4261.920   4261.920 #>  [818,]     3484.781     3484.781   3484.781 #>  [819,]     4725.018     4725.018   4725.018 #>  [820,]     4065.767     4065.767   4065.767 #>  [821,]     3880.420     3880.420   3880.420 #>  [822,]     4336.963     4336.963   4336.963 #>  [823,]     3206.976     3206.976   3206.976 #>  [824,]     4577.993     4577.993   4577.993 #>  [825,]     4226.253     4226.253   4226.253 #>  [826,]     4608.079     4608.079   4608.079 #>  [827,]     3932.400     3932.400   3932.400 #>  [828,]     3909.012     3909.012   3909.012 #>  [829,]     4258.270     4258.270   4258.270 #>  [830,]     3886.196     3886.196   3886.196 #>  [831,]     3980.967     3980.967   3980.967 #>  [832,]     4148.387     4148.387   4148.387 #>  [833,]     3904.434     3904.434   3904.434 #>  [834,]     3928.905     3928.905   3928.905 #>  [835,]     2928.841     2928.841   2928.841 #>  [836,]     3618.107     3618.107   3618.107 #>  [837,]     3636.069     3636.069   3636.069 #>  [838,]     3477.149     3477.149   3477.149 #>  [839,]     4317.068     4317.068   4317.068 #>  [840,]     4127.443     4127.443   4127.443 #>  [841,]     3799.981     3799.981   3799.981 #>  [842,]     4148.209     4148.209   4148.209 #>  [843,]     4223.671     4223.671   4223.671 #>  [844,]     3945.576     3945.576   3945.576 #>  [845,]     4526.704     4526.704   4526.704 #>  [846,]     3331.850     3331.850   3331.850 #>  [847,]     3999.749     3999.749   3999.749 #>  [848,]     4452.763     4452.763   4452.763 #>  [849,]     4461.005     4461.005   4461.005 #>  [850,]     4336.274     4336.274   4336.274 #>  [851,]     4642.229     4642.229   4642.229 #>  [852,]     4123.244     4123.244   4123.244 #>  [853,]     3513.237     3513.237   3513.237 #>  [854,]     4911.784     4911.784   4911.784 #>  [855,]     3755.543     3755.543   3755.543 #>  [856,]     3581.986     3581.986   3581.986 #>  [857,]     4061.955     4061.955   4061.955 #>  [858,]     4021.060     4021.060   4021.060 #>  [859,]     4819.192     4819.192   4819.192 #>  [860,]     3788.596     3788.596   3788.596 #>  [861,]     4271.415     4271.415   4271.415 #>  [862,]     3615.289     3615.289   3615.289 #>  [863,]     4458.786     4458.786   4458.786 #>  [864,]     4471.826     4471.826   4471.826 #>  [865,]     4511.666     4511.666   4511.666 #>  [866,]     3557.157     3557.157   3557.157 #>  [867,]     4111.672     4111.672   4111.672 #>  [868,]     3370.500     3370.500   3370.500 #>  [869,]     4527.933     4527.933   4527.933 #>  [870,]     4076.015     4076.015   4076.015 #>  [871,]     3257.504     3257.504   3257.504 #>  [872,]     4049.337     4049.337   4049.337 #>  [873,]     3977.666     3977.666   3977.666 #>  [874,]     4364.552     4364.552   4364.552 #>  [875,]     3375.657     3375.657   3375.657 #>  [876,]     4307.643     4307.643   4307.643 #>  [877,]     4266.050     4266.050   4266.050 #>  [878,]     4122.225     4122.225   4122.225 #>  [879,]     4624.185     4624.185   4624.185 #>  [880,]     3880.267     3880.267   3880.267 #>  [881,]     3259.220     3259.220   3259.220 #>  [882,]     4017.556     4017.556   4017.556 #>  [883,]     3905.433     3905.433   3905.433 #>  [884,]     4101.967     4101.967   4101.967 #>  [885,]     3725.949     3725.949   3725.949 #>  [886,]     4423.352     4423.352   4423.352 #>  [887,]     4437.846     4437.846   4437.846 #>  [888,]     4065.900     4065.900   4065.900 #>  [889,]     3890.984     3890.984   3890.984 #>  [890,]     3731.916     3731.916   3731.916 #>  [891,]     4495.710     4495.710   4495.710 #>  [892,]     4195.171     4195.171   4195.171 #>  [893,]     4358.760     4358.760   4358.760 #>  [894,]     4300.330     4300.330   4300.330 #>  [895,]     3870.718     3870.718   3870.718 #>  [896,]     4449.207     4449.207   4449.207 #>  [897,]     4478.025     4478.025   4478.025 #>  [898,]     4225.085     4225.085   4225.085 #>  [899,]     4491.262     4491.262   4491.262 #>  [900,]     3753.356     3753.356   3753.356 #>  [901,]     4281.894     4281.894   4281.894 #>  [902,]     3769.732     3769.732   3769.732 #>  [903,]     3883.114     3883.114   3883.114 #>  [904,]     4066.072     4066.072   4066.072 #>  [905,]     5008.629     5008.629   5008.629 #>  [906,]     3702.120     3702.120   3702.120 #>  [907,]     4118.507     4118.507   4118.507 #>  [908,]     4425.285     4425.285   4425.285 #>  [909,]     3532.767     3532.767   3532.767 #>  [910,]     3336.826     3336.826   3336.826 #>  [911,]     4359.923     4359.923   4359.923 #>  [912,]     3514.414     3514.414   3514.414 #>  [913,]     4839.566     4839.566   4839.566 #>  [914,]     4192.790     4192.790   4192.790 #>  [915,]     3434.645     3434.645   3434.645 #>  [916,]     4291.567     4291.567   4291.567 #>  [917,]     3266.328     3266.328   3266.328 #>  [918,]     3690.006     3690.006   3690.006 #>  [919,]     3230.208     3230.208   3230.208 #>  [920,]     3964.422     3964.422   3964.422 #>  [921,]     4272.834     4272.834   4272.834 #>  [922,]     3199.934     3199.934   3199.934 #>  [923,]     4331.535     4331.535   4331.535 #>  [924,]     4553.871     4553.871   4553.871 #>  [925,]     4189.314     4189.314   4189.314 #>  [926,]     4931.349     4931.349   4931.349 #>  [927,]     3740.922     3740.922   3740.922 #>  [928,]     3673.511     3673.511   3673.511 #>  [929,]     4284.468     4284.468   4284.468 #>  [930,]     4042.326     4042.326   4042.326 #>  [931,]     4589.244     4589.244   4589.244 #>  [932,]     4030.836     4030.836   4030.836 #>  [933,]     4320.398     4320.398   4320.398 #>  [934,]     4393.735     4393.735   4393.735 #>  [935,]     4063.563     4063.563   4063.563 #>  [936,]     4083.993     4083.993   4083.993 #>  [937,]     3902.890     3902.890   3902.890 #>  [938,]     3564.240     3564.240   3564.240 #>  [939,]     3754.413     3754.413   3754.413 #>  [940,]     4102.224     4102.224   4102.224 #>  [941,]     3984.229     3984.229   3984.229 #>  [942,]     3851.214     3851.214   3851.214 #>  [943,]     4309.072     4309.072   4309.072 #>  [944,]     3582.482     3582.482   3582.482 #>  [945,]     4104.112     4104.112   4104.112 #>  [946,]     4031.686     4031.686   4031.686 #>  [947,]     4283.072     4283.072   4283.072 #>  [948,]     3718.009     3718.009   3718.009 #>  [949,]     4045.504     4045.504   4045.504 #>  [950,]     4228.550     4228.550   4228.550 #>  [951,]     3711.720     3711.720   3711.720 #>  [952,]     3220.200     3220.200   3220.200 #>  [953,]     3613.474     3613.474   3613.474 #>  [954,]     4051.336     4051.336   4051.336 #>  [955,]     4541.984     4541.984   4541.984 #>  [956,]     4605.459     4605.459   4605.459 #>  [957,]     4416.557     4416.557   4416.557 #>  [958,]     3722.346     3722.346   3722.346 #>  [959,]     3446.000     3446.000   3446.000 #>  [960,]     3689.231     3689.231   3689.231 #>  [961,]     4557.470     4557.470   4557.470 #>  [962,]     3512.791     3512.791   3512.791 #>  [963,]     3854.047     3854.047   3854.047 #>  [964,]     3670.134     3670.134   3670.134 #>  [965,]     4003.001     4003.001   4003.001 #>  [966,]     3973.126     3973.126   3973.126 #>  [967,]     4267.827     4267.827   4267.827 #>  [968,]     3460.261     3460.261   3460.261 #>  [969,]     3936.662     3936.662   3936.662 #>  [970,]     4374.351     4374.351   4374.351 #>  [971,]     3196.729     3196.729   3196.729 #>  [972,]     5001.876     5001.876   5001.876 #>  [973,]     3852.475     3852.475   3852.475 #>  [974,]     3924.814     3924.814   3924.814 #>  [975,]     4653.595     4653.595   4653.595 #>  [976,]     3540.111     3540.111   3540.111 #>  [977,]     4256.907     4256.907   4256.907 #>  [978,]     4385.920     4385.920   4385.920 #>  [979,]     4241.542     4241.542   4241.542 #>  [980,]     4201.004     4201.004   4201.004 #>  [981,]     4299.841     4299.841   4299.841 #>  [982,]     4232.716     4232.716   4232.716 #>  [983,]     4470.048     4470.048   4470.048 #>  [984,]     3786.715     3786.715   3786.715 #>  [985,]     4129.982     4129.982   4129.982 #>  [986,]     3875.824     3875.824   3875.824 #>  [987,]     4041.591     4041.591   4041.591 #>  [988,]     3395.140     3395.140   3395.140 #>  [989,]     3437.566     3437.566   3437.566 #>  [990,]     3943.710     3943.710   3943.710 #>  [991,]     4366.535     4366.535   4366.535 #>  [992,]     3475.875     3475.875   3475.875 #>  [993,]     4438.156     4438.156   4438.156 #>  [994,]     4415.620     4415.620   4415.620 #>  [995,]     3802.662     3802.662   3802.662 #>  [996,]     4316.947     4316.947   4316.947 #>  [997,]     3465.135     3465.135   3465.135 #>  [998,]     3566.107     3566.107   3566.107 #>  [999,]     4089.702     4089.702   4089.702 #> [1000,]     4127.283     4127.283   4127.283 #>"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator ‚Äî %>%","title":"Pipe operator ‚Äî %>%","text":"See magrittr::[\\%>\\%][magrittr::pipe] details.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator ‚Äî %>%","text":"","code":"lhs %>% rhs"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator ‚Äî %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator ‚Äî %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/rbeta_dmp.html","id":null,"dir":"Reference","previous_headings":"","what":"Customised sampling functions for the Beta distributions ‚Äî rbeta_dmp","title":"Customised sampling functions for the Beta distributions ‚Äî rbeta_dmp","text":"generate random samples beta distribution, parameterized mean sd, returning NAs conditions met","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/rbeta_dmp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Customised sampling functions for the Beta distributions ‚Äî rbeta_dmp","text":"","code":"rbeta_dmp(n, p, sd)"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/rbeta_dmp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Customised sampling functions for the Beta distributions ‚Äî rbeta_dmp","text":"n integer value. number samples generate p decimal value. value used calculate parameters beta distribution sd decimal value. standard deviation beta distribution simulate","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/rbeta_dmp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Customised sampling functions for the Beta distributions ‚Äî rbeta_dmp","text":"vector samples values beta distribution","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/rbeta_dmp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Customised sampling functions for the Beta distributions ‚Äî rbeta_dmp","text":"","code":"rbeta_dmp(n=100,p=0.9,sd=0.01) #>   [1] 0.8857523 0.9079071 0.9057583 0.8982009 0.8824196 0.9059923 0.9067086 #>   [8] 0.9154540 0.9004098 0.9071190 0.9052410 0.9052908 0.9049867 0.8949529 #>  [15] 0.8925666 0.8943662 0.8914263 0.8990316 0.9003875 0.9001811 0.9049556 #>  [22] 0.9084282 0.9198257 0.8811038 0.8982850 0.8930480 0.9024935 0.8837448 #>  [29] 0.9046406 0.8886300 0.9078339 0.8964793 0.9068060 0.8876839 0.9181144 #>  [36] 0.8959842 0.8966231 0.8919587 0.8860666 0.9104228 0.8930420 0.8933119 #>  [43] 0.9033306 0.9123358 0.8889331 0.8945023 0.9096904 0.9121222 0.9095296 #>  [50] 0.9006490 0.9081689 0.8956040 0.8910949 0.9053384 0.9075271 0.8871973 #>  [57] 0.9021670 0.9161033 0.8896825 0.8973484 0.9060107 0.9044530 0.8969437 #>  [64] 0.8966133 0.8956085 0.9043686 0.9076032 0.9005918 0.9167544 0.9022766 #>  [71] 0.8968314 0.8995840 0.8946710 0.8976004 0.8904362 0.8726950 0.8965178 #>  [78] 0.8962447 0.8792324 0.8985140 0.8965436 0.8968504 0.8913548 0.9028636 #>  [85] 0.9176296 0.8954106 0.9046085 0.9138971 0.9146235 0.9014047 0.8948808 #>  [92] 0.9077244 0.9110331 0.9002167 0.8983104 0.9030566 0.9114254 0.8926688 #>  [99] 0.9045815 0.9100473"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/rotor_grids_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample rotor grids for generated_rotor_grids unit test ‚Äî rotor_grids_test","title":"Sample rotor grids for generated_rotor_grids unit test ‚Äî rotor_grids_test","text":"Sample rotor grids generated_rotor_grids unit test","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/rotor_grids_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample rotor grids for generated_rotor_grids unit test ‚Äî rotor_grids_test","text":"","code":"rotor_grids_test"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/rotor_grids_test.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample rotor grids for generated_rotor_grids unit test ‚Äî rotor_grids_test","text":"list data frames","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/rtnorm_dmp.html","id":null,"dir":"Reference","previous_headings":"","what":"Customised sampling of Truncated Normal distribution ‚Äî rtnorm_dmp","title":"Customised sampling of Truncated Normal distribution ‚Äî rtnorm_dmp","text":"Wrapper msm::rtnorm() function, improving outputs management user feedback edge cases","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/rtnorm_dmp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Customised sampling of Truncated Normal distribution ‚Äî rtnorm_dmp","text":"","code":"rtnorm_dmp(n, mean = 0, sd = 1, lower = -Inf, upper = Inf)"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/rtnorm_dmp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Customised sampling of Truncated Normal distribution ‚Äî rtnorm_dmp","text":"n integer value. number samples generate mean decimal value. mean truncated normal distribution sd decimal value. standard deviation distribution simulate lower decimal value. lower limit distribution upper decimal value. upper limit distribution","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/rtnorm_dmp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Customised sampling of Truncated Normal distribution ‚Äî rtnorm_dmp","text":"vector samples values truncated normal distribution","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/rtnorm_dmp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Customised sampling of Truncated Normal distribution ‚Äî rtnorm_dmp","text":"","code":"rtnorm_dmp(n=10,mean=0.4,sd=0.2) #>  [1] 0.3622766 0.5180891 0.4729449 0.1683407 0.4783579 0.1973194 0.5755679 #>  [8] 0.4755823 0.6969956 0.4172149"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/sample_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter sampling whiz ‚Äî sample_parameters","title":"Parameter sampling whiz ‚Äî sample_parameters","text":"Generates random samples stochastic CRM parameters. internal use.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/sample_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameter sampling whiz ‚Äî sample_parameters","text":"","code":"sample_parameters(   model_options,   mod_mths,   n_iter = 10,   flt_speed_pars,   body_lt_pars,   wing_span_pars,   avoid_bsc_pars,   avoid_ext_pars,   noct_act_pars,   prop_crh_pars,   bird_dens_opt = \"tnorm\",   bird_dens_dt,   gen_fhd_boots = NULL,   site_fhd_boots = NULL,   rtr_radius_pars,   air_gap_pars,   bld_width_pars,   rtn_pitch_opt = \"probDist\",   bld_pitch_pars,   rtn_speed_pars,   windspd_pars,   rtn_pitch_windspd_dt,   trb_wind_avbl,   trb_downtime_pars,   lrg_arr_corr )"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/sample_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter sampling whiz ‚Äî sample_parameters","text":"model_options Character vector, model options calculating collision risk (see Details section ). mod_mths character vector, names months modelling n_iter integer. number iterations model simulation. flt_speed_pars single row data frame columns mean sd, mean standard deviation species flying speed, metres/sec. Assumed follow Truncated Normal lower bound 0 (tnorm-lw0). body_lt_pars single row data frame columns mean sd, mean standard deviation species body length, metres. Assumed follow tnorm-lw0 distribution. wing_span_pars single row data frame columns mean sd, mean standard deviation species wingspan, metres. Assumed follow tnorm-lw0 distribution. avoid_bsc_pars, avoid_ext_pars Single row data frames columns mean sd, mean standard deviation species avoidance rate used basic model (Options 1 2) extended model (Options 3 4) calculations (see Details section). Avoidance rate expresses probability bird flying collision course turbine take evading action avoid collision, assumed follow Beta distribution. noct_act_pars single row data frame columns mean sd, mean standard deviation species nocturnal flight activity level, expressed proportion daytime activity levels, assumed Beta distributed. prop_crh_pars Required model Option 1, single row data frame columns mean sd. mean standard deviation proportion flights collision risk height derived site survey, assumed Beta distributed. bird_dens_opt Option specifying random sampling mechanism bird densities: \"tnorm\": Sampling density estimates tnorm-lw0 distribution (default value), \"resample\": Re-sample draws bird density estimates (e.g. bootstrap samples), \"qtiles\": Sampling set quantile estimates bird densities. bird_dens_dt data frame monthly estimates bird density within windfarm footprint, expressed number daytime -flight birds/km^2 per month. Data frame format requirements: bird_dens_opt = \"tnorm\", bird_dens_dt must contain following columns: month, (unique) month names, mean, mean number birds flight height per square kilometre month, sd, idem, standard deviation. bird_dens_opt = \"resample\", bird_dens_dt columns must named months (.e. Jan, Feb, ...), containing random samples monthly density estimates. bird_dens_opt = \"qtiles\", bird_dens_dt must comply : First column named p, giving reference probabilities, Remaining columns named months (.e. Jan, Feb, ...), giving quantile estimates bird density given month, reference probabilities column p. gen_fhd_boots Required model Options 2 3, data frame bootstrap samples flight height distributions (FHD) species derived general (country/regional level) data. FHD provides relative frequency distribution bird flights 1-metre height bands, starting sea surface. first column must named height, expressing lower bound height band (thus first element must 0). remaining column provide bootstrap sample proportion bird flights height band, column naming requirements. NOTE: generic_fhd_bootstraps list object generic FHD bootstrap estimates 25 seabird species Johnson et al (2014) (see usage Example Section ). site_fhd_boots Required model Option 4, data frame similar gen_fhd_boots, FHD estimates derived site-specific data. rtr_radius_pars single row data frame columns mean sd, mean standard deviation radius rotor, metres. Assumed follow tnorm-lw0 distribution. air_gap_pars single row data frame columns mean sd, mean standard deviation tip clearance gap, metres, .e. distance minimum rotor tip height highest astronomical tide (HAT). Assumed follow tnorm-lw0 distribution. bld_width_pars single row data frame columns mean sd, mean standard deviation maximum blade width, metres. Assumed tnorm-lw0 distribution. rtn_pitch_opt character string, option specifying sampling mechanism rotation speed blade pitch: \"probDist\": sample rotation speed blade pitch values tnorm-lw0 distribution (default value). \"windSpeedReltn\": generate rotation speed blade pitch values function wind speed intensity. bld_pitch_pars required rtn_pitch_opt = \"probDist\", single row data frame columns mean sd, mean standard deviation blade pitch angle, .e. angle blade surface rotor plane, degrees. Assumed follow tnorm-lw0 distribution. rtn_speed_pars required rtn_pitch_opt = \"probDist\", single row data frame columns mean sd, mean standard deviation operational rotation speed, revolutions per minute. Assumed follow tnorm-lw0 distribution. windspd_pars required rtn_pitch_opt = \"windSpeedReltn\", single row data frame columns mean sd, mean standard deviation wind speed windfarm site, metres/sec. Assumed follow tnorm-lw0 distribution. rtn_pitch_windspd_dt required rtn_pitch_opt = \"windSpeedReltn\", data frame giving relationship wind speed, rotation speed blade pitch values. must contain columns: wind_speed, wind speed m/s, rtn_speed, rotation speed rpm, bld_pitch, blade pitch values degrees. trb_wind_avbl data frame monthly estimates operational wind availability. must contain columns: month, (unique) month names, pctg, percentage time wind conditions allow turbine operation per month. trb_downtime_pars data frame monthly estimates maintenance downtime, assumed follow tnorm-lw0 distribution. must contain following columns: month, (unique) month names, mean, numeric, mean percentage time month turbines operating due maintenance, sd, standard deviation monthly maintenance downtime. lrg_arr_corr Boolean value. TRUE, large array correction applied. correction factor account decay bird density later rows wind farms large array turbines.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/sample_parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parameter sampling whiz ‚Äî sample_parameters","text":"list object element comprising sampled values given CRM parameter","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/sample_parameters.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parameter sampling whiz ‚Äî sample_parameters","text":"Collision risk can calculated 4 options, specified model_options: Option 1 - Basic model proportion collision risk height derived site survey (prop_crh_surv). Option 2 - Basic model proportion collision risk height derived generic flight height distribution (gen_fhd). Option 3 - Extended model using generic flight height distribution (gen_fhd). Option 4 - Extended model using site-specific flight height distribution (site_fhd). , Basic model - assumes uniform distribution bird flights collision risk height (.e. minimum maximum height rotor blade). Extended model - takes account distribution bird flight heights collision risk height.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/sample_parameters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parameter sampling whiz ‚Äî sample_parameters","text":"","code":"bird_dens_dt <- data.frame(     month = month.abb,     mean = runif(12, 0.8, 1.5),     sd = runif(12, 0.2, 0.3)   )   # wind availability   trb_wind_avbl <- data.frame(     month = month.abb,     pctg = runif(12, 85, 98)   )    # maintenance downtime   trb_downtime_pars <- data.frame(     month = month.abb,     mean = runif(12, 6, 10),     sd = rep(2, 12))    # Wind speed relationships   wind_rtn_ptch <- data.frame(     wind_speed = seq_len(30),     rtn_speed = 10/(30:1),     bld_pitch = c(rep(90, 4), rep(0, 8), 5:22)     )     bird_dens_opt <- \"tnorm\"   ### extract and standardize month format from monthly data sets   b_dens_mth <- switch (bird_dens_opt,                         tnorm = bird_dens_dt$month,                         resample = names(bird_dens_dt),                         qtiles = names(bird_dens_dt)[names(bird_dens_dt) != \"p\"]   ) %>% format_months()   dwntm_mth <- format_months(trb_downtime_pars$month)   windav_mth <- format_months(trb_wind_avbl$month)   ### Set months to model: only those in common amongst monthly data sets   mod_mths <- Reduce(intersect, list(b_dens_mth, dwntm_mth, windav_mth))   ### Order chronologically   mod_mths <- mod_mths[order(match(mod_mths, month.abb))]    param_draws <- sample_parameters(     model_options = c(1,2,3),     n_iter = 10,     mod_mths = mod_mths,     flt_speed_pars = data.frame(mean=7.26,sd=1.5),     body_lt_pars = data.frame(mean=0.39,sd=0.005),     wing_span_pars = data.frame(mean=1.08,sd=0.04),     avoid_bsc_pars = data.frame(mean=0.99,sd=0.001),     avoid_ext_pars = data.frame(mean=0.96,sd=0.002),     noct_act_pars = data.frame(mean=0.033,sd=0.005),     prop_crh_pars = data.frame(mean=0.06,sd=0.009),     bird_dens_opt = \"tnorm\",     bird_dens_dt = bird_dens_dt,     gen_fhd_boots = generic_fhd_bootstraps[[1]],     site_fhd_boots = NULL,     rtr_radius_pars = data.frame(mean=80,sd=0),     air_gap_pars = data.frame(mean=36,sd=0),     bld_width_pars = data.frame(mean=8,sd=0),     rtn_pitch_opt = \"windSpeedReltn\",     bld_pitch_pars = NULL,     rtn_speed_pars = NULL,     windspd_pars = data.frame(mean=7.74,sd=3),     rtn_pitch_windspd_dt = wind_rtn_ptch,     trb_wind_avbl = trb_wind_avbl,     trb_downtime_pars = trb_downtime_pars,     lrg_arr_corr = TRUE     )"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/sample_qtls.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate random draws based on empirical c.d.f. ‚Äî sample_qtls","title":"Generate random draws based on empirical c.d.f. ‚Äî sample_qtls","text":"Generate random draws set quantiles, based empirical cumulative density function","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/sample_qtls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate random draws based on empirical c.d.f. ‚Äî sample_qtls","text":"","code":"sample_qtls(n, probs, qtls)"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/sample_qtls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate random draws based on empirical c.d.f. ‚Äî sample_qtls","text":"n integer, number draws generate probs numeric vector, probabilities qtls numeric vector, quantiles probabilities specified probs","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/sample_qtls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate random draws based on empirical c.d.f. ‚Äî sample_qtls","text":"numeric vector, random draws approximated distribution underpinning provided quantiles","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/sample_qtls.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate random draws based on empirical c.d.f. ‚Äî sample_qtls","text":"Based Inverse Transform Sampling technique, sampling random probabilities uniform distribution interpolate (cubic) count samples percentiles provided user (taken empirical cumulative density function)","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/sample_qtls.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate random draws based on empirical c.d.f. ‚Äî sample_qtls","text":"","code":"sample_qtls(10,c(0.1,0.2,0.3),qtls=c(0.05,0.1,0.95)) #>  [1] 0.89961121 0.49140651 0.10043913 0.88192324 0.06034306 0.67075218 #>  [7] 0.06563417 0.60837315 0.09127136 0.07021602"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/sample_turbine_mCRM.html","id":null,"dir":"Reference","previous_headings":"","what":"Sampling function for a single turbine in the mCRM ‚Äî sample_turbine_mCRM","title":"Sampling function for a single turbine in the mCRM ‚Äî sample_turbine_mCRM","text":"Samples aggregates appropriate data single wind turbine","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/sample_turbine_mCRM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sampling function for a single turbine in the mCRM ‚Äî sample_turbine_mCRM","text":"","code":"sample_turbine_mCRM(   rtn_speed_pars,   bld_pitch_pars,   rtr_radius_pars,   bld_width_pars,   season_specs,   n_iter = 10,   trb_wind_avbl,   trb_downtime_pars )"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/sample_turbine_mCRM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sampling function for a single turbine in the mCRM ‚Äî sample_turbine_mCRM","text":"rtn_speed_pars single row data frame columns mean sd, mean standard deviation rotation speed. bld_pitch_pars single row data frame columns mean sd, mean standard deviation blade pitch angle, .e. angle blade surface rotor plane, degrees. Assumed follow tnorm-lw0 distribution. rtr_radius_pars single row data frame columns mean sd, mean standard deviation radius rotor, metres. Assumed follow tnorm-lw0 distribution. bld_width_pars single row data frame columns mean sd, mean standard deviation maximum blade width, metres. Assumed tnorm-lw0 distribution. season_specs data frame defining seasons aggregating collision estimates. must comprise following columns: season_id, (unique) season identifier, start_month, name season's first month, end_month, name season's last month. n_iter integer value. number samples generate trb_wind_avbl data frame monthly estimates operational wind availability. must contain columns: month, (unique) month names, pctg, percentage time wind conditions allow turbine operation per month. trb_downtime_pars data frame monthly estimates maintenance downtime, assumed follow tnorm-lw0 distribution. must contain following columns: month, (unique) month names, mean, numeric, mean percentage time month turbines operating due maintenance, sd, standard deviation monthly maintenance downtime.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/sample_turbine_mCRM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sampling function for a single turbine in the mCRM ‚Äî sample_turbine_mCRM","text":"data frame information sampled turbine nrow = n_iter","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/sample_turbine_mCRM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sampling function for a single turbine in the mCRM ‚Äî sample_turbine_mCRM","text":"","code":"season_specs <- data.frame(   season_id = c(\"PrBMigration\", \"PoBMigration\",\"OMigration\"),   start_month = c(\"Mar\", \"May\", \"Oct\"), end_month = c(\"Apr\", \"Sep\", \"Feb\")   )    windavb <- data.frame(     month = month.abb,     pctg = runif(12, 85, 98)   )    dwntm <- data.frame(     month = month.abb,     mean = runif(12, 6, 10),     sd = rep(2, 12))    sample_turbine_mCRM(rtn_speed_pars = data.frame(mean = 13.1, sd = 4),                       bld_pitch_pars = data.frame(mean = 3, sd = 0.3),                       rtr_radius_pars = data.frame(mean = 80, sd = 0),                       bld_width_pars = data.frame(mean = 8, sd = 0),                       season_specs = season_specs,                       n_iter = 10,                       trb_wind_avbl = windavb,                       trb_downtime_pars = dwntm) #>    RotorRadius BladeWidth RotorSpeed      Pitch PrBMigration_DT PrBMigration_OT #> 1           80          8  11.601249 0.06136483      0.10935238       0.9004818 #> 2           80          8  13.608397 0.05353304      0.08944869       0.9004818 #> 3           80          8   8.887488 0.04858740      0.08270511       0.9004818 #> 4           80          8   8.562781 0.04535419      0.09356532       0.9004818 #> 5           80          8   9.654915 0.05613066      0.07500891       0.9004818 #> 6           80          8   5.849815 0.05870977      0.11590970       0.9004818 #> 7           80          8  21.483483 0.05538532      0.07309718       0.9004818 #> 8           80          8  17.289497 0.06055223      0.11872701       0.9004818 #> 9           80          8  12.881980 0.05536382      0.04533733       0.9004818 #> 10          80          8  19.795382 0.05153243      0.11028632       0.9004818 #>    PoBMigration_DT PoBMigration_OT OMigration_DT OMigration_OT #> 1       0.07932316       0.9079167    0.10018255     0.9257853 #> 2       0.07501109       0.9079167    0.10820380     0.9257853 #> 3       0.05356090       0.9079167    0.06694812     0.9257853 #> 4       0.07868917       0.9079167    0.03845806     0.9257853 #> 5       0.06082757       0.9079167    0.05248013     0.9257853 #> 6       0.08843688       0.9079167    0.08347915     0.9257853 #> 7       0.05997408       0.9079167    0.14004056     0.9257853 #> 8       0.10399099       0.9079167    0.05301178     0.9257853 #> 9       0.05903683       0.9079167    0.06425183     0.9257853 #> 10      0.06600393       0.9079167    0.07014271     0.9257853"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/sampler_hd.html","id":null,"dir":"Reference","previous_headings":"","what":"Customised sampling function wrapper ‚Äî sampler_hd","title":"Customised sampling function wrapper ‚Äî sampler_hd","text":"Samples dataset based inputs either rtnorm, rbeta 'rnorm' distributions","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/sampler_hd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Customised sampling function wrapper ‚Äî sampler_hd","text":"","code":"sampler_hd(   dat,   mode = \"rtnorm\",   n = NULL,   mean = NULL,   sd = NULL,   lower = 0,   upper = NULL )"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/sampler_hd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Customised sampling function wrapper ‚Äî sampler_hd","text":"dat = decimal value. SD value test (UI) - available UI, create distribution mode = string.  Either 'rtnorm', 'rbeta' 'rnorm' determine distribution generate n integer value. number samples generate mean decimal value. mean truncated normal distribution sd decimal value. standard deviation distribution simulate lower decimal value. lower limit distribution upper decimal value. upper limit distribution","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/sampler_hd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Customised sampling function wrapper ‚Äî sampler_hd","text":"vector samples values distribution","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/sampler_hd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Customised sampling function wrapper ‚Äî sampler_hd","text":"","code":"sampler_hd(dat=0.1,        mode='rtnorm',        n=100,        mean=9,        sd=0.1) #>   [1] 9.018060 8.923789 9.149098 8.843698 8.985836 8.909738 9.124842 8.982686 #>   [9] 9.029920 9.056487 9.103273 8.991915 9.181838 8.840868 9.081293 9.027675 #>  [17] 8.999912 8.967177 9.168632 8.983260 9.034665 9.063153 9.007892 9.142822 #>  [25] 9.158502 9.034508 9.108253 8.965157 9.005255 8.936505 8.963286 8.811488 #>  [33] 8.905225 9.236296 9.005089 9.097625 8.809241 9.005111 9.266781 8.860530 #>  [41] 9.026057 8.952956 9.020429 8.944322 9.027311 8.897340 8.909571 8.907136 #>  [49] 8.870464 8.935067 8.959291 8.982625 9.067944 8.882087 8.776863 8.991132 #>  [57] 9.095710 8.836743 9.021169 9.220681 9.000107 9.010952 8.927899 8.990569 #>  [65] 9.010051 9.172587 8.933390 8.901488 8.855845 8.966999 9.033993 8.824172 #>  [73] 9.159706 8.991019 9.005898 9.004794 9.115728 9.056943 8.900337 9.015796 #>  [81] 9.211375 9.141908 9.082072 9.056306 8.886654 8.954851 9.095308 9.068714 #>  [89] 8.892164 8.976872 9.148204 9.072152 9.093848 8.894212 8.971367 9.003562 #>  [97] 8.890366 9.072950 9.023802 9.076570"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/seq_months.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate sequence of months ‚Äî seq_months","title":"Generate sequence of months ‚Äî seq_months","text":"Generate sequence months","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/seq_months.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate sequence of months ‚Äî seq_months","text":"","code":"seq_months(start_month, end_month)"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/seq_months.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate sequence of months ‚Äî seq_months","text":"start_month character string, three-letter name starting month. end_month character string, three-letter name finishing month.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/seq_months.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate sequence of months ‚Äî seq_months","text":"","code":"seq_months(\"Jan\", \"Apr\") #> [1] \"Jan\" \"Feb\" \"Mar\" \"Apr\""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/stochLAB.html","id":null,"dir":"Reference","previous_headings":"","what":"stochLAB: Stochastic Collision Risk Model ‚Äî stochLAB","title":"stochLAB: Stochastic Collision Risk Model ‚Äî stochLAB","text":"stochLAB tool run stochastic (deterministic) Collision Risk Models (CRM) seabirds offshore wind farms. main functions stochLAB : stoch_crm(): Stochastic Collision Risk Model, band_crm(): Deterministic Collision Risk Model, ...fill migration functions..","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/stochLAB.html","id":"overview","dir":"Reference","previous_headings":"","what":"Overview","title":"stochLAB: Stochastic Collision Risk Model ‚Äî stochLAB","text":"{stochLAB} package adaptation R code developed Masden (2015) incorporate variability uncertainty avian collision risk model originally developed Band (2012). Code developed {stochLAB} substantially re-factored re-structured Masden's (heavily script-based) implementation user-friendly, streamlined, well documented easily distributed tool. Furthermore, package lays code infrastructure easier incorporation new functionality, e.g. extra parameter sampling features, model expansions, etc. Previous code underpinning key calculations extended model replaced alternative approach, resulting significant gains computational speed - 30x faster Masden's code. optimization particularly beneficial stochastic context, Band calculations computed repeatedly. See generate_rotor_grids() details.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/stochLAB.html","id":"function-stoch-crm-","dir":"Reference","previous_headings":"","what":"Function stoch_crm()","title":"stochLAB: Stochastic Collision Risk Model ‚Äî stochLAB","text":"stoch_crm() essentially replacement function script BandModel.r Masden's approach. Main changes terms user interface include: Collision model runs one single scenario (.e. one species one turbine scenario) stoch_crm() call. Apart gains development code structure, unit-based approach considered offer greater end user flexibility setting managing multiple scenarios (including parallel computation). Input parameters now entered explicitly feature-specific arguments, instead bundled together wide-column tables. improves code readability reduces quantity hard-coded parameter names, therefore making referencing errors less likely. Outputs longer saved automatically external files.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/stochLAB.html","id":"seasonal-outputs","dir":"Reference","previous_headings":"","what":"Seasonal Outputs","title":"stochLAB: Stochastic Collision Risk Model ‚Äî stochLAB","text":"stoch_crm() now provides option user-defined seasonal outputs, allowing country/region specific seasonal definitions. Currently implemented CRM calculations produce collision estimates monthly basis reflect changing bird abundance within windfarm area. Seasonal estimates obtained aggregating monthly estimates season definition, uncertainty collision estimates suitably propagated seasonal outputs.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/stochLAB.html","id":"sampling-distributions","dir":"Reference","previous_headings":"","what":"Sampling distributions","title":"stochLAB: Stochastic Collision Risk Model ‚Äî stochLAB","text":"Masden's implementation used Normal Truncated Normal distributions generate random parameter values. However, Normal distribution unbounded, risk randomly drawing inappropriate values cases. stoch_crm() extends use bounded probability distributions model parameters. Strictly positive features (e.g. bird densities, body length, turbine downtime, etc.) sampled Truncated Normal distributions, features constrained 0 1 (e.g. nocturnal activity, proportion flights collision risk height, etc) assumed follow Beta distributions. addition, new functionality incorporated allow use bird density resamples (e.g. bootstrap samples) quantile estimates density estimation models simulations.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/stochLAB.html","id":"function-band-crm-","dir":"Reference","previous_headings":"","what":"Function band_crm()","title":"stochLAB: Stochastic Collision Risk Model ‚Äî stochLAB","text":"band_crm() performs core CRM calculations required estimate number collisions, per Band (2012). computing workhorse stoch_crm() function, can also used alone, providing backward compatibility original Band spreadsheet outputs.","code":""},{"path":[]},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/stochLAB.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"stochLAB: Stochastic Collision Risk Model ‚Äî stochLAB","text":"","code":"# ------------------------------------------------------ # Run with arbitrary parameter values, for illustration # ------------------------------------------------------  # Setting a dataframe of parameters to draw from params <- data.frame(   flight_speed = 13.1,         # Flight speed in m/s   body_lt = 0.85,              # Body length in m   wing_span = 1.01,            # Wing span in m   flight_type = \"flapping\",    # flapping or gliding flight   avoid_rt_basic = 0.989,      # avoidance rate for option 1 and 2   avoid_rt_ext = 0.981,        # extended avoidance rate for option 3 and 4   noct_activity = 0.5,         # proportion of day birds are inactive   prop_crh_surv = 0.13,        # proportion of birds at collision risk height (option 1 only)   prop_upwind = 0.5,           # proportion of flights that are upwind   rotor_speed = 15,            # rotor speed in m/s   rotor_radius = 120,          # radius of turbine in m   blade_width = 5,             # width of turbine blades at thickest point in m   blade_pitch = 15,            # mean radius pitch in Radians   n_blades = 3,                # total number of blades per turbine   hub_height = 150,            # height of hub in m above HAT   n_turbines = 100,            # number of turbines in the wind farm   wf_width = 52,               # width across longest section of wind farm   wf_latitude = 56,            # latitude of centroid of wind farm   tidal_offset = 2.5,          # mean tidal offset from HAT of the wind farm   lrg_arr_corr = TRUE          # apply a large array correction? )  # Monthly bird densities b_dens <- data.frame(   month = month.abb,   dens = runif(12, 0.8, 1.5) )  # flight height distribution from Johnston et al gen_fhd_dat <- Johnston_Flight_heights_SOSS %>%   dplyr::filter(variable==\"Gannet.est\") %>%   dplyr::select(height,prop)   # monthly operational time of the wind farm turb_oper <- data.frame(   month = month.abb,   prop_oper = runif(12,0.5,0.8) )   band_crm(   model_options = c(1,2,3),   flight_speed = params$flight_speed,   body_lt = params$body_lt,   wing_span = params$wing_span,   flight_type = params$flight_type,   avoid_rt_basic = params$avoid_rt_basic,   avoid_rt_ext = params$avoid_rt_ext,   noct_activity = params$noct_activity,   prop_crh_surv = params$prop_crh_surv,   dens_month = b_dens,   prop_upwind = params$prop_upwind,   gen_fhd = gen_fhd_dat,   site_fhd = NULL,  # Option 4 only   rotor_speed = params$rotor_speed,   rotor_radius = params$rotor_radius,   blade_width = params$blade_width,   blade_pitch = params$blade_pitch,   n_blades = params$n_blades,   hub_height = params$hub_height,   chord_prof = chord_prof_5MW,   n_turbines = params$n_turbines,   turb_oper_month = turb_oper,   wf_width = params$wf_width,   wf_latitude = params$wf_latitude,   tidal_offset = params$tidal_offset,   lrg_arr_corr = params$lrg_arr_corr   ) #> # A tibble: 12 √ó 4 #>    month  opt1  opt2  opt3 #>    <chr> <dbl> <dbl> <dbl> #>  1 Jan    63.0  16.3  6.65 #>  2 Feb    63.9  16.5  6.74 #>  3 Mar    74.0  19.1  7.81 #>  4 Apr   110.   28.4 11.6  #>  5 May    98.4  25.4 10.4  #>  6 Jun   113.   29.2 11.9  #>  7 Jul    73.3  18.9  7.73 #>  8 Aug    52.6  13.6  5.54 #>  9 Sep    91.3  23.5  9.63 #> 10 Oct    70.5  18.2  7.43 #> 11 Nov    67.9  17.5  7.16 #> 12 Dec    70.2  18.1  7.40"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/stoch_crm.html","id":null,"dir":"Reference","previous_headings":"","what":"Stochastic collision risk model for a single species and one wind farm scenario ‚Äî stoch_crm","title":"Stochastic collision risk model for a single species and one wind farm scenario ‚Äî stoch_crm","text":"Runs Stochastic Collision Risk Model (SCRM) estimating number -flight collisions offshore windfarm turbines, given species windfarm scenario. Core calculations follow work developed Masden (2015). See Background Updates section details.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/stoch_crm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stochastic collision risk model for a single species and one wind farm scenario ‚Äî stoch_crm","text":"","code":"stoch_crm(   model_options = c(\"1\", \"2\", \"3\", \"4\"),   n_iter = 1000,   flt_speed_pars,   body_lt_pars,   wing_span_pars,   avoid_bsc_pars = NULL,   avoid_ext_pars = NULL,   noct_act_pars,   prop_crh_pars = NULL,   bird_dens_opt = c(\"tnorm\", \"resample\", \"qtiles\"),   bird_dens_dt,   flight_type,   prop_upwind,   gen_fhd_boots = NULL,   site_fhd_boots = NULL,   n_blades,   air_gap_pars,   rtr_radius_pars,   bld_width_pars,   bld_chord_prf = chord_prof_5MW,   rtn_pitch_opt = c(\"probDist\", \"windSpeedReltn\"),   bld_pitch_pars = NULL,   rtn_speed_pars = NULL,   windspd_pars = NULL,   rtn_pitch_windspd_dt = NULL,   trb_wind_avbl,   trb_downtime_pars,   wf_n_trbs,   wf_width,   wf_latitude,   tidal_offset,   lrg_arr_corr = TRUE,   xinc = 0.05,   yinc = 0.05,   out_format = c(\"draws\", \"summaries\"),   out_sampled_pars = FALSE,   out_period = c(\"months\", \"seasons\", \"annum\"),   season_specs = NULL,   verbose = TRUE,   log_file = NULL,   seed = NULL )"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/stoch_crm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stochastic collision risk model for a single species and one wind farm scenario ‚Äî stoch_crm","text":"model_options Character vector, model options calculating collision risk (see Details section ). n_iter integer. number iterations model simulation. flt_speed_pars single row data frame columns mean sd, mean standard deviation species flying speed, metres/sec. Assumed follow Truncated Normal lower bound 0 (tnorm-lw0). body_lt_pars single row data frame columns mean sd, mean standard deviation species body length, metres. Assumed follow tnorm-lw0 distribution. wing_span_pars single row data frame columns mean sd, mean standard deviation species wingspan, metres. Assumed follow tnorm-lw0 distribution. avoid_bsc_pars, avoid_ext_pars Single row data frames columns mean sd, mean standard deviation species avoidance rate used basic model (Options 1 2) extended model (Options 3 4) calculations (see Details section). Avoidance rate expresses probability bird flying collision course turbine take evading action avoid collision, assumed follow Beta distribution. noct_act_pars single row data frame columns mean sd, mean standard deviation species nocturnal flight activity level, expressed proportion daytime activity levels, assumed Beta distributed. prop_crh_pars Required model Option 1, single row data frame columns mean sd. mean standard deviation proportion flights collision risk height derived site survey, assumed Beta distributed. bird_dens_opt Option specifying random sampling mechanism bird densities: \"tnorm\": Sampling density estimates tnorm-lw0 distribution (default value), \"resample\": Re-sample draws bird density estimates (e.g. bootstrap samples), \"qtiles\": Sampling set quantile estimates bird densities. bird_dens_dt data frame monthly estimates bird density within windfarm footprint, expressed number daytime -flight birds/km^2 per month. Data frame format requirements: bird_dens_opt = \"tnorm\", bird_dens_dt must contain following columns: month, (unique) month names, mean, mean number birds flight height per square kilometre month, sd, idem, standard deviation. bird_dens_opt = \"resample\", bird_dens_dt columns must named months (.e. Jan, Feb, ...), containing random samples monthly density estimates. bird_dens_opt = \"qtiles\", bird_dens_dt must comply : First column named p, giving reference probabilities, Remaining columns named months (.e. Jan, Feb, ...), giving quantile estimates bird density given month, reference probabilities column p. flight_type character string, either 'flapping' 'gliding', indicating species' characteristic flight type. prop_upwind Numeric value 0-1 giving proportion flights upwind - defaults 0.5. gen_fhd_boots Required model Options 2 3, data frame bootstrap samples flight height distributions (FHD) species derived general (country/regional level) data. FHD provides relative frequency distribution bird flights 1-metre height bands, starting sea surface. first column must named height, expressing lower bound height band (thus first element must 0). remaining column provide bootstrap sample proportion bird flights height band, column naming requirements. NOTE: generic_fhd_bootstraps list object generic FHD bootstrap estimates 25 seabird species Johnson et al (2014) (see usage Example Section ). site_fhd_boots Required model Option 4, data frame similar gen_fhd_boots, FHD estimates derived site-specific data. n_blades integer, number blades rotor (\\(b\\)). air_gap_pars single row data frame columns mean sd, mean standard deviation tip clearance gap, metres, .e. distance minimum rotor tip height highest astronomical tide (HAT). Assumed follow tnorm-lw0 distribution. rtr_radius_pars single row data frame columns mean sd, mean standard deviation radius rotor, metres. Assumed follow tnorm-lw0 distribution. bld_width_pars single row data frame columns mean sd, mean standard deviation maximum blade width, metres. Assumed tnorm-lw0 distribution. bld_chord_prf data frame chord taper profile rotor blade. must contain columns: pp_radius, equidistant intervals radius bird passage point, proportion rotor_radius, within range \\([0, 1]\\). chord, chord width pp_radius, proportion blade_width. Defaults generic profile typical modern 5MW turbine. See chord_prof_5MW() details. rtn_pitch_opt character string, option specifying sampling mechanism rotation speed blade pitch: \"probDist\": sample rotation speed blade pitch values tnorm-lw0 distribution (default value). \"windSpeedReltn\": generate rotation speed blade pitch values function wind speed intensity. bld_pitch_pars required rtn_pitch_opt = \"probDist\", single row data frame columns mean sd, mean standard deviation blade pitch angle, .e. angle blade surface rotor plane, degrees. Assumed follow tnorm-lw0 distribution. rtn_speed_pars required rtn_pitch_opt = \"probDist\", single row data frame columns mean sd, mean standard deviation operational rotation speed, revolutions per minute. Assumed follow tnorm-lw0 distribution. windspd_pars required rtn_pitch_opt = \"windSpeedReltn\", single row data frame columns mean sd, mean standard deviation wind speed windfarm site, metres/sec. Assumed follow tnorm-lw0 distribution. rtn_pitch_windspd_dt required rtn_pitch_opt = \"windSpeedReltn\", data frame giving relationship wind speed, rotation speed blade pitch values. must contain columns: wind_speed, wind speed m/s, rtn_speed, rotation speed rpm, bld_pitch, blade pitch values degrees. trb_wind_avbl data frame monthly estimates operational wind availability. must contain columns: month, (unique) month names, pctg, percentage time wind conditions allow turbine operation per month. trb_downtime_pars data frame monthly estimates maintenance downtime, assumed follow tnorm-lw0 distribution. must contain following columns: month, (unique) month names, mean, numeric, mean percentage time month turbines operating due maintenance, sd, standard deviation monthly maintenance downtime. wf_n_trbs Integer, number turbines windfarm. wf_width Numeric value, approximate longitudinal width wind farm, kilometres (\\(w\\)). wf_latitude decimal value. latitude centroid windfarm, degrees. tidal_offset numeric value, tidal offset, difference HAT mean sea level, metres. lrg_arr_corr Boolean value. TRUE, large array correction applied. correction factor account decay bird density later rows wind farms large array turbines. yinc, xinc numeric values, increments along y-axis x-axis numerical integration across segments rotor circle. Chosen values express proportion rotor radius. default set 0.05, .e. integration performed resolution one twentieth rotor radius. out_format Output format specification. Possible values : \"draws\": returns stochastic draws collisions estimates (default value), \"summaries\": returns summary statistics collisions estimates. out_sampled_pars Logical, whether output summary statistics values sampled stochastic model parameter. out_period Controls level temporal aggregation collision outputs. Possible values : \"months\": monthly collisions (default value), \"seasons\": collisions per user-defined season, \"annum\": total collisions 12 months. season_specs required out_period = \"seasons\", data frame defining seasons aggregating collision estimates. must comprise following columns: season_id, (unique) season identifier, start_month, name season's first month, end_month, name season's last month. verbose Logical, print model run progress console? log_file Path log file store session info main model run options. set NULL (default value), log file created. seed Integer, random seed random number generation, analysis reproducibility.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/stoch_crm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stochastic collision risk model for a single species and one wind farm scenario ‚Äî stoch_crm","text":"out_sampled_pars = FALSE, returns list estimates number collisions per chosen time periods, elements containing outputs CRM Option. out_sampled_pars = TRUE, returns list object two top-level elements: collisions, list comprising collision estimates CRM Option, sampled_pars, list summary statistics values sampled stochastic model parameters.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/stoch_crm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Stochastic collision risk model for a single species and one wind farm scenario ‚Äî stoch_crm","text":"Collision risk can calculated 4 options, specified model_options: Option 1 - Basic model proportion collision risk height derived site survey (prop_crh_surv). Option 2 - Basic model proportion collision risk height derived generic flight height distribution (gen_fhd). Option 3 - Extended model using generic flight height distribution (gen_fhd). Option 4 - Extended model using site-specific flight height distribution (site_fhd). , Basic model - assumes uniform distribution bird flights collision risk height (.e. minimum maximum height rotor blade). Extended model - takes account distribution bird flight heights collision risk height.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/stoch_crm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stochastic collision risk model for a single species and one wind farm scenario ‚Äî stoch_crm","text":"","code":"# ------------------------------------------------------ # Run with arbitrary parameter values, for illustration # ------------------------------------------------------  # ------------------------------------------------------ # Setting some of the required inputs upfront b_dens <- data.frame(   month = month.abb,   mean = runif(12, 0.8, 1.5),   sd = runif(12, 0.2, 0.3) ) head(b_dens) #>   month      mean        sd #> 1   Jan 0.8500886 0.2752937 #> 2   Feb 1.3384964 0.2859800 #> 3   Mar 0.9137843 0.2755911 #> 4   Apr 1.2723680 0.2900434 #> 5   May 0.9324055 0.2020573 #> 6   Jun 1.4817168 0.2913590  # Generic FHD bootstraps from Johnson et al (2014) fhd_boots <- generic_fhd_bootstraps[[1]] head(fhd_boots) #> # A tibble: 6 √ó 201 #>   height bootI‚Ä¶¬π bootI‚Ä¶¬≤ bootI‚Ä¶¬≥ bootI‚Ä¶‚Å¥ bootI‚Ä¶‚Åµ bootI‚Ä¶‚Å∂ bootI‚Ä¶‚Å∑ bootI‚Ä¶‚Å∏ bootI‚Ä¶‚Åπ #>    <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl> #> 1      0  0.160   0.166   0.174   0.152   0.174   0.168   0.177   0.172   0.161  #> 2      1  0.134   0.138   0.144   0.129   0.144   0.140   0.145   0.142   0.135  #> 3      2  0.113   0.115   0.119   0.109   0.119   0.116   0.120   0.118   0.113  #> 4      3  0.0948  0.0963  0.0981  0.0927  0.0981  0.0967  0.0986  0.0976  0.0951 #> 5      4  0.0796  0.0803  0.0810  0.0786  0.0810  0.0805  0.0812  0.0808  0.0798 #> 6      5  0.0669  0.0670  0.0669  0.0667  0.0669  0.0670  0.0669  0.0670  0.0669 #> # ‚Ä¶ with 191 more variables: bootId_10 <dbl>, bootId_11 <dbl>, bootId_12 <dbl>, #> #   bootId_13 <dbl>, bootId_14 <dbl>, bootId_15 <dbl>, bootId_16 <dbl>, #> #   bootId_17 <dbl>, bootId_18 <dbl>, bootId_19 <dbl>, bootId_20 <dbl>, #> #   bootId_21 <dbl>, bootId_22 <dbl>, bootId_23 <dbl>, bootId_24 <dbl>, #> #   bootId_25 <dbl>, bootId_26 <dbl>, bootId_27 <dbl>, bootId_28 <dbl>, #> #   bootId_29 <dbl>, bootId_30 <dbl>, bootId_31 <dbl>, bootId_32 <dbl>, #> #   bootId_33 <dbl>, bootId_34 <dbl>, bootId_35 <dbl>, bootId_36 <dbl>, ‚Ä¶ #> # ‚Ñπ Use `colnames()` to see all variable names  # wind speed vs rotation speed vs blade pitch wind_rtn_ptch <- data.frame(   wind_speed = seq_len(30),   rtn_speed = 10/(30:1),   bld_pitch = c(rep(90, 4), rep(0, 8), 5:22) ) head(wind_rtn_ptch) #>   wind_speed rtn_speed bld_pitch #> 1          1 0.3333333        90 #> 2          2 0.3448276        90 #> 3          3 0.3571429        90 #> 4          4 0.3703704        90 #> 5          5 0.3846154         0 #> 6          6 0.4000000         0  # wind availability windavb <- data.frame(   month = month.abb,   pctg = runif(12, 85, 98) ) head(windavb) #>   month     pctg #> 1   Jan 95.99011 #> 2   Feb 93.41173 #> 3   Mar 85.61152 #> 4   Apr 89.47075 #> 5   May 87.44455 #> 6   Jun 95.90235  # maintenance downtime dwntm <- data.frame(   month = month.abb,   mean = runif(12, 6, 10),   sd = rep(2, 12)) head(dwntm) #>   month     mean sd #> 1   Jan 6.608589  2 #> 2   Feb 7.702207  2 #> 3   Mar 9.809058  2 #> 4   Apr 9.839507  2 #> 5   May 7.109845  2 #> 6   Jun 8.715040  2  # seasons specification seas_dt <- data.frame(   season_id = c(\"a\", \"b\", \"c\"),   start_month = c(\"Jan\", \"May\", \"Oct\"), end_month = c(\"Apr\", \"Sep\", \"Dec\")   ) head(seas_dt) #>   season_id start_month end_month #> 1         a         Jan       Apr #> 2         b         May       Sep #> 3         c         Oct       Dec  # ---------------------------------------------------------- # Run stochastic CRM, treating rotor radius, air gap and # blade width as fixed parameters (i.e. not stochastic)  stoch_crm(   model_options = c(1, 2, 3),   n_iter = 1000,   flt_speed_pars = data.frame(mean = 7.26, sd = 1.5),   body_lt_pars = data.frame(mean = 0.39, sd = 0.005),   wing_span_pars = data.frame(mean = 1.08, sd = 0.04),   avoid_bsc_pars = data.frame(mean = 0.99, sd = 0.001),   avoid_ext_pars = data.frame(mean = 0.96, sd = 0.002),   noct_act_pars = data.frame(mean = 0.033, sd = 0.005),   prop_crh_pars = data.frame(mean = 0.06, sd = 0.009),   bird_dens_opt = \"tnorm\",   bird_dens_dt = b_dens,   flight_type = \"flapping\",   prop_upwind = 0.5,   gen_fhd_boots = fhd_boots,   n_blades = 3,   rtr_radius_pars = data.frame(mean = 80, sd = 0), # sd = 0, rotor radius is fixed   air_gap_pars = data.frame(mean = 36, sd = 0),    # sd = 0, air gap is fixed   bld_width_pars = data.frame(mean = 8, sd = 0),   # sd = 0, blade width is fixed   rtn_pitch_opt = \"windSpeedReltn\",   windspd_pars = data.frame(mean = 7.74, sd = 3),   rtn_pitch_windspd_dt = wind_rtn_ptch,   trb_wind_avbl = windavb,   trb_downtime_pars = dwntm,   wf_n_trbs = 200,   wf_width = 15,   wf_latitude = 56.9,   tidal_offset = 2.5,   lrg_arr_corr = TRUE,   verbose = TRUE,   seed = 1234,   out_format = \"summaries\",   out_sampled_pars = TRUE,   out_period = \"seasons\",   season_specs = seas_dt,   log_file = paste0(getwd(), \"scrm_example.log\") ) #> ‚îÄ‚îÄ Stochastic CRM ‚îÄ‚îÄ #>  #> ‚Ñπ Checking inputs #> ‚úî Checking inputs [17ms] #>  #> ‚Ñπ Preparing data #> ‚úî Preparing data [33ms] #>  #> ‚Ñπ Sampling parameters #> ‚úî Sampling parameters [135ms] #>  #> ‚†ô Calculating collisions | 3/1000 iterations #> ‚†π Calculating collisions | 610/1000 iterations #> ‚úî Calculating collisions | 1000/1000 iterations [1.5s] #>  #> ‚Ñπ Sorting outputs #> ‚úî Sorting outputs [734ms] #>  #> ‚úî Job done! #> $collisions #> $collisions$opt1 #> # A tibble: 3 √ó 10 #>   season_id period   mean    sd median pctl_2.5 pctl_25 pctl_75 pctl_9‚Ä¶¬π pctl_99 #>   <chr>     <chr>   <dbl> <dbl>  <dbl>    <dbl>   <dbl>   <dbl>    <dbl>   <dbl> #> 1 a         Jan_Apr  31.2 14.2    32.0     8.14    20.3    40.9     59.2    73.0 #> 2 b         May_Sep  61.1 27.7    63.0    16.0     40.9    79.6    116.    149.  #> 3 c         Oct_Dec  18.7  8.76   19.2     4.65    12.3    24.7     35.5    47.2 #> # ‚Ä¶ with abbreviated variable name ¬π‚Äãpctl_97.5 #>  #> $collisions$opt2 #> # A tibble: 3 √ó 10 #>   season_id period   mean    sd median pctl_2.5 pctl_25 pctl_75 pctl_9‚Ä¶¬π pctl_99 #>   <chr>     <chr>   <dbl> <dbl>  <dbl>    <dbl>   <dbl>   <dbl>    <dbl>   <dbl> #> 1 a         Jan_Apr 0.838 1.64   0.427   0.0798   0.244   0.739     5.91   14.8  #> 2 b         May_Sep 1.64  3.18   0.847   0.152    0.477   1.48     10.3    28.4  #> 3 c         Oct_Dec 0.502 0.989  0.253   0.0470   0.146   0.449     3.63    9.09 #> # ‚Ä¶ with abbreviated variable name ¬π‚Äãpctl_97.5 #>  #> $collisions$opt3 #> # A tibble: 3 √ó 10 #>   season_id period   mean    sd median pctl_2.5 pctl_25 pctl_75 pctl_9‚Ä¶¬π pctl_99 #>   <chr>     <chr>   <dbl> <dbl>  <dbl>    <dbl>   <dbl>   <dbl>    <dbl>   <dbl> #> 1 a         Jan_Apr 0.411 1.05  0.156    0.0345  0.0994   0.280     3.22    9.09 #> 2 b         May_Sep 0.800 2.02  0.306    0.0684  0.193    0.558     6.82   18.7  #> 3 c         Oct_Dec 0.244 0.616 0.0934   0.0221  0.0579   0.173     2.07    5.78 #> # ‚Ä¶ with abbreviated variable name ¬π‚Äãpctl_97.5 #>  #>  #> $sampled_pars #> $sampled_pars$air_gap #> # A tibble: 1 √ó 5 #>    mean    sd median pctl_2.5 pctl_97.5 #>   <dbl> <dbl>  <dbl>    <dbl>     <dbl> #> 1    36     0     36       36        36 #>  #> $sampled_pars$bld_width #> # A tibble: 1 √ó 5 #>    mean    sd median pctl_2.5 pctl_97.5 #>   <dbl> <dbl>  <dbl>    <dbl>     <dbl> #> 1     8     0      8        8         8 #>  #> $sampled_pars$body_lt #> # A tibble: 1 √ó 5 #>    mean      sd median pctl_2.5 pctl_97.5 #>   <dbl>   <dbl>  <dbl>    <dbl>     <dbl> #> 1 0.390 0.00499  0.390    0.380     0.400 #>  #> $sampled_pars$flt_speed #> # A tibble: 1 √ó 5 #>    mean    sd median pctl_2.5 pctl_97.5 #>   <dbl> <dbl>  <dbl>    <dbl>     <dbl> #> 1  7.28  1.47   7.28     4.30      10.0 #>  #> $sampled_pars$noct_actv #> # A tibble: 1 √ó 5 #>     mean      sd median pctl_2.5 pctl_97.5 #>    <dbl>   <dbl>  <dbl>    <dbl>     <dbl> #> 1 0.0333 0.00498 0.0333   0.0241    0.0436 #>  #> $sampled_pars$rtr_radius #> # A tibble: 1 √ó 5 #>    mean    sd median pctl_2.5 pctl_97.5 #>   <dbl> <dbl>  <dbl>    <dbl>     <dbl> #> 1    80     0     80       80        80 #>  #> $sampled_pars$wing_span #> # A tibble: 1 √ó 5 #>    mean     sd median pctl_2.5 pctl_97.5 #>   <dbl>  <dbl>  <dbl>    <dbl>     <dbl> #> 1  1.08 0.0398   1.08     1.00      1.16 #>  #> $sampled_pars$hub_height #> # A tibble: 1 √ó 5 #>    mean    sd median pctl_2.5 pctl_97.5 #>   <dbl> <dbl>  <dbl>    <dbl>     <dbl> #> 1   116     0    116      116       116 #>  #> $sampled_pars$dens_mth #> # A tibble: 12 √ó 6 #>    period  mean    sd median pctl_2.5 pctl_97.5 #>    <chr>  <dbl> <dbl>  <dbl>    <dbl>     <dbl> #>  1 Jan    0.840 0.271  0.839    0.335      1.38 #>  2 Feb    1.35  0.276  1.34     0.833      1.90 #>  3 Mar    0.915 0.277  0.915    0.355      1.42 #>  4 Apr    1.28  0.287  1.28     0.736      1.86 #>  5 May    0.936 0.197  0.928    0.558      1.32 #>  6 Jun    1.47  0.286  1.48     0.864      2.05 #>  7 Jul    1.25  0.259  1.25     0.760      1.76 #>  8 Aug    1.09  0.299  1.10     0.499      1.70 #>  9 Sep    0.999 0.231  1.00     0.559      1.44 #> 10 Oct    1.01  0.287  1.01     0.462      1.57 #> 11 Nov    1.43  0.248  1.42     0.957      1.92 #> 12 Dec    0.889 0.280  0.889    0.334      1.43 #>  #> $sampled_pars$prop_oper_mth #> # A tibble: 12 √ó 6 #>    period  mean     sd median pctl_2.5 pctl_97.5 #>    <chr>  <dbl>  <dbl>  <dbl>    <dbl>     <dbl> #>  1 Jan    0.895 0.0207  0.894    0.854     0.932 #>  2 Feb    0.857 0.0206  0.857    0.818     0.896 #>  3 Mar    0.758 0.0204  0.758    0.715     0.798 #>  4 Apr    0.796 0.0196  0.796    0.758     0.834 #>  5 May    0.803 0.0195  0.803    0.765     0.840 #>  6 Jun    0.871 0.0198  0.871    0.832     0.910 #>  7 Jul    0.779 0.0199  0.779    0.739     0.820 #>  8 Aug    0.880 0.0193  0.881    0.842     0.918 #>  9 Sep    0.804 0.0206  0.804    0.763     0.842 #> 10 Oct    0.783 0.0201  0.783    0.742     0.821 #> 11 Nov    0.793 0.0201  0.793    0.754     0.832 #> 12 Dec    0.815 0.0197  0.816    0.777     0.852 #>  #> $sampled_pars$downtime #> # A tibble: 12 √ó 6 #>    period  mean    sd median pctl_2.5 pctl_97.5 #>    <chr>  <dbl> <dbl>  <dbl>    <dbl>     <dbl> #>  1 Jan     6.52  2.07   6.56     2.83      10.6 #>  2 Feb     7.71  2.06   7.71     3.84      11.7 #>  3 Mar     9.81  2.04   9.81     5.79      14.1 #>  4 Apr     9.83  1.96   9.87     6.04      13.6 #>  5 May     7.13  1.95   7.10     3.41      11.0 #>  6 Jun     8.80  1.98   8.77     4.94      12.7 #>  7 Jul     9.27  1.99   9.26     5.22      13.3 #>  8 Aug     6.24  1.93   6.20     2.49      10.0 #>  9 Sep     7.35  2.06   7.33     3.50      11.5 #> 10 Oct     9.61  2.01   9.64     5.80      13.7 #> 11 Nov     8.29  2.01   8.27     4.31      12.1 #> 12 Dec     6.50  1.97   6.39     2.82      10.3 #>  #> $sampled_pars$wind_speed #> # A tibble: 1 √ó 5 #>    mean    sd median pctl_2.5 pctl_97.5 #>   <dbl> <dbl>  <dbl>    <dbl>     <dbl> #> 1  7.74  3.00   7.76     2.15      13.7 #>  #> $sampled_pars$rtn_speed #> # A tibble: 1 √ó 5 #>    mean     sd median pctl_2.5 pctl_97.5 #>   <dbl>  <dbl>  <dbl>    <dbl>     <dbl> #> 1 0.428 0.0574  0.417    0.345     0.556 #>  #> $sampled_pars$bld_pitch #> # A tibble: 1 √ó 5 #>    mean    sd median pctl_2.5 pctl_97.5 #>   <dbl> <dbl>  <dbl>    <dbl>     <dbl> #> 1 0.327 0.634      0        0      1.57 #>  #> $sampled_pars$avoid_bsc #> # A tibble: 1 √ó 5 #>    mean       sd median pctl_2.5 pctl_97.5 #>   <dbl>    <dbl>  <dbl>    <dbl>     <dbl> #> 1 0.990 0.000986  0.990    0.988     0.992 #>  #> $sampled_pars$avoid_ext #> # A tibble: 1 √ó 5 #>    mean      sd median pctl_2.5 pctl_97.5 #>   <dbl>   <dbl>  <dbl>    <dbl>     <dbl> #> 1 0.960 0.00203  0.960    0.956     0.964 #>  #> $sampled_pars$prop_crh #> # A tibble: 1 √ó 5 #>     mean      sd median pctl_2.5 pctl_97.5 #>    <dbl>   <dbl>  <dbl>    <dbl>     <dbl> #> 1 0.0605 0.00909 0.0602   0.0441    0.0801 #>  #> $sampled_pars$gen_fhd #> # A tibble: 500 √ó 6 #>    height   mean      sd median pctl_2.5 pctl_97.5 #>     <dbl>  <dbl>   <dbl>  <dbl>    <dbl>     <dbl> #>  1      0 0.163  0.0187  0.166    0.109     0.187  #>  2      1 0.136  0.0129  0.138    0.0967    0.152  #>  3      2 0.114  0.00851 0.115    0.0863    0.124  #>  4      3 0.0950 0.00527 0.0963   0.0769    0.100  #>  5      4 0.0794 0.00294 0.0803   0.0686    0.0816 #>  6      5 0.0664 0.00146 0.0669   0.0606    0.0670 #>  7      6 0.0556 0.00116 0.0558   0.0530    0.0567 #>  8      7 0.0465 0.00166 0.0466   0.0439    0.0490 #>  9      8 0.0390 0.00215 0.0389   0.0357    0.0431 #> 10      9 0.0327 0.00249 0.0324   0.0290    0.0386 #> # ‚Ä¶ with 490 more rows #> # ‚Ñπ Use `print(n = ...)` to see more rows #>  #>"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/turb_pars_wide_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Example of turbine and windfarm parameters stored in wide format ‚Äî turb_pars_wide_example","title":"Example of turbine and windfarm parameters stored in wide format ‚Äî turb_pars_wide_example","text":"data frame (fake) data turbine wind farm features 3 scenarios.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/turb_pars_wide_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example of turbine and windfarm parameters stored in wide format ‚Äî turb_pars_wide_example","text":"","code":"turb_pars_wide_example"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/turb_pars_wide_example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example of turbine and windfarm parameters stored in wide format ‚Äî turb_pars_wide_example","text":"3 x 51 data frame, turbine windfarm parameters (columns) 3 development scenarios (rows). Columns include: TurbineModel turbine/windfarm scenario ID Blades Nr blades RotorRadius Mean rotor radius RotorRadiusSD SD rotor radius HubHeightAdd Mean air gap, distance sea surface lowest tip height. HubHeightAddSD SD air gap, explained .","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/turb_pars_wide_example.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example of turbine and windfarm parameters stored in wide format ‚Äî turb_pars_wide_example","text":"Intended illustrate application stoch_scrm() multiple scenario setting, parameter data available tables wide format.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/validate_inputs.html","id":null,"dir":"Reference","previous_headings":"","what":"Input validator ‚Äî validate_inputs","title":"Input validator ‚Äî validate_inputs","text":"Input validator","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/validate_inputs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Input validator ‚Äî validate_inputs","text":"","code":"validate_inputs(   model_options,   n_iter = NULL,   flt_speed_pars = NULL,   flight_speed = NULL,   body_lt_pars = NULL,   body_lt = NULL,   wing_span_pars = NULL,   wing_span = NULL,   avoid_bsc_pars = NULL,   avoid_rt_basic = NULL,   avoid_ext_pars = NULL,   avoid_rt_ext = NULL,   noct_act_pars = NULL,   noct_activity = NULL,   prop_crh_pars = NULL,   bird_dens_opt = NULL,   bird_dens_dt = NULL,   chord_prof = NULL,   dens_month = NULL,   turb_oper_month = NULL,   flight_type = NULL,   prop_upwind = NULL,   gen_fhd_boots = NULL,   site_fhd_boots = NULL,   n_blades = NULL,   air_gap_pars = NULL,   rtr_radius_pars = NULL,   rotor_radius = NULL,   blade_width = NULL,   blade_pitch = NULL,   hub_height = NULL,   bld_width_pars = NULL,   rtn_pitch_opt = NULL,   bld_pitch_pars = NULL,   rtn_speed_pars = NULL,   rotor_speed = NULL,   n_turbines = NULL,   windspd_pars = NULL,   rtn_pitch_windspd_dt = NULL,   trb_wind_avbl = NULL,   trb_downtime_pars = NULL,   wf_n_trbs = NULL,   wf_width = NULL,   wf_latitude = NULL,   tidal_offset = NULL,   gen_fhd = NULL,   site_fhd = NULL,   lrg_arr_corr = NULL,   xinc = NULL,   yinc = NULL,   seed = NULL,   verbose = NULL,   out_format = NULL,   out_sampled_pars = NULL,   out_period = NULL,   season_specs = NULL,   popn_estim_pars = NULL,   fn = \"scrm\" )"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/validate_inputs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Input validator ‚Äî validate_inputs","text":"model_options Character vector, model options calculating collision risk (see Details section ). n_iter integer. number iterations model simulation. flt_speed_pars single row data frame columns mean sd, mean standard deviation species flying speed, metres/sec. Assumed follow Truncated Normal lower bound 0 (tnorm-lw0). flight_speed Numeric value. bird flying speed (\\(v\\)), metres/sec. body_lt_pars single row data frame columns mean sd, mean standard deviation species body length, metres. Assumed follow tnorm-lw0 distribution. body_lt Numeric value. length bird (\\(L\\)), metres. wing_span_pars single row data frame columns mean sd, mean standard deviation species wingspan, metres. Assumed follow tnorm-lw0 distribution. wing_span Numeric value. wingspan bird (\\(W\\)), metres. avoid_bsc_pars, avoid_ext_pars Single row data frames columns mean sd, mean standard deviation species avoidance rate used basic model (Options 1 2) extended model (Options 3 4) calculations (see Details section). Avoidance rate expresses probability bird flying collision course turbine take evading action avoid collision, assumed follow Beta distribution. avoid_rt_basic, avoid_rt_ext Numeric values. avoidance rate , respectively, basic model (.e. required model Options 1 2) extended model (.e. required Options 3 4). Avoidance rate expresses probability bird flying collision course turbine take evading action avoid collision. noct_act_pars single row data frame columns mean sd, mean standard deviation species nocturnal flight activity level, expressed proportion daytime activity levels, assumed Beta distributed. noct_activity numeric value. nocturnal flight activity level, expressed proportion daytime activity levels (\\(f_night\\)). prop_crh_pars Required model Option 1, single row data frame columns mean sd. mean standard deviation proportion flights collision risk height derived site survey, assumed Beta distributed. bird_dens_opt Option specifying random sampling mechanism bird densities: \"tnorm\": Sampling density estimates tnorm-lw0 distribution (default value), \"resample\": Re-sample draws bird density estimates (e.g. bootstrap samples), \"qtiles\": Sampling set quantile estimates bird densities. bird_dens_dt data frame monthly estimates bird density within windfarm footprint, expressed number daytime -flight birds/km^2 per month. Data frame format requirements: bird_dens_opt = \"tnorm\", bird_dens_dt must contain following columns: month, (unique) month names, mean, mean number birds flight height per square kilometre month, sd, idem, standard deviation. bird_dens_opt = \"resample\", bird_dens_dt columns must named months (.e. Jan, Feb, ...), containing random samples monthly density estimates. bird_dens_opt = \"qtiles\", bird_dens_dt must comply : First column named p, giving reference probabilities, Remaining columns named months (.e. Jan, Feb, ...), giving quantile estimates bird density given month, reference probabilities column p. chord_prof data frame chord taper profile rotor blade. Function expects two named columns: pp_radius, equidistant intervals radius bird passage point, proportion rotor_radius, within range \\([0, 1]\\). chord, chord width pp_radius, proportion blade_width. Defaults generic profile typical modern 5MW turbine. See chord_prof_5MW() details. dens_month Data frame, containing estimates daytime -flight bird densities per month within windfarm footprint, birds/km^2. must contain following named columns: month, month names. dens, number birds flight height per square kilometre month. turb_oper_month Data frame, holding proportion time turbines operational per month. following named column expected: month, month names. prop_oper, proportion time operating, per month. flight_type character string, either 'flapping' 'gliding', indicating species' characteristic flight type. prop_upwind Numeric value 0-1 giving proportion flights upwind - defaults 0.5. gen_fhd_boots Required model Options 2 3, data frame bootstrap samples flight height distributions (FHD) species derived general (country/regional level) data. FHD provides relative frequency distribution bird flights 1-metre height bands, starting sea surface. first column must named height, expressing lower bound height band (thus first element must 0). remaining column provide bootstrap sample proportion bird flights height band, column naming requirements. NOTE: generic_fhd_bootstraps list object generic FHD bootstrap estimates 25 seabird species Johnson et al (2014) (see usage Example Section ). site_fhd_boots Required model Option 4, data frame similar gen_fhd_boots, FHD estimates derived site-specific data. n_blades integer, number blades rotor (\\(b\\)). air_gap_pars single row data frame columns mean sd, mean standard deviation tip clearance gap, metres, .e. distance minimum rotor tip height highest astronomical tide (HAT). Assumed follow tnorm-lw0 distribution. rtr_radius_pars single row data frame columns mean sd, mean standard deviation radius rotor, metres. Assumed follow tnorm-lw0 distribution. rotor_radius Numeric value. radius rotor (\\(R\\)), metres. blade_width Numeric value, giving maximum blade width, metres. blade_pitch Numeric value. average blade pitch angle, angle blade surface rotor plane (\\(\\gamma\\)), radians. hub_height numeric value, height rotor hub (\\(H\\)), given sum rotor radius minimum blade clearance highest astronomical tide (HAT), metres. bld_width_pars single row data frame columns mean sd, mean standard deviation maximum blade width, metres. Assumed tnorm-lw0 distribution. rtn_pitch_opt character string, option specifying sampling mechanism rotation speed blade pitch: \"probDist\": sample rotation speed blade pitch values tnorm-lw0 distribution (default value). \"windSpeedReltn\": generate rotation speed blade pitch values function wind speed intensity. bld_pitch_pars required rtn_pitch_opt = \"probDist\", single row data frame columns mean sd, mean standard deviation blade pitch angle, .e. angle blade surface rotor plane, degrees. Assumed follow tnorm-lw0 distribution. rtn_speed_pars required rtn_pitch_opt = \"probDist\", single row data frame columns mean sd, mean standard deviation operational rotation speed, revolutions per minute. Assumed follow tnorm-lw0 distribution. rotor_speed Numeric value. operational rotation speed, revolutions/min. n_turbines Integer, number turbines wind farm (\\(T\\)). windspd_pars required rtn_pitch_opt = \"windSpeedReltn\", single row data frame columns mean sd, mean standard deviation wind speed windfarm site, metres/sec. Assumed follow tnorm-lw0 distribution. rtn_pitch_windspd_dt required rtn_pitch_opt = \"windSpeedReltn\", data frame giving relationship wind speed, rotation speed blade pitch values. must contain columns: wind_speed, wind speed m/s, rtn_speed, rotation speed rpm, bld_pitch, blade pitch values degrees. trb_wind_avbl data frame monthly estimates operational wind availability. must contain columns: month, (unique) month names, pctg, percentage time wind conditions allow turbine operation per month. trb_downtime_pars data frame monthly estimates maintenance downtime, assumed follow tnorm-lw0 distribution. must contain following columns: month, (unique) month names, mean, numeric, mean percentage time month turbines operating due maintenance, sd, standard deviation monthly maintenance downtime. wf_n_trbs Integer, number turbines windfarm. wf_width Numeric value, approximate longitudinal width wind farm, kilometres (\\(w\\)). wf_latitude decimal value. latitude centroid windfarm, degrees. tidal_offset numeric value, tidal offset, difference HAT mean sea level, metres. gen_fhd, site_fhd Data frame objects, flight height distributions (fhd) species - relative frequency distribution bird flights 1-metre height intervals sea surface. Specifically: gen_fhd, Data frame species' generic fhd derived combining wider survey data. required model Options 2 3 site_fhd, Data frame species' site-specific fhd derived local survey data. required model Option 4 Data frames must contain following named columns: height, integers representing height bands sea surface, metres. Function expects 0 first value, representing 0-1m band. prop, proportion flights height band. lrg_arr_corr Boolean value. TRUE, large array correction applied. correction factor account decay bird density later rows wind farms large array turbines. yinc, xinc numeric values, increments along y-axis x-axis numerical integration across segments rotor circle. Chosen values express proportion rotor radius. default set 0.05, .e. integration performed resolution one twentieth rotor radius. seed Integer, random seed random number generation, analysis reproducibility. verbose Logical, print model run progress console? out_format Output format specification. Possible values : \"draws\": returns stochastic draws collisions estimates (default value), \"summaries\": returns summary statistics collisions estimates. out_sampled_pars Logical, whether output summary statistics values sampled stochastic model parameter. out_period Controls level temporal aggregation collision outputs. Possible values : \"months\": monthly collisions (default value), \"seasons\": collisions per user-defined season, \"annum\": total collisions 12 months. season_specs required out_period = \"seasons\", data frame defining seasons aggregating collision estimates. must comprise following columns: season_id, (unique) season identifier, start_month, name season's first month, end_month, name season's last month. popn_estim_pars single row data frame columns mean sd. population estimate species expected fly wind farm area. fn character string specifying parent function whose inputs checked: \"scrm\": checks stoch_crm() inputs \"crm\": checks band_crm() inputs \"mcrm\": checks mig_stoch_crm() inputs","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/validate_inputs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Input validator ‚Äî validate_inputs","text":"","code":"validate_inputs(model_options=c(1),                avoid_bsc_pars=data.frame(mean=0.99,sd=0.001),                prop_crh_pars=data.frame(mean=0.01,sd=0.01),                air_gap_pars = data.frame(mean=21,sd=0),                rtr_radius_pars = data.frame(mean=100,sd=0),                bld_pitch_pars = data.frame(mean=15,sd=0),                rtn_pitch_opt = \"probDist\",                rtn_speed_pars = data.frame(mean=14,sd=5),                out_period = \"months\",                lrg_arr_corr = TRUE,                fn=\"scrm\")"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/wndspd_rtn_ptch_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Example of data with relationship between wind speed, rotation speed and\nblade pitch ‚Äî wndspd_rtn_ptch_example","title":"Example of data with relationship between wind speed, rotation speed and\nblade pitch ‚Äî wndspd_rtn_ptch_example","text":"Intended illustrate application stoch_scrm()","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/wndspd_rtn_ptch_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example of data with relationship between wind speed, rotation speed and\nblade pitch ‚Äî wndspd_rtn_ptch_example","text":"","code":"wndspd_rtn_ptch_example"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/wndspd_rtn_ptch_example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example of data with relationship between wind speed, rotation speed and\nblade pitch ‚Äî wndspd_rtn_ptch_example","text":"30 x 3 data frame columns: wind_speed Wind speed metres per second. rtn_speed Blade rotation speed, revolutions per minute bld_pitch Blade pitch, degrees","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/news/index.html","id":"stochlab-110","dir":"Changelog","previous_headings":"","what":"stochLAB 1.1.0","title":"stochLAB 1.1.0","text":"Change function name (DayLength() changed Day_Length()) Change function name (sample_params() changed sample_parameters()) Cleaning srr package standards","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/news/index.html","id":"stochlab-100","dir":"Changelog","previous_headings":"","what":"stochLAB 1.0.0","title":"stochLAB 1.0.0","text":"First full launch package ready submission CRAN ROpenSci Major push unit tests updated major functions package Continuous integration tests incorporated Github actions Badges added continuous integration Unit tests run passed","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/news/index.html","id":"stochlab-031","dir":"Changelog","previous_headings":"","what":"stochLAB 0.3.1","title":"stochLAB 0.3.1","text":"Fixed issue seq_month() working different system languages Cleaning organizing data structure submission CRAN / Ropensci","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/news/index.html","id":"stochlab-030","dir":"Changelog","previous_headings":"","what":"stochLAB 0.3.0","title":"stochLAB 0.3.0","text":"Restructure mig_stoch_crm() function line stoch_crm() Added mig_stoch_crm example Added data validation mig_stoch_crm cli outputs Added seed number examples replication","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/news/index.html","id":"stochlab-022","dir":"Changelog","previous_headings":"","what":"stochLAB 0.2.2","title":"stochLAB 0.2.2","text":"band_crm() example added vignette Conditional added hd_sampler() deal 0 mean values prevent NAs","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/news/index.html","id":"stochlab-021","dir":"Changelog","previous_headings":"","what":"stochLAB 0.2.1","title":"stochLAB 0.2.1","text":"Several unused data files removed cleaned man/ Merge conflicts 0.2.0 cleaned Old scripts previous versions longer used removed Johnston et al flight height spreadsheet SOSS project included","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/news/index.html","id":"stochlab-020","dir":"Changelog","previous_headings":"","what":"stochLAB 0.2.0","title":"stochLAB 0.2.0","text":"Massive commit first full working version stochLAB stoch_crm() stoch_crm() function completely re-wired work individual arguments rather data sheet option 3 model code optimized speed cli package incorporated well data checks validation throughout","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/news/index.html","id":"stochlab-013","dir":"Changelog","previous_headings":"","what":"stochLAB 0.1.3","title":"stochLAB 0.1.3","text":"Added function get flux factor migration CRM","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/news/index.html","id":"stochlab-012","dir":"Changelog","previous_headings":"","what":"stochLAB 0.1.2","title":"stochLAB 0.1.2","text":"Added check 0s number turbines migration CRM. Added foreach package DESCRIPTION fixed bug line sampling","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/news/index.html","id":"stochlab-011","dir":"Changelog","previous_headings":"","what":"stochLAB 0.1.1","title":"stochLAB 0.1.1","text":"Added function run migration collision risk models","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/news/index.html","id":"stochlab-010","dir":"Changelog","previous_headings":"","what":"stochLAB 0.1.0","title":"stochLAB 0.1.0","text":"First large commit changes original Masden & Cook implementation Restructured much original code streamline flux calculations, probability collision Unit tests incorporated ensure agreement Band spreadsheet outputs Model options broken discrete functions","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/news/index.html","id":"stochlab-002","dir":"Changelog","previous_headings":"","what":"stochLAB 0.0.2","title":"stochLAB 0.0.2","text":"Created first iteration Band option 1 2 functions Fixed issues variable names","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/news/index.html","id":"stochlab-001-july-15-2021","dir":"Changelog","previous_headings":"","what":"stochLAB 0.0.1 July 15 2021","title":"stochLAB 0.0.1 July 15 2021","text":"First development version Initial commit first cleanup original Masden Cook functions","code":""}]
