[{"path":"https://hidef-aerial-surveying.github.io/stochLAB/CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (http:contributor-covenant.org), version 1.0.0, available http://contributor-covenant.org/version/1/0/0/","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to stochLAB","title":"Contributing to stochLAB","text":"Thanks considering contributing stochLAB! resources tool used assessing impacts offshore turbines marine birds order help balance trade-offs conservation climate change mitigation.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of conduct","title":"Contributing to stochLAB","text":"Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/CONTRIBUTING.html","id":"how-you-can-contribute","dir":"","previous_headings":"","what":"How you can contribute","title":"Contributing to stochLAB","text":"several ways can contribute project. want know contribute open source projects like one, see Open Source Guide.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/CONTRIBUTING.html","id":"share-the-love","dir":"","previous_headings":"How you can contribute","what":"Share the love","title":"Contributing to stochLAB","text":"Think stochLAB useful? Let others discover , telling person, via Twitter blog post. Using stochLAB paper writing? Consider citing .","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/CONTRIBUTING.html","id":"ask-a-question-Ô∏è","dir":"","previous_headings":"How you can contribute","what":"Ask a question ‚ÅâÔ∏è","title":"Contributing to stochLAB","text":"Using our_package got stuck? Browse documentation see can find solution. Still stuck? Post question issue GitHub. offer user support, ‚Äôll try best address , questions often lead better documentation discovery bugs. Want ask question private? Contact package maintainer [email][mailto:email].","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/CONTRIBUTING.html","id":"propose-an-idea","dir":"","previous_headings":"How you can contribute","what":"Propose an idea","title":"Contributing to stochLAB","text":"idea new our_package feature? Take look documentation issue list see isn‚Äôt included suggested yet. , suggest idea issue GitHub. can‚Äôt promise implement idea, helps : Explain detail work. Keep scope narrow possible. See want contribute code idea well.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/CONTRIBUTING.html","id":"report-a-bug","dir":"","previous_headings":"How you can contribute","what":"Report a bug","title":"Contributing to stochLAB","text":"Using our_package discovered bug? ‚Äôs annoying! Don‚Äôt let others experience report issue GitHub can fix . good bug report makes easier us , please include: operating system name version (e.g.¬†Mac OS 10.13.6). details local setup might helpful troubleshooting. Detailed steps reproduce bug.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/CONTRIBUTING.html","id":"improve-the-documentation","dir":"","previous_headings":"How you can contribute","what":"Improve the documentation","title":"Contributing to stochLAB","text":"Noticed typo website? Think function use better example? Good documentation makes difference, help improve welcome!","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/CONTRIBUTING.html","id":"function-documentation","dir":"","previous_headings":"How you can contribute > Improve the documentation","what":"Function documentation","title":"Contributing to stochLAB","text":"Functions described comments near code translated documentation using roxygen2. want improve function description: Go R/ directory code repository. Look file name function. Propose file change update function documentation roxygen comments (starting #').","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/CONTRIBUTING.html","id":"contribute-code-","dir":"","previous_headings":"How you can contribute","what":"Contribute code üìù","title":"Contributing to stochLAB","text":"Care fix bugs implement new functionality our_package? Awesome! look issue list leave comment things want work . See also development guidelines .","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/CONTRIBUTING.html","id":"development-guidelines","dir":"","previous_headings":"","what":"Development guidelines","title":"Contributing to stochLAB","text":"try follow GitHub flow development. Fork repo clone computer. learn process, see guide. forked cloned project since worked , pull changes original repo clone using git pull upstream master. Open RStudio project file (.Rproj). Write code. Test code (bonus points adding unit tests). Document code (see function documentation ). Check code devtools::check() aim 0 errors warnings. Commit push changes. Submit pull request.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright ¬© 2007 Free Software Foundation, Inc.¬†<http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program‚Äìmake sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers‚Äô authors‚Äô protection, GPL clearly explains warranty free software. users‚Äô authors‚Äô sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users‚Äô freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/LICENSE.html","id":"0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"‚ÄúLicense‚Äù refers version 3 GNU General Public License. ‚ÄúCopyright‚Äù also means copyright-like laws apply kinds works, semiconductor masks. ‚ÄúProgram‚Äù refers copyrightable work licensed License. licensee addressed ‚Äú‚Äù. ‚ÄúLicensees‚Äù ‚Äúrecipients‚Äù may individuals organizations. ‚Äúmodify‚Äù work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called ‚Äúmodified version‚Äù earlier work work ‚Äúbased ‚Äù earlier work. ‚Äúcovered work‚Äù means either unmodified Program work based Program. ‚Äúpropagate‚Äù work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. ‚Äúconvey‚Äù work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays ‚ÄúAppropriate Legal Notices‚Äù extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/LICENSE.html","id":"1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"‚Äúsource code‚Äù work means preferred form work making modifications . ‚ÄúObject code‚Äù means non-source form work. ‚ÄúStandard Interface‚Äù means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. ‚ÄúSystem Libraries‚Äù executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. ‚ÄúMajor Component‚Äù, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . ‚ÄúCorresponding Source‚Äù work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work‚Äôs System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/LICENSE.html","id":"2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/LICENSE.html","id":"3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users‚Äô Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work‚Äôs users, third parties‚Äô legal rights forbid circumvention technological measures.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/LICENSE.html","id":"4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program‚Äôs source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/LICENSE.html","id":"5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 ‚Äúkeep intact notices‚Äù. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called ‚Äúaggregate‚Äù compilation resulting copyright used limit access legal rights compilation‚Äôs users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/LICENSE.html","id":"6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. # separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. ‚ÄúUser Product‚Äù either (1) ‚Äúconsumer product‚Äù, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, ‚Äúnormally used‚Äù refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. ‚ÄúInstallation Information‚Äù User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/LICENSE.html","id":"7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"‚ÄúAdditional permissions‚Äù terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered ‚Äúrestrictions‚Äù within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/LICENSE.html","id":"8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/LICENSE.html","id":"9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/LICENSE.html","id":"10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. ‚Äúentity transaction‚Äù transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party‚Äôs predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/LICENSE.html","id":"11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"‚Äúcontributor‚Äù copyright holder authorizes use License Program work Program based. work thus licensed called contributor‚Äôs ‚Äúcontributor version‚Äù. contributor‚Äôs ‚Äúessential patent claims‚Äù patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, ‚Äúcontrol‚Äù includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor‚Äôs essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, ‚Äúpatent license‚Äù express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). ‚Äúgrant‚Äù patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. ‚ÄúKnowingly relying‚Äù means actual knowledge , patent license, conveying covered work country, recipient‚Äôs use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license ‚Äúdiscriminatory‚Äù include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/LICENSE.html","id":"12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others‚Äô Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/LICENSE.html","id":"13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/LICENSE.html","id":"14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License ‚Äúlater version‚Äù applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy‚Äôs public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/LICENSE.html","id":"15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM ‚Äú‚Äù WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/LICENSE.html","id":"16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/LICENSE.html","id":"17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least ‚Äúcopyright‚Äù line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program‚Äôs commands might different; GUI interface, use ‚Äúbox‚Äù. also get employer (work programmer) school, , sign ‚Äúcopyright disclaimer‚Äù program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/articles/Running_stochLAB.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Running stochLAB","text":"stochLAB package adaptation R code developed Masden (2015) incorporate variability uncertainty avian collision risk model originally developed Band (2012). Code developed stochLAB substantially re-factored re-structured Masden‚Äôs (heavily script-based) implementation user-friendly, streamlined, well documented easily distributed tool. Furthermore, package lays code infrastructure easier incorporation new functionality, e.g.¬†extra parameter sampling features, model expansions, etc. addition, previous code underpinning core calculations extended model replaced alternative approach, resulting significant gains computational speed - 30x faster Masden‚Äôs code. optimization particularly beneficial stochastic context, core calculations called repeatedly simulations. detailed overview type ?stochLAB, installed!","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/articles/Running_stochLAB.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Running stochLAB","text":"can install development version :","code":"# install.packages(\"devtools\") devtools::install_github(\"HiDef-Aerial-Surveying/stochLAB\")"},{"path":[]},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/articles/Running_stochLAB.html","id":"simple-example","dir":"Articles","previous_headings":"Examples","what":"Simple example","title":"Running stochLAB","text":"basic example running stochastic collision model one seabird species one turbine/wind-farm scenario, fictional input parameter data.","code":"# ------------------------------------------------------ # Setting some of the required inputs upfront  b_dens <- data.frame(   month = month.abb,   mean = runif(12, 0.8, 1.5),   sd = runif(12, 0.2, 0.3))  # Generic FHD bootstraps for one species, from Johnson et al (2014) fhd_boots <- generic_fhd_bootstraps[[1]]  # wind speed vs rotation speed vs pitch wind_rtn_ptch <- data.frame(   wind_speed = seq_len(30),   rtn_speed = 10/(30:1),   bld_pitch = c(rep(90, 4), rep(0, 8), 5:22))  # wind availability windavb <- data.frame(   month = month.abb,   pctg = runif(12, 85, 98))  # maintenance downtime dwntm <- data.frame(   month = month.abb,   mean = runif(12, 6, 10),   sd = rep(2, 12))  # seasons specification seas_dt <- data.frame(   season_id = c(\"a\", \"b\", \"c\"),   start_month = c(\"Jan\", \"May\", \"Oct\"), end_month = c(\"Apr\", \"Sep\", \"Dec\"))  # ---------------------------------------------------------- # Run stochastic CRM, treating rotor radius, air gap and # blade width as fixed parameters (i.e. not stochastic)  stoch_crm(   model_options = c(1, 2, 3),   n_iter = 1000,   flt_speed_pars = data.frame(mean = 7.26, sd = 1.5),   body_lt_pars = data.frame(mean = 0.39, sd = 0.005),   wing_span_pars = data.frame(mean = 1.08, sd = 0.04),   avoid_bsc_pars = data.frame(mean = 0.99, sd = 0.001),   avoid_ext_pars = data.frame(mean = 0.96, sd = 0.002),   noct_act_pars = data.frame(mean = 0.033, sd = 0.005),   prop_crh_pars = data.frame(mean = 0.06, sd = 0.009),   bird_dens_opt = \"tnorm\",   bird_dens_dt = b_dens,   flight_type = \"flapping\",   prop_upwind = 0.5,   gen_fhd_boots = fhd_boots,   n_blades = 3,   rtr_radius_pars = data.frame(mean = 80, sd = 0), # sd = 0, rotor radius is fixed   air_gap_pars = data.frame(mean = 36, sd = 0),    # sd = 0, air gap is fixed   bld_width_pars = data.frame(mean = 8, sd = 0),   # sd = 0, blade width is fixed   rtn_pitch_opt = \"windSpeedReltn\",   windspd_pars = data.frame(mean = 7.74, sd = 3),   rtn_pitch_windspd_dt = wind_rtn_ptch,   trb_wind_avbl = windavb,   trb_downtime_pars = dwntm,   wf_n_trbs = 200,   wf_width = 15,   wf_latitude = 56.9,   tidal_offset = 2.5,   lrg_arr_corr = TRUE,   verbose = TRUE,   seed = 1234,   out_format = \"summaries\",   out_sampled_pars = TRUE,   out_period = \"seasons\",   season_specs = seas_dt,   log_file = paste0(getwd(), \"scrm_example.log\") )"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/articles/Running_stochLAB.html","id":"multiscenario-example","dir":"Articles","previous_headings":"Examples","what":"Multiscenario example","title":"Running stochLAB","text":"example usage stoch_crm() multiple scenarios. aim two-fold: Suggest input parameter datasets used previous implementation can reshaped fit stoch_crm()‚Äôs interface. Suggested code also relevant context multiple scenarios applications, since wide tabular structure datasets likely favoured format users compile input parameters different scenarios. Propose functional programming framework run stoch_crm() multiple species wind-farm/turbines features. Please note example runs fictional data.","code":"# --------------------------------------------------------- # # ----      Reshaping into list-column data frames       ---- # --------------------------------------------------------- # # # Here embracing list-columns tibbles, but lists could be used instead  # --- bird features bird_pars <- bird_pars_wide_example %>%   dplyr::relocate(Flight, .after = dplyr::last_col()) %>%   tidyr::pivot_longer(AvoidanceBasic:Prop_CRH_ObsSD) %>%   dplyr::mutate(     par = dplyr::if_else(grepl(\"SD|sd|Sd\", name), \"sd\", \"mean\"),     feature = gsub(\"SD|sd|Sd\",\"\", name)) %>%   dplyr::select(-name) %>%   tidyr::pivot_wider(names_from = par, values_from = value) %>%   tidyr::nest(pars = c(mean, sd)) %>%   tidyr::pivot_wider(names_from = feature, values_from = pars) %>%   tibble::add_column(prop_upwind = 0.5)  # --- bird densities: provided as mean and sd Parameters for Truncated Normal lower # bounded at 0 dens_pars <- dens_tnorm_wide_example %>%   tibble::add_column(     dens_opt = rep(\"tnorm\", nrow(.)),     .after = 1) %>%   tidyr::pivot_longer(Jan:DecSD) %>%   dplyr::mutate(     par = dplyr::if_else(grepl(\"SD|sd|Sd\", name), \"sd\", \"mean\"),     month = gsub(\"SD|sd|Sd\",\"\", name)) %>%   dplyr::select(-name) %>%   tidyr::pivot_wider(names_from = par, values_from = value) %>%   tidyr::nest(mth_dens = c(month, mean, sd))  # --- FHD data from Johnson et al (2014) for the species under analysis gen_fhd_boots <- generic_fhd_bootstraps[bird_pars$Species]  # --- seasons definitions (made up) season_dt <- list(   Arctic_Tern = data.frame(     season_id = c(\"breeding\", \"feeding\", \"migrating\"),     start_month = c(\"May\", \"Sep\", \"Jan\"),     end_month = c(\"Aug\", \"Dec\", \"Apr\")),   Black_headed_Gull = data.frame(     season_id = c(\"breeding\", \"feeding\", \"migrating\"),     start_month = c(\"Jan\", \"May\", \"Oct\"),     end_month = c(\"Apr\", \"Sep\", \"Dec\")),   Black_legged_Kittiwake = data.frame(     season_id = c(\"breeding\", \"feeding\", \"migrating\"),     start_month = c(\"Dec\", \"Mar\", \"Sep\"),     end_month = c(\"Feb\", \"Aug\", \"Nov\")))  # --- turbine parameters ## address operation parameters first trb_opr_pars <- turb_pars_wide_example %>%   dplyr::select(TurbineModel, JanOp:DecOpSD) %>%   tidyr::pivot_longer(JanOp:DecOpSD) %>%   dplyr::mutate(     month = substr(name, 1, 3),     par = dplyr::case_when(       grepl(\"SD|sd|Sd\", name) ~ \"sd\",       grepl(\"Mean|MEAN|mean\", name) ~ \"mean\",       TRUE ~ \"pctg\"     )) %>%   dplyr::select(-name) %>%   tidyr::pivot_wider(names_from = par, values_from = value) %>%   tidyr::nest(     wind_avbl = c(month, pctg),     trb_dwntm = c(month, mean, sd))  ## address turbine features and subsequently merge operation parameters trb_pars <- turb_pars_wide_example %>%   dplyr::select(TurbineModel:windSpeedSD ) %>%   dplyr::relocate(RotorSpeedAndPitch_SimOption, .after = 1) %>%   tidyr::pivot_longer(RotorRadius:windSpeedSD) %>%   dplyr::mutate(     par = dplyr::if_else(grepl(\"SD|sd|Sd\", name), \"sd\", \"mean\"),     feature = gsub(\"(SD|sd|Sd)|(Mean|MEAN|mean)\",\"\", name)   ) %>%   dplyr::select(-name) %>%   tidyr::pivot_wider(names_from = par, values_from = value) %>%   tidyr::nest(pars = c(mean, sd)) %>%   tidyr::pivot_wider(names_from = feature, values_from = pars) %>%   dplyr::left_join(., trb_opr_pars)  # --- windspeed, rotation speed and blade pitch relationship wndspd_rtn_ptch_example  # --- windfarm parameters wf_pars <- data.frame(   wf_id = c(\"wf_1\", \"wf_2\"),   n_turbs = c(200, 400),   wf_width = c(4, 10),   wf_lat = c(55.8, 55.0),   td_off = c(2.5, 2),   large_array_corr = c(FALSE, TRUE) )   # -------------------------------------------------------------- # # ----      Run stoch_crm() for multiple scenarios           ---- # -------------------------------------------------------------- #  # --- Set up scenario combinations scenarios_specs <- tidyr::expand_grid(   spp = bird_pars$Species,   turb_id = trb_pars$TurbineModel,   wf_id = wf_pars$wf_id) %>%   tibble::add_column(     scenario_id = paste0(\"scenario_\", 1:nrow(.)),     .before = 1)  # --- Set up progress bar for the upcoming iterative mapping step pb <- progress::progress_bar$new(   format = \"Running Scenario: :what [:bar] :percent eta: :eta\",   width = 100,   total = nrow(scenarios_specs))  # --- Map stoch_crm() to each scenario specification via purrr::pmap outputs <- scenarios_specs %>%   purrr::pmap(function(scenario_id, spp, turb_id, wf_id, ...){      pb$tick(tokens = list(what = scenario_id))      # params for current species     c_spec <- bird_pars %>%       dplyr::filter(Species == {{spp}}) # {{}} to avoid issues with data masking      # density for current species     c_dens <- dens_pars %>%       dplyr::filter(Species == {{spp}})      # params for current turbine scenario     c_turb <- trb_pars %>%       dplyr::filter(TurbineModel == {{turb_id}})      # params for current windfarm scenario     c_wf <- wf_pars %>%       dplyr::filter(wf_id == {{wf_id}})      # inputs in list-columns need to be unlisted, either via `unlist()` or     # indexing `[[1]]`     # switching off `verbose`, otherwise console will be # cramped with log     messages     stoch_crm(       model_options = c(1, 2, 3),       n_iter = 1000,       flt_speed_pars = c_spec$Flight_Speed[[1]],       body_lt_pars = c_spec$Body_Length[[1]],       wing_span_pars = c_spec$Wingspan[[1]],       avoid_bsc_pars = c_spec$AvoidanceBasic[[1]],       avoid_ext_pars = c_spec$AvoidanceExtended[[1]],       noct_act_pars = c_spec$Nocturnal_Activity[[1]],       prop_crh_pars = c_spec$Prop_CRH_Obs[[1]],       bird_dens_opt = c_dens$dens_opt,       bird_dens_dt = c_dens$mth_dens[[1]],       flight_type = c_spec$Flight,       prop_upwind = c_spec$prop_upwind,       gen_fhd_boots = gen_fhd_boots[[spp]],       n_blades = c_turb$Blades,       rtr_radius_pars = c_turb$RotorRadius[[1]],       air_gap_pars = c_turb$HubHeightAdd[[1]],       bld_width_pars = c_turb$BladeWidth[[1]],       rtn_pitch_opt = c_turb$RotorSpeedAndPitch_SimOption,       bld_pitch_pars = c_turb$Pitch[[1]],       rtn_speed_pars = c_turb$RotationSpeed[[1]],       windspd_pars = c_turb$windSpeed[[1]],       rtn_pitch_windspd_dt = wndspd_rtn_ptch_example,       trb_wind_avbl = c_turb$wind_avbl[[1]],       trb_downtime_pars = c_turb$trb_dwntm[[1]],       wf_n_trbs = c_wf$n_turbs,       wf_width = c_wf$wf_width,       wf_latitude = c_wf$wf_lat,       tidal_offset = c_wf$td_off,       lrg_arr_corr = c_wf$large_array_corr,       verbose = FALSE,       seed = 1234,       out_format = \"summaries\",       out_sampled_pars = FALSE,       out_period = \"seasons\",       season_specs = season_dt[[spp]],       log_file = NULL     )   })  # --- close progress bar pb$terminate()  # --- identify elements of output list names(outputs) <- scenarios_specs$scenario_id  outputs"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/articles/Running_stochLAB.html","id":"band-model-example","dir":"Articles","previous_headings":"Examples","what":"Band model example","title":"Running stochLAB","text":"example usage band_crm(). single species single set turbine parameters. replicates Band (2012) worksheet. stoch_crm() function wraps around function, band_crm() acts essence single draw stoch_crm(). Please note example runs fictional data.","code":"# ------------------------------------------------------ # Run with arbitrary parameter values, for illustration # ------------------------------------------------------  # Setting a dataframe of parameters to draw from params <- data.frame(   flight_speed = 13.1,         # Flight speed in m/s   body_lt = 0.85,              # Body length in m   wing_span = 1.01,            # Wing span in m   flight_type = \"flapping\",    # flapping or gliding flight   avoid_rt_basic = 0.989,      # avoidance rate for option 1 and 2   avoid_rt_ext = 0.981,        # extended avoidance rate for option 3 and 4   noct_activity = 0.5,         # proportion of day birds are inactive   prop_crh_surv = 0.13,        # proportion of birds at collision risk height (option 1 only)   prop_upwind = 0.5,           # proportion of flights that are upwind   rotor_speed = 15,            # rotor speed in m/s   rotor_radius = 120,          # radius of turbine in m   blade_width = 5,             # width of turbine blades at thickest point in m   blade_pitch = 15,            # mean radius pitch in Radians   n_blades = 3,                # total number of blades per turbine   hub_height = 150,            # height of hub in m above HAT   n_turbines = 100,            # number of turbines in the wind farm   wf_width = 52,               # width across longest section of wind farm   wf_latitude = 56,            # latitude of centroid of wind farm   tidal_offset = 2.5,          # mean tidal offset from HAT of the wind farm   lrg_arr_corr = TRUE          # apply a large array correction? )  # Monthly bird densities b_dens <- data.frame(   month = month.abb,   dens = runif(12, 0.8, 1.5) )  # flight height distribution from Johnston et al gen_fhd_dat <- data.frame(   height = Johnston_Flight_heights_SOSS$Height,   prop = Johnston_Flight_heights_SOSS$Gannet.est )  # monthly operational time of the wind farm turb_oper <- data.frame(   month = month.abb,   prop_oper = runif(12,0.5,0.8) )   stochLAB::band_crm(   model_options = c(1,2,3),   flight_speed = params$flight_speed,   body_lt = params$body_lt,   wing_span = params$wing_span,   flight_type = params$flight_type,   avoid_rt_basic = params$avoid_rt_basic,   avoid_rt_ext = params$avoid_rt_ext,   noct_activity = params$noct_activity,   prop_crh_surv = params$prop_crh_surv,   dens_month = b_dens,   prop_upwind = params$prop_upwind,   gen_fhd = gen_fhd_dat,   site_fhd = NULL,  # Option 4 only   rotor_speed = params$rotor_speed,   rotor_radius = params$rotor_radius,   blade_width = params$blade_width,   blade_pitch = params$blade_pitch,   n_blades = params$n_blades,   hub_height = params$hub_height,   chord_prof = chord_prof_5MW,   n_turbines = params$n_turbines,   turb_oper_month = turb_oper,   wf_width = params$wf_width,   wf_latitude = params$wf_latitude,   tidal_offset = params$tidal_offset,   lrg_arr_corr = params$lrg_arr_corr   )"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Grant Humphries. Author, maintainer. Bruno Caneco. Author. Marine Scotland. Funder, copyright holder. HiDef. Copyright holder. DMPstats. Copyright holder.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bruno Caneco, Grant Humphries, Aonghais Cook, Elizabeth Masden (2022). Estimating bird collisions offshore windfarms stochLAB URL https://hidef-aerial-surveying.github.io/stochLAB.","code":"@Manual{,   title = {Estimating bird collisions at offshore windfarms with {stochLAB}},   author = {Bruno Caneco and Grant Humphries and Aonghais Cook and Elizabeth Masden},   institution = {Marine Scotland Science},   year = {2022},   url = {https://hidef-aerial-surveying.github.io/stochLAB}, }"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/index.html","id":"stochlab-","dir":"","previous_headings":"","what":"Stochastic Collision Risk Model","title":"Stochastic Collision Risk Model","text":"stochLAB tool run Collision Risk Models (CRMs) seabirds offshore wind farms.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Stochastic Collision Risk Model","text":"stochLAB package adaptation R code developed Masden (2015) incorporate variability uncertainty avian collision risk model originally developed Band (2012). stochLAB package compiled curated DMP Statistics HiDef Aerial Surveying. Code developed stochLAB substantially re-factored re-structured Masden‚Äôs (heavily script-based) implementation user-friendly, streamlined, well documented easily distributed tool. Furthermore, package lays code infrastructure easier incorporation new functionality, e.g.¬†extra parameter sampling features, model expansions, etc. addition, previous code underpinning core calculations extended model replaced alternative approach, resulting significant gains computational speed - 30x faster Masden‚Äôs code. optimization particularly beneficial stochastic context, core calculations called repeatedly simulations. detailed overview type ?stochLAB, installed!","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Stochastic Collision Risk Model","text":"can install development version :","code":"# install.packages(\"devtools\") devtools::install_github(\"HiDef-Aerial-Surveying/stochLAB\")"},{"path":[]},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/index.html","id":"simple-example","dir":"","previous_headings":"Examples","what":"Simple example","title":"Stochastic Collision Risk Model","text":"basic example running stochastic collision model one seabird species one turbine/wind-farm scenario, fictional input parameter data.","code":"library(stochLAB)  # ------------------------------------------------------ # Setting some of the required inputs upfront  b_dens <- data.frame(   month = month.abb,   mean = runif(12, 0.8, 1.5),   sd = runif(12, 0.2, 0.3))  # Generic FHD bootstraps for one species, from Johnson et al (2014) fhd_boots <- generic_fhd_bootstraps[[1]]  # wind speed vs rotation speed vs pitch wind_rtn_ptch <- data.frame(   wind_speed = seq_len(30),   rtn_speed = 10/(30:1),   bld_pitch = c(rep(90, 4), rep(0, 8), 5:22))  # wind availability windavb <- data.frame(   month = month.abb,   pctg = runif(12, 85, 98))  # maintenance downtime dwntm <- data.frame(   month = month.abb,   mean = runif(12, 6, 10),   sd = rep(2, 12))  # seasons specification seas_dt <- data.frame(   season_id = c(\"a\", \"b\", \"c\"),   start_month = c(\"Jan\", \"May\", \"Oct\"), end_month = c(\"Apr\", \"Sep\", \"Dec\"))  # ---------------------------------------------------------- # Run stochastic CRM, treating rotor radius, air gap and # blade width as fixed parameters (i.e. not stochastic)  stoch_crm(   model_options = c(1, 2, 3),   n_iter = 1000,   flt_speed_pars = data.frame(mean = 7.26, sd = 1.5),   body_lt_pars = data.frame(mean = 0.39, sd = 0.005),   wing_span_pars = data.frame(mean = 1.08, sd = 0.04),   avoid_bsc_pars = data.frame(mean = 0.99, sd = 0.001),   avoid_ext_pars = data.frame(mean = 0.96, sd = 0.002),   noct_act_pars = data.frame(mean = 0.033, sd = 0.005),   prop_crh_pars = data.frame(mean = 0.06, sd = 0.009),   bird_dens_opt = \"tnorm\",   bird_dens_dt = b_dens,   flight_type = \"flapping\",   prop_upwind = 0.5,   gen_fhd_boots = fhd_boots,   n_blades = 3,   rtr_radius_pars = data.frame(mean = 80, sd = 0), # sd = 0, rotor radius is fixed   air_gap_pars = data.frame(mean = 36, sd = 0),    # sd = 0, air gap is fixed   bld_width_pars = data.frame(mean = 8, sd = 0),   # sd = 0, blade width is fixed   rtn_pitch_opt = \"windSpeedReltn\",   windspd_pars = data.frame(mean = 7.74, sd = 3),   rtn_pitch_windspd_dt = wind_rtn_ptch,   trb_wind_avbl = windavb,   trb_downtime_pars = dwntm,   wf_n_trbs = 200,   wf_width = 15,   wf_latitude = 56.9,   tidal_offset = 2.5,   lrg_arr_corr = TRUE,   verbose = TRUE,   seed = 1234,   out_format = \"summaries\",   out_sampled_pars = TRUE,   out_period = \"seasons\",   season_specs = seas_dt,   log_file = paste0(getwd(), \"scrm_example.log\") )"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/index.html","id":"multiscenario-example","dir":"","previous_headings":"Examples","what":"Multiscenario example","title":"Stochastic Collision Risk Model","text":"example usage stoch_crm() multiple scenarios. aim two-fold: Suggest input parameter datasets used previous implementation can reshaped fit stoch_crm()‚Äôs interface. Suggested code also relevant context multiple scenarios applications, since wide tabular structure datasets likely favoured format users compile input parameters different scenarios. Propose functional programming framework run stoch_crm() multiple species wind-farm/turbines features. Please note example runs fictional data.","code":"library(stochLAB)  # --------------------------------------------------------- # # ----      Reshaping into list-column data frames       ---- # --------------------------------------------------------- # # # Here embracing list-columns tibbles, but lists could be used instead  # --- bird features bird_pars <- bird_pars_wide_example %>%   dplyr::relocate(Flight, .after = dplyr::last_col()) %>%   tidyr::pivot_longer(AvoidanceBasic:Prop_CRH_ObsSD) %>%   dplyr::mutate(     par = dplyr::if_else(grepl(\"SD|sd|Sd\", name), \"sd\", \"mean\"),     feature = gsub(\"SD|sd|Sd\",\"\", name)) %>%   dplyr::select(-name) %>%   tidyr::pivot_wider(names_from = par, values_from = value) %>%   tidyr::nest(pars = c(mean, sd)) %>%   tidyr::pivot_wider(names_from = feature, values_from = pars) %>%   tibble::add_column(prop_upwind = 0.5)  # --- bird densities: provided as mean and sd Parameters for Truncated Normal lower # bounded at 0 dens_pars <- dens_tnorm_wide_example %>%   tibble::add_column(     dens_opt = rep(\"tnorm\", nrow(.)),     .after = 1) %>%   tidyr::pivot_longer(Jan:DecSD) %>%   dplyr::mutate(     par = dplyr::if_else(grepl(\"SD|sd|Sd\", name), \"sd\", \"mean\"),     month = gsub(\"SD|sd|Sd\",\"\", name)) %>%   dplyr::select(-name) %>%   tidyr::pivot_wider(names_from = par, values_from = value) %>%   tidyr::nest(mth_dens = c(month, mean, sd))  # --- FHD data from Johnson et al (2014) for the species under analysis gen_fhd_boots <- generic_fhd_bootstraps[bird_pars$Species]  # --- seasons definitions (made up) season_dt <- list(   Arctic_Tern = data.frame(     season_id = c(\"breeding\", \"feeding\", \"migrating\"),     start_month = c(\"May\", \"Sep\", \"Jan\"),     end_month = c(\"Aug\", \"Dec\", \"Apr\")),   Black_headed_Gull = data.frame(     season_id = c(\"breeding\", \"feeding\", \"migrating\"),     start_month = c(\"Jan\", \"May\", \"Oct\"),     end_month = c(\"Apr\", \"Sep\", \"Dec\")),   Black_legged_Kittiwake = data.frame(     season_id = c(\"breeding\", \"feeding\", \"migrating\"),     start_month = c(\"Dec\", \"Mar\", \"Sep\"),     end_month = c(\"Feb\", \"Aug\", \"Nov\")))  # --- turbine parameters ## address operation parameters first trb_opr_pars <- turb_pars_wide_example %>%   dplyr::select(TurbineModel, JanOp:DecOpSD) %>%   tidyr::pivot_longer(JanOp:DecOpSD) %>%   dplyr::mutate(     month = substr(name, 1, 3),     par = dplyr::case_when(       grepl(\"SD|sd|Sd\", name) ~ \"sd\",       grepl(\"Mean|MEAN|mean\", name) ~ \"mean\",       TRUE ~ \"pctg\"     )) %>%   dplyr::select(-name) %>%   tidyr::pivot_wider(names_from = par, values_from = value) %>%   tidyr::nest(     wind_avbl = c(month, pctg),     trb_dwntm = c(month, mean, sd))  ## address turbine features and subsequently merge operation parameters trb_pars <- turb_pars_wide_example %>%   dplyr::select(TurbineModel:windSpeedSD ) %>%   dplyr::relocate(RotorSpeedAndPitch_SimOption, .after = 1) %>%   tidyr::pivot_longer(RotorRadius:windSpeedSD) %>%   dplyr::mutate(     par = dplyr::if_else(grepl(\"SD|sd|Sd\", name), \"sd\", \"mean\"),     feature = gsub(\"(SD|sd|Sd)|(Mean|MEAN|mean)\",\"\", name)   ) %>%   dplyr::select(-name) %>%   tidyr::pivot_wider(names_from = par, values_from = value) %>%   tidyr::nest(pars = c(mean, sd)) %>%   tidyr::pivot_wider(names_from = feature, values_from = pars) %>%   dplyr::left_join(., trb_opr_pars)  # --- windspeed, rotation speed and blade pitch relationship wndspd_rtn_ptch_example  # --- windfarm parameters wf_pars <- data.frame(   wf_id = c(\"wf_1\", \"wf_2\"),   n_turbs = c(200, 400),   wf_width = c(4, 10),   wf_lat = c(55.8, 55.0),   td_off = c(2.5, 2),   large_array_corr = c(FALSE, TRUE) )   # -------------------------------------------------------------- # # ----      Run stoch_crm() for multiple scenarios           ---- # -------------------------------------------------------------- #  # --- Set up scenario combinations scenarios_specs <- tidyr::expand_grid(   spp = bird_pars$Species,   turb_id = trb_pars$TurbineModel,   wf_id = wf_pars$wf_id) %>%   tibble::add_column(     scenario_id = paste0(\"scenario_\", 1:nrow(.)),     .before = 1)  # --- Set up progress bar for the upcoming iterative mapping step pb <- progress::progress_bar$new(   format = \"Running Scenario: :what [:bar] :percent eta: :eta\",   width = 100,   total = nrow(scenarios_specs))  # --- Map stoch_crm() to each scenario specification via purrr::pmap outputs <- scenarios_specs %>%   purrr::pmap(function(scenario_id, spp, turb_id, wf_id, ...){      pb$tick(tokens = list(what = scenario_id))      # params for current species     c_spec <- bird_pars %>%       dplyr::filter(Species == {{spp}}) # {{}} to avoid issues with data masking      # density for current species     c_dens <- dens_pars %>%       dplyr::filter(Species == {{spp}})      # params for current turbine scenario     c_turb <- trb_pars %>%       dplyr::filter(TurbineModel == {{turb_id}})      # params for current windfarm scenario     c_wf <- wf_pars %>%       dplyr::filter(wf_id == {{wf_id}})      # inputs in list-columns need to be unlisted, either via `unlist()` or     # indexing `[[1]]`     # switching off `verbose`, otherwise console will be # cramped with log     messages     stoch_crm(       model_options = c(1, 2, 3),       n_iter = 1000,       flt_speed_pars = c_spec$Flight_Speed[[1]],       body_lt_pars = c_spec$Body_Length[[1]],       wing_span_pars = c_spec$Wingspan[[1]],       avoid_bsc_pars = c_spec$AvoidanceBasic[[1]],       avoid_ext_pars = c_spec$AvoidanceExtended[[1]],       noct_act_pars = c_spec$Nocturnal_Activity[[1]],       prop_crh_pars = c_spec$Prop_CRH_Obs[[1]],       bird_dens_opt = c_dens$dens_opt,       bird_dens_dt = c_dens$mth_dens[[1]],       flight_type = c_spec$Flight,       prop_upwind = c_spec$prop_upwind,       gen_fhd_boots = gen_fhd_boots[[spp]],       n_blades = c_turb$Blades,       rtr_radius_pars = c_turb$RotorRadius[[1]],       air_gap_pars = c_turb$HubHeightAdd[[1]],       bld_width_pars = c_turb$BladeWidth[[1]],       rtn_pitch_opt = c_turb$RotorSpeedAndPitch_SimOption,       bld_pitch_pars = c_turb$Pitch[[1]],       rtn_speed_pars = c_turb$RotationSpeed[[1]],       windspd_pars = c_turb$windSpeed[[1]],       rtn_pitch_windspd_dt = wndspd_rtn_ptch_example,       trb_wind_avbl = c_turb$wind_avbl[[1]],       trb_downtime_pars = c_turb$trb_dwntm[[1]],       wf_n_trbs = c_wf$n_turbs,       wf_width = c_wf$wf_width,       wf_latitude = c_wf$wf_lat,       tidal_offset = c_wf$td_off,       lrg_arr_corr = c_wf$large_array_corr,       verbose = FALSE,       seed = 1234,       out_format = \"summaries\",       out_sampled_pars = FALSE,       out_period = \"seasons\",       season_specs = season_dt[[spp]],       log_file = NULL     )   })  # --- close progress bar pb$terminate()  # --- identify elements of output list names(outputs) <- scenarios_specs$scenario_id  outputs"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/index.html","id":"band-model-example","dir":"","previous_headings":"Examples","what":"Band model example","title":"Stochastic Collision Risk Model","text":"example usage band_crm(). single species single set turbine parameters. replicates Band (2012) worksheet. stoch_crm() function wraps around function, band_crm() acts essence single draw stoch_crm(). Please note example runs fictional data.","code":"# ------------------------------------------------------ # Run with arbitrary parameter values, for illustration # ------------------------------------------------------  # Setting a dataframe of parameters to draw from params <- data.frame(   flight_speed = 13.1,         # Flight speed in m/s   body_lt = 0.85,              # Body length in m   wing_span = 1.01,            # Wing span in m   flight_type = \"flapping\",    # flapping or gliding flight   avoid_rt_basic = 0.989,      # avoidance rate for option 1 and 2   avoid_rt_ext = 0.981,        # extended avoidance rate for option 3 and 4   noct_activity = 0.5,         # proportion of day birds are inactive   prop_crh_surv = 0.13,        # proportion of birds at collision risk height (option 1 only)   prop_upwind = 0.5,           # proportion of flights that are upwind   rotor_speed = 15,            # rotor speed in m/s   rotor_radius = 120,          # radius of turbine in m   blade_width = 5,             # width of turbine blades at thickest point in m   blade_pitch = 15,            # mean radius pitch in Radians   n_blades = 3,                # total number of blades per turbine   hub_height = 150,            # height of hub in m above HAT   n_turbines = 100,            # number of turbines in the wind farm   wf_width = 52,               # width across longest section of wind farm   wf_latitude = 56,            # latitude of centroid of wind farm   tidal_offset = 2.5,          # mean tidal offset from HAT of the wind farm   lrg_arr_corr = TRUE          # apply a large array correction? )  # Monthly bird densities b_dens <- data.frame(   month = month.abb,   dens = runif(12, 0.8, 1.5) )  # flight height distribution from Johnston et al gen_fhd_dat <- data.frame(   height = Johnston_Flight_heights_SOSS$Height,   prop = Johnston_Flight_heights_SOSS$Gannet.est )  # monthly operational time of the wind farm turb_oper <- data.frame(   month = month.abb,   prop_oper = runif(12,0.5,0.8) )   band_crm(   model_options = c(1,2,3),   flight_speed = params$flight_speed,   body_lt = params$body_lt,   wing_span = params$wing_span,   flight_type = params$flight_type,   avoid_rt_basic = params$avoid_rt_basic,   avoid_rt_ext = params$avoid_rt_ext,   noct_activity = params$noct_activity,   prop_crh_surv = params$prop_crh_surv,   dens_month = b_dens,   prop_upwind = params$prop_upwind,   gen_fhd = gen_fhd_dat,   site_fhd = NULL,  # Option 4 only   rotor_speed = params$rotor_speed,   rotor_radius = params$rotor_radius,   blade_width = params$blade_width,   blade_pitch = params$blade_pitch,   n_blades = params$n_blades,   hub_height = params$hub_height,   chord_prof = chord_prof_5MW,   n_turbines = params$n_turbines,   turb_oper_month = turb_oper,   wf_width = params$wf_width,   wf_latitude = params$wf_latitude,   tidal_offset = params$tidal_offset,   lrg_arr_corr = params$lrg_arr_corr   )"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/index.html","id":"migratory-stochastic-collision-risk-model","dir":"","previous_headings":"Examples","what":"Migratory stochastic collision risk model","title":"Stochastic Collision Risk Model","text":"adaptation Band (2012) method estimating collision risk migratory species windfarms. runs crm_opt1() uses estimates population size PCH due complexity measuring parameters migratory species. code return draws defined season. Please note example runs fictional data.","code":"# ------------------------------------------------------ # Run with arbitrary parameter values, for illustration # ------------------------------------------------------ season_specs <- data.frame(   season_id = c(\"PrBMigration\", \"PoBMigration\", \"Omigration\"),   start_month = c(\"Jan\", \"May\", \"Oct\"), end_month = c(\"Apr\", \"Sep\", \"Dec\") )  # wind availability windavb <- data.frame(   month = month.abb,   pctg = runif(12, 85, 98) ) head(windavb)  # maintenance downtime dwntm <- data.frame(   month = month.abb,   mean = runif(12, 6, 10),   sd = rep(2, 12)) head(dwntm)   mig_stoch_crm(   wing_span_pars = data.frame(mean = 1.08, sd = 0.04),      # Wing span in m,   flt_speed_pars = data.frame(mean = 7.26, sd = 1.5),       # Flight speed in m/s   body_lt_pars = data.frame(mean = 0.39, sd = 0.005),       # Body length in m,   prop_crh_pars = data.frame(mean = 0.06, sd = 0.009),      # Proportion of birds at CRH   avoid_bsc_pars = data.frame(mean = 0.99, sd = 0.001),     # avoidance rate   n_turbines = 150,   n_blades = 3,   rtn_speed_pars = data.frame(mean = 13.1, sd = 4),         # rotation speed in m/s of turbine blades   bld_pitch_pars = data.frame(mean = 3, sd = 0.3),          # pitch in degrees of turbine blades   rtr_radius_pars = data.frame(mean = 80, sd = 0),          # sd = 0, rotor radius is fixed   bld_width_pars = data.frame(mean = 8, sd = 0),            # sd = 0, blade width is fixed   wf_width = 100,   wf_latitude = 54.1,   prop_upwind = 0.5,   flight_type = \"flapping\",   popn_estim_pars = data.frame(mean = 21584, sd = 2023),    # population flying through windfarm,   season_specs = season_specs,   chord_profile = chord_prof_5MW,   trb_wind_avbl = windavb,   trb_downtime_pars = dwntm,   n_iter = 1000,   LargeArrayCorrection = TRUE,   log_file = NULL,   seed = 1234,   verbose = TRUE)"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/DayLength.html","id":null,"dir":"Reference","previous_headings":"","what":"Total day and night hours per month ‚Äî DayLength","title":"Total day and night hours per month ‚Äî DayLength","text":"Taken Forsythe et al.(1995) model comparison daylength function latitude day year.  Ecological Modelling. 80: 87 - 95","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/DayLength.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Total day and night hours per month ‚Äî DayLength","text":"","code":"DayLength(wf_latitude)"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/DayLength.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Total day and night hours per month ‚Äî DayLength","text":"wf_latitude decimal value. latitude centroid windfarm, degrees.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/DayLength.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Total day and night hours per month ‚Äî DayLength","text":"data frame total number daylight hours night hours month specified latitude.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/DayLength.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Total day and night hours per month ‚Äî DayLength","text":"","code":"x <- DayLength(54.6)"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/Johnston_Flight_heights_SOSS.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarized flight height profiles from Johnston et al (2014) ‚Äî Johnston_Flight_heights_SOSS","title":"Summarized flight height profiles from Johnston et al (2014) ‚Äî Johnston_Flight_heights_SOSS","text":"dataframe containing flight height profiles species Johnston et al. (2014). Values expressed proportion birds 1 metre height intervals.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/Johnston_Flight_heights_SOSS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarized flight height profiles from Johnston et al (2014) ‚Äî Johnston_Flight_heights_SOSS","text":"","code":"Johnston_Flight_heights_SOSS"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/Johnston_Flight_heights_SOSS.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Summarized flight height profiles from Johnston et al (2014) ‚Äî Johnston_Flight_heights_SOSS","text":"data frame object 3 columns containing maximum likelihood, median, Upper/Lower confidence limits flight height distributions. Flight height bands go 1 - 300m ASL. height Height sea level, metres. First element represents 0-1 meters height band, height interval 1 metre. variable species name variable Johnston et al 2014 estimates. E.G., ArcticSkua.est maximum likelihood estimate  models. .est = maximum likelihood, .lcl .ucl lower upper 95% CLs, .med median estimate. prop proportion birds within 1m flight height bands.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/Johnston_Flight_heights_SOSS.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Summarized flight height profiles from Johnston et al (2014) ‚Äî Johnston_Flight_heights_SOSS","text":"https://www.bto.org/-science/wetland--marine/soss/projects","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/band_crm.html","id":null,"dir":"Reference","previous_headings":"","what":"Collision risk model, for a single species and one turbine scenario ‚Äî band_crm","title":"Collision risk model, for a single species and one turbine scenario ‚Äî band_crm","text":"Core function Collision Risk Model (CRM). Calculates expected number -flight collisions per month seabird species given offshore windfarm, choice model options. Calculations equivalent performed original CRM spreadsheet, per Band (2012), providing backward compatibility original outputs.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/band_crm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collision risk model, for a single species and one turbine scenario ‚Äî band_crm","text":"","code":"band_crm(   model_options = c(\"1\", \"2\", \"3\", \"4\"),   flight_speed,   body_lt,   wing_span,   flight_type,   avoid_rt_basic = NULL,   avoid_rt_ext = NULL,   noct_activity,   prop_crh_surv = NULL,   dens_month,   prop_upwind,   site_fhd = NULL,   gen_fhd = NULL,   rotor_speed,   rotor_radius,   blade_width,   blade_pitch,   n_blades,   hub_height,   chord_prof = chord_prof_5MW,   n_turbines,   turb_oper_month,   wf_width,   wf_latitude,   tidal_offset,   lrg_arr_corr = TRUE,   xinc = 0.05,   yinc = 0.05,   ... )"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/band_crm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collision risk model, for a single species and one turbine scenario ‚Äî band_crm","text":"model_options Character vector, model options calculating collision risk (see Details section ). flight_speed Numeric value. bird flying speed (\\(v\\)), metres/sec. body_lt Numeric value. length bird (\\(L\\)), metres. wing_span Numeric value. wingspan bird (\\(W\\)), metres. flight_type character string, either 'flapping' 'gliding', indicating species' characteristic flight type. avoid_rt_basic, avoid_rt_ext Numeric values. avoidance rate , respectively, basic model (.e. required model Options 1 2) extended model (.e. required Options 3 4). Avoidance rate expresses probability bird flying collision course turbine take evading action avoid collision. noct_activity numeric value. nocturnal flight activity level, expressed proportion daytime activity levels (\\(f_night\\)). prop_crh_surv proportion flights collision risk height derived site survey (\\(Q_2R\\)). required model Option 1. dens_month Data frame, containing estimates daytime -flight bird densities per month within windfarm footprint, birds/km^2. must contain following named columns: month, month names. dens, number birds flight height per square kilometre month. prop_upwind Numeric value 0-1 giving proportion flights upwind - defaults 0.5. gen_fhd, site_fhd Data frame objects, flight height distributions (fhd) species - relative frequency distribution bird flights 1-metre height intervals sea surface. Specifically: gen_fhd, Data frame species' generic fhd derived combining wider survey data. required model Options 2 3 site_fhd, Data frame species' site-specific fhd derived local survey data. required model Option 4 Data frames must contain following named columns: height, integers representing height bands sea surface, metres. Function expects 0 first value, representing 0-1m band. prop, proportion flights height band. rotor_speed Numeric value. operational rotation speed, revolutions/min. rotor_radius Numeric value. radius rotor (\\(R\\)), metres. blade_width Numeric value, giving maximum blade width, metres. blade_pitch Numeric value. average blade pitch angle, angle blade surface rotor plane (\\(\\gamma\\)), radians. n_blades integer, number blades rotor (\\(b\\)). hub_height numeric value, height rotor hub (\\(H\\)), given sum rotor radius minimum blade clearance highest astronomical tide (HAT), metres. chord_prof data frame chord taper profile rotor blade. Function expects two named columns: pp_radius, equidistant intervals radius bird passage point, proportion rotor_radius, within range \\([0, 1]\\). chord, chord width pp_radius, proportion blade_width. Defaults generic profile typical modern 5MW turbine. See chord_prof_5MW() details. n_turbines Integer, number turbines wind farm (\\(T\\)). turb_oper_month Data frame, holding proportion time turbines operational per month. following named column expected: month, month names. prop_oper, proportion time operating, per month. wf_width Numeric value, approximate longitudinal width wind farm, kilometres (\\(w\\)). wf_latitude decimal value. latitude centroid windfarm, degrees. tidal_offset numeric value, tidal offset, difference HAT mean sea level, metres. lrg_arr_corr Boolean value. TRUE, large array correction applied. correction factor account decay bird density later rows wind farms large array turbines. yinc, xinc numeric values, increments along y-axis x-axis numerical integration across segments rotor circle. Chosen values express proportion rotor radius. default set 0.05, .e. integration performed resolution one twentieth rotor radius. ... Additional arguments pass function called stoch_crm(), namely rotor_grids wf_daynight_hrs_month.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/band_crm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collision risk model, for a single species and one turbine scenario ‚Äî band_crm","text":"Returns expected number bird collisions per month, chosen CRM Options. Returned months shared dens_month turb_oper_month. Output format specific function called: data frame object, called stand-alone function. list object, called inside stoch_crm().","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/band_crm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Collision risk model, for a single species and one turbine scenario ‚Äî band_crm","text":"Collision risk can calculated 4 options, specified model_options: Option 1 - Basic model proportion collision risk height derived site survey (prop_crh_surv). Option 2 - Basic model proportion collision risk height derived generic flight height distribution (gen_fhd). Option 3 - Extended model using generic flight height distribution (gen_fhd). Option 4 - Extended model using site-specific flight height distribution (site_fhd). , Basic model - assumes uniform distribution bird flights collision risk height (.e. minimum maximum height rotor blade). Extended model - takes account distribution bird flight heights collision risk height.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/band_crm.html","id":"validation-and-pre-processing-of-inputs","dir":"Reference","previous_headings":"","what":"Validation and pre-processing of inputs","title":"Collision risk model, for a single species and one turbine scenario ‚Äî band_crm","text":"band_crm() requirements behaviour dependent called: stand-alone function arguments expected specified describe Input validation pre-processing carried . Inside stoch_crm() Assumes inputs already pre-processed validated, thence skips steps. Additional arguments rotor_grids wf_daynight_hrs_month need passed function. stochastic context, quantities can calculated ahead simulation loop maximize performance. Furthermore, gen_fhd, site_fhd, dens_month turb_oper_month can provided numeric vectors","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/band_crm.html","id":"code-revision-and-optimization","dir":"Reference","previous_headings":"","what":"Code revision and optimization","title":"Collision risk model, for a single species and one turbine scenario ‚Äî band_crm","text":"Core code performing Band calculations Masden (2015) implementation substantially re-factored, re-structured streamlined conform conventional R packages requirements. Furthermore, previous code underpinning key calculations extended model replaced alternative approach, resulting significant gains computational speed - 30x faster Masden's approach. optimization particularly beneficial stochastic context, Band calculations called repeatedly, potentially thousands times. See generate_rotor_grids() details.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/band_crm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Collision risk model, for a single species and one turbine scenario ‚Äî band_crm","text":"","code":"# ------------------------------------------------------ # Run with arbitrary parameter values, for illustration # ------------------------------------------------------  # Setting a dataframe of parameters to draw from params <- data.frame(   flight_speed = 13.1,         # Flight speed in m/s   body_lt = 0.85,              # Body length in m   wing_span = 1.01,            # Wing span in m   flight_type = \"flapping\",    # flapping or gliding flight   avoid_rt_basic = 0.989,      # avoidance rate for option 1 and 2   avoid_rt_ext = 0.981,        # extended avoidance rate for option 3 and 4   noct_activity = 0.5,         # proportion of day birds are inactive   prop_crh_surv = 0.13,        # proportion of birds at collision risk height (option 1 only)   prop_upwind = 0.5,           # proportion of flights that are upwind   rotor_speed = 15,            # rotor speed in m/s   rotor_radius = 120,          # radius of turbine in m   blade_width = 5,             # width of turbine blades at thickest point in m   blade_pitch = 15,            # mean radius pitch in Radians   n_blades = 3,                # total number of blades per turbine   hub_height = 150,            # height of hub in m above HAT   n_turbines = 100,            # number of turbines in the wind farm   wf_width = 52,               # width across longest section of wind farm   wf_latitude = 56,            # latitude of centroid of wind farm   tidal_offset = 2.5,          # mean tidal offset from HAT of the wind farm   lrg_arr_corr = TRUE          # apply a large array correction? )  # Monthly bird densities b_dens <- data.frame(   month = month.abb,   dens = runif(12, 0.8, 1.5) )  # flight height distribution from Johnston et al gen_fhd_dat <- Johnston_Flight_heights_SOSS %>%   dplyr::filter(variable==\"Gannet.est\") %>%   dplyr::select(height,prop)   # monthly operational time of the wind farm turb_oper <- data.frame(   month = month.abb,   prop_oper = runif(12,0.5,0.8) )   band_crm(   model_options = c(1,2,3),   flight_speed = params$flight_speed,   body_lt = params$body_lt,   wing_span = params$wing_span,   flight_type = params$flight_type,   avoid_rt_basic = params$avoid_rt_basic,   avoid_rt_ext = params$avoid_rt_ext,   noct_activity = params$noct_activity,   prop_crh_surv = params$prop_crh_surv,   dens_month = b_dens,   prop_upwind = params$prop_upwind,   gen_fhd = gen_fhd_dat,   site_fhd = NULL,  # Option 4 only   rotor_speed = params$rotor_speed,   rotor_radius = params$rotor_radius,   blade_width = params$blade_width,   blade_pitch = params$blade_pitch,   n_blades = params$n_blades,   hub_height = params$hub_height,   chord_prof = chord_prof_5MW,   n_turbines = params$n_turbines,   turb_oper_month = turb_oper,   wf_width = params$wf_width,   wf_latitude = params$wf_latitude,   tidal_offset = params$tidal_offset,   lrg_arr_corr = params$lrg_arr_corr   ) #> # A tibble: 12 √ó 4 #>    month  opt1  opt2  opt3 #>    <chr> <dbl> <dbl> <dbl> #>  1 Jan    57.2  14.7  6.03 #>  2 Feb    89.0  22.9  9.39 #>  3 Mar    73.7  19.0  7.77 #>  4 Apr    88.5  22.8  9.33 #>  5 May    60.1  15.5  6.34 #>  6 Jun    66.6  17.2  7.03 #>  7 Jul    67.6  17.4  7.13 #>  8 Aug    85.5  22.1  9.02 #>  9 Sep    57.9  14.9  6.10 #> 10 Oct   108.   27.8 11.4  #> 11 Nov    98.9  25.5 10.4  #> 12 Dec    54.3  14.0  5.73"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/band_spreadsheet_dt.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter values and outputs from Band's Collision Risk spreadsheet\n(","title":"Parameter values and outputs from Band's Collision Risk spreadsheet\n(","text":"list object comprising parameter values outputs Band's worked example testing consistency package functions original model implementation.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/band_spreadsheet_dt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameter values and outputs from Band's Collision Risk spreadsheet\n(","text":"","code":"band_spreadsheet_dt"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/band_spreadsheet_dt.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Parameter values and outputs from Band's Collision Risk spreadsheet\n(","text":"list object containing: flight_speed Bird flight speed, m/s rotor_radius rotor radius, meters","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/band_spreadsheet_dt_2.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter values and outputs from Band's Collision Risk spreadsheet, example\nnr. 2 ‚Äî band_spreadsheet_dt_2","title":"Parameter values and outputs from Band's Collision Risk spreadsheet, example\nnr. 2 ‚Äî band_spreadsheet_dt_2","text":"list object comprising parameter values outputs Band's worked example testing consistency package functions original model implementation.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/band_spreadsheet_dt_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameter values and outputs from Band's Collision Risk spreadsheet, example\nnr. 2 ‚Äî band_spreadsheet_dt_2","text":"","code":"band_spreadsheet_dt_2"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/band_spreadsheet_dt_2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Parameter values and outputs from Band's Collision Risk spreadsheet, example\nnr. 2 ‚Äî band_spreadsheet_dt_2","text":"list object containing: flight_speed Bird flight speed, m/s rotor_radius rotor radius, meters","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/bird_pars_wide_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Example of bird parameters stored in wide format ‚Äî bird_pars_wide_example","title":"Example of bird parameters stored in wide format ‚Äî bird_pars_wide_example","text":"data frame (fake) data biological parameters three seabird species.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/bird_pars_wide_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example of bird parameters stored in wide format ‚Äî bird_pars_wide_example","text":"","code":"bird_pars_wide_example"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/bird_pars_wide_example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example of bird parameters stored in wide format ‚Äî bird_pars_wide_example","text":"3 x 16 data frame, biological parameters (columns) 3 species (rows). Columns include: Species Species name AvoidanceBasic Mean basic avoidance rate AvoidanceBasicSD SD basic avoidance rate AvoidanceExtended Mean extended avoidance rate AvoidanceExtendedSD SD extended avoidance rate Body_Length Mean body length Body_LengthSD SD body length","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/bird_pars_wide_example.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example of bird parameters stored in wide format ‚Äî bird_pars_wide_example","text":"Intended illustrate application stoch_scrm() multiple scenario setting, parameter data available tables wide format.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/chord_prof_5MW.html","id":null,"dir":"Reference","previous_headings":"","what":"Rotor blade chord profile ‚Äî chord_prof_5MW","title":"Rotor blade chord profile ‚Äî chord_prof_5MW","text":"data.frame giving blade's chord width profile, .e. chord width along length blade, provided proportion maximum width.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/chord_prof_5MW.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rotor blade chord profile ‚Äî chord_prof_5MW","text":"","code":"chord_prof_5MW"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/chord_prof_5MW.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Rotor blade chord profile ‚Äî chord_prof_5MW","text":"dataframe pp_radius radius bird passage point, proportion rotor radius (R) chord chord width pp_radius, proportion maximum chord width","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/chord_prof_5MW.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rotor blade chord profile ‚Äî chord_prof_5MW","text":"generic profile typical modern 5MW turbine used offshore generation. Due commercial sensitivities blade manufacturers, detailed information may readily available make/model blade hence generic information may used.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/chord_prof_5MW.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Rotor blade chord profile ‚Äî chord_prof_5MW","text":"\"chord_prof_5MW\" numerically identical \"coverC\". \"coverC\" become deprecated future versions code","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/crm_opt1.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of collisions under model option 1 ‚Äî crm_opt1","title":"Number of collisions under model option 1 ‚Äî crm_opt1","text":"Wrapper function run CRM calculations option 1: Basic model, .e. flights across collision risk height uniformly distributed. Proportion collision risk height derived site survey.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/crm_opt1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of collisions under model option 1 ‚Äî crm_opt1","text":"","code":"crm_opt1(   flux_factor,   prop_crh_surv,   avg_prob_coll,   mth_prop_oper,   avoidance_rate,   lac_factor )"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/crm_opt1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of collisions under model option 1 ‚Äî crm_opt1","text":"flux_factor vector containing flux factor month prop_crh_surv proportion flights collision risk height derived site survey (\\(Q_2R\\)). required model Option 1. avg_prob_coll numeric value, average probability collision single bird transit rotor, assuming avoidance action (\\(p_{average}\\)). mth_prop_oper numeric vector, proportion time turbines operational per month. avoidance_rate numeric value within interval \\([0, 1]\\). avoidance rate, expressing probability bird flying collision course turbine take evading action avoid collision. lac_factor numerical value, large array correction factor. Defaults 1, meaning large array correction applicable.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/crm_opt1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of collisions under model option 1 ‚Äî crm_opt1","text":"numeric vector, expected number collisions per month based model option 1","code":""},{"path":[]},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/crm_opt1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Number of collisions under model option 1 ‚Äî crm_opt1","text":"","code":"flux_fct <- get_flux_factor(       n_turbines = 100,       rotor_radius = 120,       flight_speed = 13.1,       bird_dens = c(1.19,0.85,1.05,1.45,1.41,1.45,1.12,1.45,0.93,0.902,1.06,1.23),       daynight_hrs = DayLength(52),       noct_activity = 0.5       )  turb_oper <- data.frame(    month = month.abb,    prop_oper = runif(12,0.5,0.8)    ) turb_oper_month <- turb_oper$prop_oper  crm_opt1(  flux_factor = flux_fct,  prop_crh_surv = 0.13,  avg_prob_coll = 0.1494609,  mth_prop_oper = turb_oper_month,  avoidance_rate = 0.989,  lac_factor = 0.9998287) #>  [1]  61.93643  57.95075  87.90254  83.31963 102.95329 127.70673  67.88472 #>  [8] 100.01815  49.83116  51.42690  71.44782  58.68886"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/crm_opt2.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of collisions under model option 2 ‚Äî crm_opt2","title":"Number of collisions under model option 2 ‚Äî crm_opt2","text":"Wrapper function run CRM calculations option 2, .e.: Basic model, .e. flights across collision risk height uniformly distributed Proportion collision risk height derived flight height distribution (\\(Q'_2R\\))","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/crm_opt2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of collisions under model option 2 ‚Äî crm_opt2","text":"","code":"crm_opt2(   d_y,   flux_factor,   avg_prob_coll,   mth_prop_oper,   avoidance_rate,   lac_factor )"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/crm_opt2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of collisions under model option 2 ‚Äî crm_opt2","text":"d_y vector proportion bird flights height bands within rotor disc flux_factor vector containing flux factor month avg_prob_coll numeric value, average probability collision single bird transit rotor, assuming avoidance action (\\(p_{average}\\)). mth_prop_oper numeric vector, proportion time turbines operational per month. avoidance_rate numeric value within interval \\([0, 1]\\). avoidance rate, expressing probability bird flying collision course turbine take evading action avoid collision. lac_factor numerical value, large array correction factor. Defaults 1, meaning large array correction applicable.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/crm_opt2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of collisions under model option 2 ‚Äî crm_opt2","text":"numeric vector, expected number collisions per month based model Option 2.","code":""},{"path":[]},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/crm_opt2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Number of collisions under model option 2 ‚Äî crm_opt2","text":"","code":"avg_collision_risk <-  get_avg_prob_collision(    flight_speed = 13.1,    body_lt = 0.85,    wing_span = 1.01,    prop_upwind = 0.5,    flap_glide = 1,    rotor_speed = 15,    rotor_radius = 120,    blade_width = 5,    blade_pitch = 15,    n_blades = 3,    chord_prof = chord_prof_5MW  )    gen_fhd_dat <- Johnston_Flight_heights_SOSS %>%       dplyr::filter(variable==\"Gannet.est\") %>%       dplyr::select(height,prop)   gen_fhd <- gen_fhd_dat$prop   gen_fhd_at_rotor <-     get_fhd_rotor(       hub_height = 150,       fhd = gen_fhd,       rotor_radius = 120,       tidal_offset = 2.5,       yinc = 0.05)    flux_fct <- get_flux_factor(       n_turbines = 100,       rotor_radius = 120,       flight_speed = 13.1,       bird_dens = c(1.19,0.85,1.05,1.45,1.41,1.45,1.12,1.45,0.93,0.902,1.06,1.23),       daynight_hrs = DayLength(52),       noct_activity = 0.5       )  turb_oper <- data.frame(    month = month.abb,    prop_oper = runif(12,0.5,0.8)    ) turb_oper_month <- turb_oper$prop_oper  crm_opt2(     flux_factor = flux_fct,     d_y = gen_fhd_at_rotor,     avg_prob_coll = avg_collision_risk,     mth_prop_oper = turb_oper_month,     avoidance_rate = 0.989,    lac_factor = 0.9998299) #>  [1] 15.83576 11.20646 15.78599 25.35557 30.45528 28.50437 17.24249 25.14253 #>  [9] 14.84553 15.36992 14.82651 16.72731"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/crm_opt3.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of collisions under model Option 3 ‚Äî crm_opt3","title":"Number of collisions under model Option 3 ‚Äî crm_opt3","text":"Wrapper function run CRM calculations option 3, .e.: Using extended model, takes account distribution bird flight heights risk height (minimum maximum height rotor blade) Using generic flight height distribution data","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/crm_opt3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of collisions under model Option 3 ‚Äî crm_opt3","text":"","code":"crm_opt3(   rotor_grids,   d_y_gen,   rotor_radius,   blade_width,   rotor_speed,   blade_pitch,   flight_type,   wing_span,   flight_speed,   body_lt,   n_blades,   prop_upwind,   avoidance_rate,   flux_factor,   mth_prop_oper,   lac_factor )"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/crm_opt3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of collisions under model Option 3 ‚Äî crm_opt3","text":"rotor_grids list object containing geometric attributes rotor equidistant points within unit circle. object built via function generate_rotor_grids(). d_y_gen vector proportion birds height bands within rotor disc, generic flight height distribution rotor_radius Numeric value. radius rotor (\\(R\\)), metres. blade_width Numeric value, giving maximum blade width, metres. rotor_speed Numeric value. operational rotation speed, revolutions/min. blade_pitch Numeric value. average blade pitch angle, angle blade surface rotor plane (\\(\\gamma\\)), radians. flight_type character string, either 'flapping' 'gliding', indicating species' characteristic flight type. wing_span Numeric value. wingspan bird (\\(W\\)), metres. flight_speed Numeric value. bird flying speed (\\(v\\)), metres/sec. body_lt Numeric value. length bird (\\(L\\)), metres. n_blades integer, number blades rotor (\\(b\\)). prop_upwind Numeric value 0-1 giving proportion flights upwind - defaults 0.5. avoidance_rate numeric value within interval \\([0, 1]\\). avoidance rate, expressing probability bird flying collision course turbine take evading action avoid collision. flux_factor vector containing flux factor month mth_prop_oper numeric vector, proportion time turbines operational per month. lac_factor numerical value, large array correction factor. Defaults 1, meaning large array correction applicable.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/crm_opt3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of collisions under model Option 3 ‚Äî crm_opt3","text":"numeric vector, expected number collisions per month based model option 3","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/crm_opt3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Number of collisions under model Option 3 ‚Äî crm_opt3","text":"","code":"rotor_grids <- generate_rotor_grids(yinc = 0.05, xinc = 0.05, chord_prof_5MW)   gen_fhd_dat <- Johnston_Flight_heights_SOSS %>%       dplyr::filter(variable==\"Gannet.est\") %>%       dplyr::select(height,prop)   gen_fhd <- gen_fhd_dat$prop   gen_fhd_at_rotor <-     get_fhd_rotor(       hub_height = 150,       fhd = gen_fhd,       rotor_radius = 120,       tidal_offset = 2.5,       yinc = 0.05)    flux_fct <- get_flux_factor(       n_turbines = 100,       rotor_radius = 120,       flight_speed = 13.1,       bird_dens = c(1.19,0.85,1.05,1.45,1.41,1.45,1.12,1.45,0.93,0.902,1.06,1.23),       daynight_hrs = DayLength(52),       noct_activity = 0.5       )  turb_oper <- data.frame(    month = month.abb,    prop_oper = runif(12,0.5,0.8)    ) turb_oper_month <- turb_oper$prop_oper  crm_opt3(   rotor_grids = rotor_grids,   d_y_gen = gen_fhd_at_rotor,   rotor_radius = 120,   blade_width = 5,   rotor_speed = 15,   blade_pitch = 15,   flight_type = \"flapping\",   wing_span = 1.01,   flight_speed = 13.1,   body_lt = 0.85,   n_blades = 3,   prop_upwind = 0.5,   avoidance_rate = 0.981,   flux_factor = flux_fct,   mth_prop_oper = turb_oper_month,   lac_factor = 0.9998299   ) #>  [1]  6.806962  5.931166  7.458360  9.588059  9.925044 13.858672  7.834538 #>  [8]  9.754796  6.556469  6.843844  8.233632  6.677856"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/crm_opt4.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of collisions under model Option 4 ‚Äî crm_opt4","title":"Number of collisions under model Option 4 ‚Äî crm_opt4","text":"Wrapper function run CRM calculations option 4, .e.: Using extended model, takes account distribution bird flight heights risk height (minimum maximum height rotor blade) Using site-specific flight height distribution species obtained site survey data","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/crm_opt4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of collisions under model Option 4 ‚Äî crm_opt4","text":"","code":"crm_opt4(   rotor_grids,   d_y_surv,   rotor_radius,   blade_width,   rotor_speed,   blade_pitch,   flight_type,   wing_span,   flight_speed,   body_lt,   n_blades,   prop_upwind,   avoidance_rate,   flux_factor,   mth_prop_oper,   lac_factor )"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/crm_opt4.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of collisions under model Option 4 ‚Äî crm_opt4","text":"rotor_grids list object containing geometric attributes rotor equidistant points within unit circle. object built via function generate_rotor_grids(). d_y_surv vector proportion birds height bands within rotor disc, site-specific flight height distribution rotor_radius Numeric value. radius rotor (\\(R\\)), metres. blade_width Numeric value, giving maximum blade width, metres. rotor_speed Numeric value. operational rotation speed, revolutions/min. blade_pitch Numeric value. average blade pitch angle, angle blade surface rotor plane (\\(\\gamma\\)), radians. flight_type character string, either 'flapping' 'gliding', indicating species' characteristic flight type. wing_span Numeric value. wingspan bird (\\(W\\)), metres. flight_speed Numeric value. bird flying speed (\\(v\\)), metres/sec. body_lt Numeric value. length bird (\\(L\\)), metres. n_blades integer, number blades rotor (\\(b\\)). prop_upwind Numeric value 0-1 giving proportion flights upwind - defaults 0.5. avoidance_rate numeric value within interval \\([0, 1]\\). avoidance rate, expressing probability bird flying collision course turbine take evading action avoid collision. flux_factor vector containing flux factor month mth_prop_oper numeric vector, proportion time turbines operational per month. lac_factor numerical value, large array correction factor. Defaults 1, meaning large array correction applicable.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/crm_opt4.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of collisions under model Option 4 ‚Äî crm_opt4","text":"numeric vector, expected number collisions per month based model option 4","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/crm_opt4.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Number of collisions under model Option 4 ‚Äî crm_opt4","text":"","code":"rotor_grids <- generate_rotor_grids(yinc = 0.05, xinc = 0.05, chord_prof_5MW)   site_fhd_dat <- Johnston_Flight_heights_SOSS %>%       dplyr::filter(variable==\"Gannet.est\") %>%       dplyr::select(height,prop)   site_fhd <- site_fhd_dat$prop   surv_fhd_at_rotor <-     get_fhd_rotor(       hub_height = 150,       fhd = site_fhd,       rotor_radius = 120,       tidal_offset = 2.5,       yinc = 0.05)    flux_fct <- get_flux_factor(       n_turbines = 100,       rotor_radius = 120,       flight_speed = 13.1,       bird_dens = c(1.19,0.85,1.05,1.45,1.41,1.45,1.12,1.45,0.93,0.902,1.06,1.23),       daynight_hrs = DayLength(52),       noct_activity = 0.5       )  turb_oper <- data.frame(    month = month.abb,    prop_oper = runif(12,0.5,0.8)    ) turb_oper_month <- turb_oper$prop_oper  crm_opt4(   rotor_grids = rotor_grids,   d_y_surv = surv_fhd_at_rotor,   rotor_radius = 120,   blade_width = 5,   rotor_speed = 15,   blade_pitch = 15,   flight_type = \"flapping\",   wing_span = 1.01,   flight_speed = 13.1,   body_lt = 0.85,   n_blades = 3,   prop_upwind = 0.5,   avoidance_rate = 0.981,   flux_factor = flux_fct,   mth_prop_oper = turb_oper_month,   lac_factor = 0.9998299   ) #>  [1]  7.927020  4.312201  7.762419  8.385367 11.734567  9.314771 10.279950 #>  [8] 11.052650  6.186761  6.718005  7.966778  9.516800"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/dens_tnorm_wide_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Example of Truncated Normal parameters for monthly estimates of bird density ‚Äî dens_tnorm_wide_example","title":"Example of Truncated Normal parameters for monthly estimates of bird density ‚Äî dens_tnorm_wide_example","text":"data frame (fake) monthly bird density parameters three seabird species.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/dens_tnorm_wide_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example of Truncated Normal parameters for monthly estimates of bird density ‚Äî dens_tnorm_wide_example","text":"","code":"dens_tnorm_wide_example"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/dens_tnorm_wide_example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example of Truncated Normal parameters for monthly estimates of bird density ‚Äî dens_tnorm_wide_example","text":"3 x 25 data frame, monthly density parameters (columns) 3 species (rows). Columns include: Species Species name Jan January mean density JanSD SD density January Feb February mean density FebSD SD density February","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/dens_tnorm_wide_example.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example of Truncated Normal parameters for monthly estimates of bird density ‚Äî dens_tnorm_wide_example","text":"Intended illustrate application stoch_scrm() multiple scenario setting, parameter data available tables wide format.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/format_months.html","id":null,"dir":"Reference","previous_headings":"","what":"Format any month name to three letter code ‚Äî format_months","title":"Format any month name to three letter code ‚Äî format_months","text":"Format month name three letter code","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/format_months.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format any month name to three letter code ‚Äî format_months","text":"","code":"format_months(months)"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/format_months.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format any month name to three letter code ‚Äî format_months","text":"months character string vector. name month","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/format_months.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format any month name to three letter code ‚Äî format_months","text":"","code":"format_months(\"January\") #> [1] \"Jan\""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/generate_rotor_grids.html","id":null,"dir":"Reference","previous_headings":"","what":"Geometric attributes at equidistant points within the rotor's unit circle ‚Äî generate_rotor_grids","title":"Geometric attributes at equidistant points within the rotor's unit circle ‚Äî generate_rotor_grids","text":"Generates list grids containing geometric attributes rotor disk equidistant locations, taking center rotor reference point overlaying left-half rotor disk. size grid cells determined xinc yinc, values map properties rotor cell's location.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/generate_rotor_grids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geometric attributes at equidistant points within the rotor's unit circle ‚Äî generate_rotor_grids","text":"","code":"generate_rotor_grids(yinc = 0.05, xinc = 0.05, chord_prof)"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/generate_rotor_grids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Geometric attributes at equidistant points within the rotor's unit circle ‚Äî generate_rotor_grids","text":"yinc, xinc numeric values, grid increments along y-axis x-axis (.e. grid cell dimensions) chord_prof data frame chord taper profile rotor blade. Function expects two named columns: pp_radius, equidistant intervals radius bird passage point, proportion rotor_radius, within range \\([0, 1]\\). chord, chord width pp_radius, proportion blade_width. Defaults generic profile typical modern 5MW turbine. See chord_prof_5MW() details.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/generate_rotor_grids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Geometric attributes at equidistant points within the rotor's unit circle ‚Äî generate_rotor_grids","text":"list following elements, taking center rotor origin rotor's plane: x_grid, 2D array horizontal distances rotor's horizontal axis, proportion rotor radius, grid point y_grid, 2D array vertical distances rotor's vertical axis, proportion rotor radius, grid point r_grid, 2D array radial distances rotor center, proportion rotor radius, grid point phi_grid, 2D array angles, relative vertical, grid point chord_grid, 2D array blade chord width grid point elements representative left-half rotor circle","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/generate_rotor_grids.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Geometric attributes at equidistant points within the rotor's unit circle ‚Äî generate_rotor_grids","text":"grids required alternative approach calculation probability collision extended model (.e. non-uniform flight distribution risk height). Functions xrisksum2, pcollxy pcoll used Masden & Cook implementation (PCollFunctions.r script) based Visual Basic computations available original Band worksheet. Visual Basic code devised deterministic context, .e. one single set collision calculations one given species turbine scenario. However, stochastic context, potentially thousands collision calculations performed per species turbine scenario, became clear xrisksum2 associated functions highly inefficient task hand. alternative approach streamlines computations calculating (relative) rotor geometric attributes outside stochastic sampling loop, remain constant iterations. elements, calculated via generate_rotor_grids, applied sampled parameters via vectorized operations. number calculations per iteration thence substantially reduced, leading significant gains computational speed - 30x faster Masden's implementation 1000 iterations run.","code":""},{"path":[]},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/generate_rotor_grids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Geometric attributes at equidistant points within the rotor's unit circle ‚Äî generate_rotor_grids","text":"","code":"rotor_grids <- generate_rotor_grids(yinc = 0.05, xinc = 0.05, chord_prof_5MW)"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/generic_fhd_bootstraps.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrap samples of generic FHDs of 25 seabird species ‚Äî generic_fhd_bootstraps","title":"Bootstrap samples of generic FHDs of 25 seabird species ‚Äî generic_fhd_bootstraps","text":"list object comprising bootstrap samples generic flight height distribution (FHD) 25 seabird species. FHD expressed proportion bird flights 1 metre height intervals.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/generic_fhd_bootstraps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootstrap samples of generic FHDs of 25 seabird species ‚Äî generic_fhd_bootstraps","text":"","code":"generic_fhd_bootstraps"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/generic_fhd_bootstraps.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Bootstrap samples of generic FHDs of 25 seabird species ‚Äî generic_fhd_bootstraps","text":"list object 25 elements, one species, containing data frame 500 bootstrap samples distribution bird flights height. nested data frame contains: height Height sea level, metres. First element represents 0-1 meters height band, height interval 1 metre. bootId_1 First bootstrap sample proportion birds flights within height interval bootId_200 200th bootstrap sample proportion birds flights within height interval","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/generic_fhd_bootstraps.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Bootstrap samples of generic FHDs of 25 seabird species ‚Äî generic_fhd_bootstraps","text":"https://besjournals.onlinelibrary.wiley.com/doi/full/10.1111/1365-2664.12191","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_avg_prob_collision.html","id":null,"dir":"Reference","previous_headings":"","what":"Average single transit collision risk with no avoidance ‚Äî get_avg_prob_collision","title":"Average single transit collision risk with no avoidance ‚Äî get_avg_prob_collision","text":"Calculate average probability collision single bird transit point across rotor, assuming avoidance action. Required Basic model calculations, flights collision risk height assumed uniformly distributed.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_avg_prob_collision.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Average single transit collision risk with no avoidance ‚Äî get_avg_prob_collision","text":"","code":"get_avg_prob_collision(   flight_speed,   body_lt,   wing_span,   prop_upwind = 0.5,   flap_glide,   rotor_speed,   rotor_radius,   blade_width,   blade_pitch,   n_blades,   chord_prof = chord_prof_5MW )"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_avg_prob_collision.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Average single transit collision risk with no avoidance ‚Äî get_avg_prob_collision","text":"flight_speed Numeric value. bird flying speed (\\(v\\)), metres/sec. body_lt Numeric value. length bird (\\(L\\)), metres. wing_span Numeric value. wingspan bird (\\(W\\)), metres. prop_upwind Numeric value 0-1 giving proportion flights upwind - defaults 0.5. flap_glide Numeric value representing correction flapping gliding birds (\\(F\\)). rotor_speed Numeric value. operational rotation speed, revolutions/min. rotor_radius Numeric value. radius rotor (\\(R\\)), metres. blade_width Numeric value, giving maximum blade width, metres. blade_pitch Numeric value. average blade pitch angle, angle blade surface rotor plane (\\(\\gamma\\)), radians. n_blades integer, number blades rotor (\\(b\\)). chord_prof data frame chord taper profile rotor blade. Function expects two named columns: pp_radius, equidistant intervals radius bird passage point, proportion rotor_radius, within range \\([0, 1]\\). chord, chord width pp_radius, proportion blade_width. Defaults generic profile typical modern 5MW turbine. See chord_prof_5MW() details.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_avg_prob_collision.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Average single transit collision risk with no avoidance ‚Äî get_avg_prob_collision","text":"numeric value. average collision probability (risk) bird flying point rotor circle area.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_avg_prob_collision.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Average single transit collision risk with no avoidance ‚Äî get_avg_prob_collision","text":"Methodology assumptions underpinning get_avg_prob_collision described \"Stage C\" Band (2012).","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_avg_prob_collision.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Average single transit collision risk with no avoidance ‚Äî get_avg_prob_collision","text":"","code":"get_avg_prob_collision(            flight_speed = 13.1,            body_lt = 0.85,            wing_span = 1.01,            prop_upwind = 0.5,            flap_glide = 1,            rotor_speed = 15,            rotor_radius = 120,            blade_width = 5,            blade_pitch = 15,            n_blades = 3,            chord_prof = chord_prof_5MW            ) #> [1] 0.1494609"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_collisions_basic.html","id":null,"dir":"Reference","previous_headings":"","what":"Get expected collisions based on the basic model ‚Äî get_collisions_basic","title":"Get expected collisions based on the basic model ‚Äî get_collisions_basic","text":"Provides number collisions expected occur month. basic model assumes uniform distribution bird flights risk height (.e. min max rotor height).","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_collisions_basic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get expected collisions based on the basic model ‚Äî get_collisions_basic","text":"","code":"get_collisions_basic(   n_transits,   avg_prob_coll,   mth_prop_oper,   avoidance_rate,   lac_factor = 1 )"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_collisions_basic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get expected collisions based on the basic model ‚Äî get_collisions_basic","text":"n_transits numeric vector, estimated number bird flights crossing rotors wind farm time period. avg_prob_coll numeric value, average probability collision single bird transit rotor, assuming avoidance action (\\(p_{average}\\)). mth_prop_oper numeric vector, proportion time turbines operational per month. avoidance_rate numeric value within interval \\([0, 1]\\). avoidance rate, expressing probability bird flying collision course turbine take evading action avoid collision. lac_factor numerical value, large array correction factor. Defaults 1, meaning large array correction applicable.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_collisions_basic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get expected collisions based on the basic model ‚Äî get_collisions_basic","text":"numeric vector. expected number collisions time periods","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_collisions_basic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get expected collisions based on the basic model ‚Äî get_collisions_basic","text":"","code":"turb_oper <- data.frame(  month = month.abb,  prop_oper = runif(12,0.5,0.8)  )  mth_oper_month <- turb_oper$prop_oper   flux_factor <- get_flux_factor(    n_turbines = 100,    rotor_radius = 120,    flight_speed = 13.1,    bird_dens = c(1.19,0.85,1.05,1.45,1.41,1.45,1.12,1.45,0.93,0.902,1.06,1.23),    daynight_hrs = DayLength(52),    noct_activity = 0.5  )   prop_crh_surv <- 0.13   n_transits_opt1 <- flux_factor * prop_crh_surv   get_collisions_basic(    n_transits = n_transits_opt1,    avg_prob_coll = 0.1494609,    mth_prop_oper = mth_oper_month,    avoidance_rate = 0.989,    lac_factor = 0.9998287  ) #>  [1]  64.88081  54.48581  55.79688 103.38823  86.63374 110.44450  95.94105 #>  [8]  98.61314  54.42336  51.65677  73.41310  86.68628"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_collisions_extended.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of collisions based on the extended model ‚Äî get_collisions_extended","title":"Number of collisions based on the extended model ‚Äî get_collisions_extended","text":"Calculates expected number collisions extended model, .e. taking account distribution bird flight heights risk height (minimum  maximum height rotor blade)","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_collisions_extended.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of collisions based on the extended model ‚Äî get_collisions_extended","text":"","code":"get_collisions_extended(   rotor_grids,   d_y,   rotor_radius,   blade_width,   rotor_speed,   blade_pitch,   flight_type,   wing_span,   flight_speed,   body_lt,   n_blades,   prop_upwind,   avoidance_rate,   flux_factor,   mth_prop_oper,   lac_factor )"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_collisions_extended.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of collisions based on the extended model ‚Äî get_collisions_extended","text":"rotor_grids list object containing geometric attributes rotor equidistant points within unit circle. object built via function generate_rotor_grids(). d_y vector proportion birds height bands within rotor disc rotor_radius Numeric value. radius rotor (\\(R\\)), metres. blade_width Numeric value, giving maximum blade width, metres. rotor_speed Numeric value. operational rotation speed, revolutions/min. blade_pitch Numeric value. average blade pitch angle, angle blade surface rotor plane (\\(\\gamma\\)), radians. flight_type character string, either 'flapping' 'gliding', indicating species' characteristic flight type. wing_span Numeric value. wingspan bird (\\(W\\)), metres. flight_speed Numeric value. bird flying speed (\\(v\\)), metres/sec. body_lt Numeric value. length bird (\\(L\\)), metres. n_blades integer, number blades rotor (\\(b\\)). prop_upwind Numeric value 0-1 giving proportion flights upwind - defaults 0.5. avoidance_rate numeric value within interval \\([0, 1]\\). avoidance rate, expressing probability bird flying collision course turbine take evading action avoid collision. flux_factor vector containing flux factor month mth_prop_oper numeric vector, proportion time turbines operational per month. lac_factor numerical value, large array correction factor. Defaults 1, meaning large array correction applicable.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_collisions_extended.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of collisions based on the extended model ‚Äî get_collisions_extended","text":"Numeric vector expected number collisions per month based extended model","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_collisions_extended.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Number of collisions based on the extended model ‚Äî get_collisions_extended","text":"original Masden code extendend model (Option 3) included calculation \"Flux Integral\" \"Average collision risk single rotor transit\". quantities required calculation collisions extended model, used anywhere else package. Therefore, calculations dropped current implementation keep computations minimum required.","code":""},{"path":[]},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_collisions_extended.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Number of collisions based on the extended model ‚Äî get_collisions_extended","text":"","code":"rotor_grids <- generate_rotor_grids(yinc = 0.05, xinc = 0.05, chord_prof_5MW)   gen_fhd_dat <- Johnston_Flight_heights_SOSS %>%       dplyr::filter(variable==\"Gannet.est\") %>%       dplyr::select(height,prop)   gen_fhd <- gen_fhd_dat$prop   gen_fhd_at_rotor <-     get_fhd_rotor(       hub_height = 150,       fhd = gen_fhd,       rotor_radius = 120,       tidal_offset = 2.5,       yinc = 0.05)    flux_fct <- get_flux_factor(       n_turbines = 100,       rotor_radius = 120,       flight_speed = 13.1,       bird_dens = c(1.19,0.85,1.05,1.45,1.41,1.45,1.12,1.45,0.93,0.902,1.06,1.23),       daynight_hrs = DayLength(52),       noct_activity = 0.5       )  turb_oper <- data.frame(    month = month.abb,    prop_oper = runif(12,0.5,0.8)    ) turb_oper_month <- turb_oper$prop_oper  get_collisions_extended(   rotor_grids = rotor_grids,   d_y = gen_fhd_at_rotor, # ... with generic FHD = Option 3, with site FHD = Option 4   rotor_radius = 120,   blade_width = 5,   rotor_speed = 15,   blade_pitch = 15,   flight_type = \"flapping\",   wing_span = 1.01,   flight_speed = 13.1,   body_lt = 0.85,   n_blades = 3,   prop_upwind = 0.5,   avoidance_rate = 0.981,   flux_factor = flux_fct,   mth_prop_oper = turb_oper_month,   lac_factor = 0.9998299   ) #>  [1]  6.556811  5.909395  8.488711 10.804130 13.305740 10.001057  8.072095 #>  [8] 13.554305  6.913372  6.161814  6.338777  8.553173"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_fhd_rotor.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the proportion of birds at height bands along the rotor ‚Äî get_fhd_rotor","title":"Returns the proportion of birds at height bands along the rotor ‚Äî get_fhd_rotor","text":"Derive expected proportion bird flights equidistant height bands lowest highest points rotor. words, returns flight height distribution collision risk (\\(d(y)\\)).","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_fhd_rotor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the proportion of birds at height bands along the rotor ‚Äî get_fhd_rotor","text":"","code":"get_fhd_rotor(hub_height, fhd, rotor_radius, tidal_offset, yinc = 0.05)"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_fhd_rotor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the proportion of birds at height bands along the rotor ‚Äî get_fhd_rotor","text":"hub_height numeric value, height rotor hub (\\(H\\)), given sum rotor radius minimum blade clearance highest astronomical tide (HAT), metres. fhd numeric vector, proportion bird flights per-1 metre height bands sea surface, starting 0-1 metre band. rotor_radius numeric value, radius rotor (\\(R\\)), metres. tidal_offset numeric value, tidal offset, difference HAT mean sea level, metres. yinc numeric value, increment height bands lowest highest points rotor, expressed proportion rotor radius (defaults 0.05).","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_fhd_rotor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the proportion of birds at height bands along the rotor ‚Äî get_fhd_rotor","text":"numeric vector, flight height distribution collision risk, .e. minimum maximum rotor height.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_fhd_rotor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns the proportion of birds at height bands along the rotor ‚Äî get_fhd_rotor","text":"","code":"gen_fhd_dat <- Johnston_Flight_heights_SOSS %>%        dplyr::filter(variable==\"Gannet.est\") %>%        dplyr::select(height,prop)  if(is.data.frame(gen_fhd_dat)) gen_fhd <- gen_fhd_dat$prop   get_fhd_rotor(    hub_height = 150,    fhd = gen_fhd,    rotor_radius = 120,    tidal_offset = 2.5,    yinc = 0.05) #>  [1] 4.080875e-01 2.184714e-01 1.166795e-01 6.212004e-02 3.294138e-02 #>  [6] 1.738272e-02 9.120000e-03 4.746000e-03 2.454000e-03 1.252200e-03 #> [11] 6.348000e-04 3.174000e-04 1.560000e-04 7.566000e-05 3.600000e-05 #> [16] 1.680000e-05 7.674000e-06 3.426000e-06 1.488000e-06 6.270000e-07 #> [21] 2.568000e-07 1.015200e-07 3.870000e-08 1.422000e-08 5.004000e-09 #> [26] 1.680000e-09 5.406000e-10 1.650000e-10 4.776000e-11 1.305600e-11 #> [31] 3.348000e-12 8.058000e-13 1.812000e-13 3.804000e-14 7.374000e-15 #> [36] 1.321200e-15 2.184000e-16 3.300000e-17 4.554000e-18 5.706000e-19 #> [41] 6.468000e-20"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_flux_factor.html","id":null,"dir":"Reference","previous_headings":"","what":"Flux factor ‚Äî get_flux_factor","title":"Flux factor ‚Äî get_flux_factor","text":"Returns flux factor, expressing total number bird flights rotors wind farm per month flights occurred within rotor's circle area turbines, .e. proportion risk height avoidance level taken account.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_flux_factor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flux factor ‚Äî get_flux_factor","text":"","code":"get_flux_factor(   n_turbines,   rotor_radius,   flight_speed,   bird_dens,   daynight_hrs,   noct_activity )"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_flux_factor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flux factor ‚Äî get_flux_factor","text":"n_turbines integer, number turbines wind farm (\\(T\\)). rotor_radius numeric value, radius rotor (\\(R\\)), metres. flight_speed numeric value, bird flight speed (\\(v\\)), metres/sec. bird_dens numeric vector daytime -flight bird densities (\\(D_A\\)), month, birds/km^2. daynight_hrs data frame total number daylight hours night hours wind farm site's location, month. must contain, least, following columns: Month, name month. Day, daylight duration, decimal hours. Night, night time duration, decimal hour noct_activity numeric value. nocturnal flight activity level, expressed proportion daytime activity levels (\\(f_night\\)).","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_flux_factor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flux factor ‚Äî get_flux_factor","text":"number bird flights potentially transiting rotors time period (assuming avoidance), flights occur within rotor's circular area.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_flux_factor.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Flux factor ‚Äî get_flux_factor","text":"flux factor used model calculations. Methodology assumptions underpinning get_flux_factor described \"Stage B\" Band (2012)","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_flux_factor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flux factor ‚Äî get_flux_factor","text":"","code":"get_flux_factor(       n_turbines = 100,       rotor_radius = 120,       flight_speed = 13.1,       bird_dens = c(1.19,0.85,1.05,1.45,1.41,1.45,1.12,1.45,0.93,0.902,1.06,1.23),       daynight_hrs = DayLength(52),       noct_activity = 0.5       ) #>  [1] 530055.8 358508.1 518368.7 731968.6 770303.2 785694.9 620622.8 772488.3 #>  [9] 455350.9 431349.1 464701.3 539745.3"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_lac_factor.html","id":null,"dir":"Reference","previous_headings":"","what":"Large array correction factor ‚Äî get_lac_factor","title":"Large array correction factor ‚Äî get_lac_factor","text":"correction factor large windfarms large array turbines, take account depletion bird density later rows site.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_lac_factor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Large array correction factor ‚Äî get_lac_factor","text":"","code":"get_lac_factor(   n_turbines,   rotor_radius,   avoidance_rate,   avg_prob_coll,   avg_prop_operational,   wf_width )"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_lac_factor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Large array correction factor ‚Äî get_lac_factor","text":"n_turbines Integer, number turbines wind farm (\\(T\\)). rotor_radius Numeric value, radius rotor (\\(R\\)), metres. avoidance_rate Numeric value within interval \\([0, 1]\\). species avoidance rate, expressing probability bird flying collision course turbine take evading action avoid collision. (\\(\\)). avg_prob_coll Numeric value, average probability collision single bird transit rotor, assuming avoidance action (\\(p_average\\)). avg_prop_operational Numeric value, average proportion time turbines operational year. wf_width Numeric value, approximate longitudinal width wind farm, kilometres (\\(w\\)).","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_lac_factor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Large array correction factor ‚Äî get_lac_factor","text":"large array correction factor applied","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_lac_factor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Large array correction factor ‚Äî get_lac_factor","text":"","code":"get_lac_factor(      n_turbines = 100,      rotor_radius = 120,      avoidance_rate = 0.989,      avg_prob_coll = 0.1494609,      avg_prop_operational = 0.6388292,      wf_width = 52      ) #> [1] 0.9998287"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_mig_flux_factor.html","id":null,"dir":"Reference","previous_headings":"","what":"Migration Flux factor ‚Äî get_mig_flux_factor","title":"Migration Flux factor ‚Äî get_mig_flux_factor","text":"Returns migratory flux factor, expressing total number bird flights rotors wind farm per month, flights occur within rotor's circle area turbines, assuming birds take avoiding action.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_mig_flux_factor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Migration Flux factor ‚Äî get_mig_flux_factor","text":"","code":"get_mig_flux_factor(n_turbines, rotor_radius, wf_width, popn_est)"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_mig_flux_factor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Migration Flux factor ‚Äî get_mig_flux_factor","text":"n_turbines integer. number turbines wind farm (\\(T\\)). rotor_radius integer. radius rotor (\\(R\\)), metres wf_width integer. width (km) popn_est integer. population estimate spatial line sampling technique","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_mig_flux_factor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Migration Flux factor ‚Äî get_mig_flux_factor","text":"number bird flights potentially transiting rotors time period (assuming avoidance), flights occur within rotor's circular area","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_mig_flux_factor.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Migration Flux factor ‚Äî get_mig_flux_factor","text":"flux factor used model calculations. Methodology assumptions underpinning get_mig_flux_factor described \"Stage B\" Band (2012)","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_mig_flux_factor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Migration Flux factor ‚Äî get_mig_flux_factor","text":"","code":"get_mig_flux_factor(      n_turbines = 100,      rotor_radius = 120,      wf_width = 51,      popn_est = 10000 ) #> [1] 3695.991"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_pcoll_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Grid of probabilities of single transit collision at points in rotor circle ‚Äî get_pcoll_grid","title":"Grid of probabilities of single transit collision at points in rotor circle ‚Äî get_pcoll_grid","text":"Calculates single transit collision risk grid points (X, Y) inside left-half rotor circle, given flight direction (upwind downwind), assuming avoidance action. origin (X, Y) coordinates rotor center","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_pcoll_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grid of probabilities of single transit collision at points in rotor circle ‚Äî get_pcoll_grid","text":"","code":"get_pcoll_grid(   rotor_grids,   direction,   rotor_radius,   blade_width,   rotor_speed,   blade_pitch,   flight_type,   n_blades,   flight_speed,   wing_span,   body_lt )"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_pcoll_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grid of probabilities of single transit collision at points in rotor circle ‚Äî get_pcoll_grid","text":"rotor_grids list object containing geometric attributes rotor equidistant points within unit circle. object built via function generate_rotor_grids(). direction integer, indicating flight direction: 1 upwind; -1 downwind. rotor_radius Numeric value. radius rotor (\\(R\\)), metres. blade_width Numeric value, giving maximum blade width, metres. rotor_speed Numeric value. operational rotation speed, revolutions/min. blade_pitch Numeric value. average blade pitch angle, angle blade surface rotor plane (\\(\\gamma\\)), radians. flight_type character string, either 'flapping' 'gliding', indicating species' characteristic flight type. n_blades integer, number blades rotor (\\(b\\)). flight_speed Numeric value. bird flying speed (\\(v\\)), metres/sec. wing_span Numeric value. wingspan bird (\\(W\\)), metres. body_lt Numeric value. length bird (\\(L\\)), metres.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_pcoll_grid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Grid of probabilities of single transit collision at points in rotor circle ‚Äî get_pcoll_grid","text":"Methodology assumptions underpinning get_pcoll_grid described section \"Extended Approach Taking Account Flight Heights\" Band (2012). Note collision risk calculations based equation (3) \"Stage C\" section, using (X, Y) coordinates reference transit points instead equivalent (r, phi) coordinates.","code":""},{"path":[]},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_pcoll_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Grid of probabilities of single transit collision at points in rotor circle ‚Äî get_pcoll_grid","text":"","code":"rotor_grids <- generate_rotor_grids(yinc = 0.05, xinc = 0.05, chord_prof_5MW)    get_pcoll_grid(     rotor_grids = rotor_grids,     direction = 1,     rotor_radius = 120,     blade_width = 5,     rotor_speed = 15,     blade_pitch = 15,     flight_type = \"flapping\",     n_blades = 3,     flight_speed = 13.1,     wing_span = 1.01,     body_lt = 0.85) #>             [,1]       [,2]       [,3]       [,4]       [,5]       [,6] #>  [1,] 0.04866412         NA         NA         NA         NA         NA #>  [2,] 0.08952224 0.08845290 0.08525201 0.07994061 0.07255312 0.06313622 #>  [3,] 0.09947161 0.09919728 0.09837615 0.09701378 0.09511924 0.09270487 #>  [4,] 0.11096121 0.11062615 0.10962345 0.10796045 0.10564912 0.10270571 #>  [5,] 0.11724040 0.11704657 0.11646643 0.11550404 0.11416607 0.11246162 #>  [6,] 0.12668401 0.12637326 0.12544353 0.12390225 0.12176163 0.11903827 #>  [7,] 0.13423551 0.13397046 0.13317732 0.13186208 0.13003472 0.12770909 #>  [8,] 0.14314586 0.14281006 0.14180530 0.14013959 0.13782636 0.13488438 #>  [9,] 0.15167975 0.15133351 0.15029709 0.14857766 0.14618776 0.14314586 #> [10,] 0.15973451 0.15938135 0.15832309 0.15656413 0.15411369 0.15098765 #> [11,] 0.16560718 0.16533047 0.16449766 0.16310249 0.16113972 0.15832309 #> [12,] 0.17071654 0.17045781 0.16967283 0.16833969 0.16643411 0.16394052 #> [13,] 0.17477635 0.17456159 0.17389488 0.17272016 0.17097366 0.16860849 #> [14,] 0.18019619 0.17988207 0.17888884 0.17709524 0.17456159 0.17247714 #> [15,] 0.18172140 0.18171552 0.18156066 0.18093833 0.17922782 0.17595458 #> [16,] 0.17436118 0.17528390 0.17768346 0.18074417 0.18146894 0.17988207 #> [17,] 0.15482433 0.15754598 0.16472217 0.17436118 0.17963738 0.18146894 #> [18,] 0.12381116 0.12953693 0.14365920 0.16008846 0.17436118 0.18074417 #> [19,] 0.07632676 0.09001476 0.11720842 0.14365920 0.16472217 0.17768346 #> [20,] 0.16514020 0.07765600 0.09001476 0.12953693 0.15754598 0.17528390 #> [21,] 1.00000000 0.16514020 0.07632676 0.12381116 0.15482433 0.17436118 #> [22,] 0.16514020 0.07765600 0.09001476 0.12953693 0.15754598 0.17528390 #> [23,] 0.07632676 0.09001476 0.11720842 0.14365920 0.16472217 0.17768346 #> [24,] 0.12381116 0.12953693 0.14365920 0.16008846 0.17436118 0.18074417 #> [25,] 0.15482433 0.15754598 0.16472217 0.17436118 0.17963738 0.18146894 #> [26,] 0.17436118 0.17528390 0.17768346 0.18074417 0.18146894 0.17988207 #> [27,] 0.18172140 0.18171552 0.18156066 0.18093833 0.17922782 0.17595458 #> [28,] 0.18019619 0.17988207 0.17888884 0.17709524 0.17456159 0.17247714 #> [29,] 0.17477635 0.17456159 0.17389488 0.17272016 0.17097366 0.16860849 #> [30,] 0.17071654 0.17045781 0.16967283 0.16833969 0.16643411 0.16394052 #> [31,] 0.16560718 0.16533047 0.16449766 0.16310249 0.16113972 0.15832309 #> [32,] 0.15973451 0.15938135 0.15832309 0.15656413 0.15411369 0.15098765 #> [33,] 0.15167975 0.15133351 0.15029709 0.14857766 0.14618776 0.14314586 #> [34,] 0.14314586 0.14281006 0.14180530 0.14013959 0.13782636 0.13488438 #> [35,] 0.13423551 0.13397046 0.13317732 0.13186208 0.13003472 0.12770909 #> [36,] 0.12668401 0.12637326 0.12544353 0.12390225 0.12176163 0.11903827 #> [37,] 0.11724040 0.11704657 0.11646643 0.11550404 0.11416607 0.11246162 #> [38,] 0.11096121 0.11062615 0.10962345 0.10796045 0.10564912 0.10270571 #> [39,] 0.09947161 0.09919728 0.09837615 0.09701378 0.09511924 0.09270487 #> [40,] 0.08952224 0.08845290 0.08525201 0.07994061 0.07255312 0.06313622 #> [41,] 0.04866412         NA         NA         NA         NA         NA #>             [,7]       [,8]       [,9]      [,10]      [,11]      [,12] #>  [1,]         NA         NA         NA         NA         NA         NA #>  [2,] 0.05174757 0.04866412         NA         NA         NA         NA #>  [3,] 0.08978589 0.07676768 0.06105577 0.04866412         NA         NA #>  [4,] 0.09919728 0.09565903 0.09163941 0.07994061 0.06001719 0.04866412 #>  [5,] 0.10995727 0.10564912 0.10076073 0.09592938 0.09084334 0.07255312 #>  [6,] 0.11627350 0.11378577 0.11096121 0.10532051 0.09919728 0.09350701 #>  [7,] 0.12451753 0.12054728 0.11646643 0.11321698 0.10862443 0.10173151 #>  [8,] 0.13186208 0.12848134 0.12420969 0.11903827 0.11473816 0.11062615 #>  [9,] 0.13947643 0.13520948 0.13107693 0.12668401 0.12085026 0.11550404 #> [10,] 0.14720948 0.14281006 0.13782636 0.13265022 0.12770909 0.12145744 #> [11,] 0.15446280 0.14995241 0.14483146 0.13914552 0.13317732 0.12770909 #> [12,] 0.16085879 0.15656413 0.15133351 0.14550875 0.13914552 0.13265022 #> [13,] 0.16560718 0.16198185 0.15726693 0.15133351 0.14483146 0.13782636 #> [14,] 0.16967283 0.16615904 0.16198185 0.15656413 0.14995241 0.14281006 #> [15,] 0.17296068 0.16967283 0.16560718 0.16085879 0.15446280 0.14720948 #> [16,] 0.17595458 0.17247714 0.16860849 0.16394052 0.15832309 0.15098765 #> [17,] 0.17922782 0.17456159 0.17097366 0.16643411 0.16113972 0.15411369 #> [18,] 0.18093833 0.17709524 0.17272016 0.16833969 0.16310249 0.15656413 #> [19,] 0.18156066 0.17888884 0.17389488 0.16967283 0.16449766 0.15832309 #> [20,] 0.18171552 0.17988207 0.17456159 0.17045781 0.16533047 0.15938135 #> [21,] 0.18172140 0.18019619 0.17477635 0.17071654 0.16560718 0.15973451 #> [22,] 0.18171552 0.17988207 0.17456159 0.17045781 0.16533047 0.15938135 #> [23,] 0.18156066 0.17888884 0.17389488 0.16967283 0.16449766 0.15832309 #> [24,] 0.18093833 0.17709524 0.17272016 0.16833969 0.16310249 0.15656413 #> [25,] 0.17922782 0.17456159 0.17097366 0.16643411 0.16113972 0.15411369 #> [26,] 0.17595458 0.17247714 0.16860849 0.16394052 0.15832309 0.15098765 #> [27,] 0.17296068 0.16967283 0.16560718 0.16085879 0.15446280 0.14720948 #> [28,] 0.16967283 0.16615904 0.16198185 0.15656413 0.14995241 0.14281006 #> [29,] 0.16560718 0.16198185 0.15726693 0.15133351 0.14483146 0.13782636 #> [30,] 0.16085879 0.15656413 0.15133351 0.14550875 0.13914552 0.13265022 #> [31,] 0.15446280 0.14995241 0.14483146 0.13914552 0.13317732 0.12770909 #> [32,] 0.14720948 0.14281006 0.13782636 0.13265022 0.12770909 0.12145744 #> [33,] 0.13947643 0.13520948 0.13107693 0.12668401 0.12085026 0.11550404 #> [34,] 0.13186208 0.12848134 0.12420969 0.11903827 0.11473816 0.11062615 #> [35,] 0.12451753 0.12054728 0.11646643 0.11321698 0.10862443 0.10173151 #> [36,] 0.11627350 0.11378577 0.11096121 0.10532051 0.09919728 0.09350701 #> [37,] 0.10995727 0.10564912 0.10076073 0.09592938 0.09084334 0.07255312 #> [38,] 0.09919728 0.09565903 0.09163941 0.07994061 0.06001719 0.04866412 #> [39,] 0.08978589 0.07676768 0.06105577 0.04866412         NA         NA #> [40,] 0.05174757 0.04866412         NA         NA         NA         NA #> [41,]         NA         NA         NA         NA         NA         NA #>            [,13]      [,14]      [,15]      [,16]      [,17]      [,18] #>  [1,]         NA         NA         NA         NA         NA         NA #>  [2,]         NA         NA         NA         NA         NA         NA #>  [3,]         NA         NA         NA         NA         NA         NA #>  [4,]         NA         NA         NA         NA         NA         NA #>  [5,] 0.04866412         NA         NA         NA         NA         NA #>  [6,] 0.08100056 0.05484060 0.04866412         NA         NA         NA #>  [7,] 0.09511924 0.08525201 0.05690799 0.04866412         NA         NA #>  [8,] 0.10303121 0.09565903 0.08525201 0.05484060 0.04866412         NA #>  [9,] 0.11114801 0.10303121 0.09511924 0.08100056 0.04866412 0.04866412 #> [10,] 0.11550404 0.11062615 0.10173151 0.09350701 0.07255312 0.04866412 #> [11,] 0.12085026 0.11473816 0.10862443 0.09919728 0.09084334 0.06001719 #> [12,] 0.12668401 0.11903827 0.11321698 0.10532051 0.09592938 0.07994061 #> [13,] 0.13107693 0.12420969 0.11646643 0.11096121 0.10076073 0.09163941 #> [14,] 0.13520948 0.12848134 0.12054728 0.11378577 0.10564912 0.09565903 #> [15,] 0.13947643 0.13186208 0.12451753 0.11627350 0.10995727 0.09919728 #> [16,] 0.14314586 0.13488438 0.12770909 0.11903827 0.11246162 0.10270571 #> [17,] 0.14618776 0.13782636 0.13003472 0.12176163 0.11416607 0.10564912 #> [18,] 0.14857766 0.14013959 0.13186208 0.12390225 0.11550404 0.10796045 #> [19,] 0.15029709 0.14180530 0.13317732 0.12544353 0.11646643 0.10962345 #> [20,] 0.15133351 0.14281006 0.13397046 0.12637326 0.11704657 0.11062615 #> [21,] 0.15167975 0.14314586 0.13423551 0.12668401 0.11724040 0.11096121 #> [22,] 0.15133351 0.14281006 0.13397046 0.12637326 0.11704657 0.11062615 #> [23,] 0.15029709 0.14180530 0.13317732 0.12544353 0.11646643 0.10962345 #> [24,] 0.14857766 0.14013959 0.13186208 0.12390225 0.11550404 0.10796045 #> [25,] 0.14618776 0.13782636 0.13003472 0.12176163 0.11416607 0.10564912 #> [26,] 0.14314586 0.13488438 0.12770909 0.11903827 0.11246162 0.10270571 #> [27,] 0.13947643 0.13186208 0.12451753 0.11627350 0.10995727 0.09919728 #> [28,] 0.13520948 0.12848134 0.12054728 0.11378577 0.10564912 0.09565903 #> [29,] 0.13107693 0.12420969 0.11646643 0.11096121 0.10076073 0.09163941 #> [30,] 0.12668401 0.11903827 0.11321698 0.10532051 0.09592938 0.07994061 #> [31,] 0.12085026 0.11473816 0.10862443 0.09919728 0.09084334 0.06001719 #> [32,] 0.11550404 0.11062615 0.10173151 0.09350701 0.07255312 0.04866412 #> [33,] 0.11114801 0.10303121 0.09511924 0.08100056 0.04866412         NA #> [34,] 0.10303121 0.09565903 0.08525201 0.05484060 0.04866412         NA #> [35,] 0.09511924 0.08525201 0.05690799 0.04866412         NA         NA #> [36,] 0.08100056 0.05484060 0.04866412         NA         NA         NA #> [37,] 0.04866412         NA         NA         NA         NA         NA #> [38,]         NA         NA         NA         NA         NA         NA #> [39,]         NA         NA         NA         NA         NA         NA #> [40,]         NA         NA         NA         NA         NA         NA #> [41,]         NA         NA         NA         NA         NA         NA #>            [,19]      [,20]      [,21] #>  [1,]         NA         NA         NA #>  [2,]         NA         NA         NA #>  [3,]         NA         NA         NA #>  [4,]         NA         NA         NA #>  [5,]         NA         NA         NA #>  [6,]         NA         NA         NA #>  [7,]         NA         NA         NA #>  [8,]         NA         NA         NA #>  [9,]         NA         NA         NA #> [10,]         NA         NA         NA #> [11,] 0.04866412         NA         NA #> [12,] 0.04866412         NA         NA #> [13,] 0.06105577 0.04866412         NA #> [14,] 0.07676768 0.04866412         NA #> [15,] 0.08978589 0.05174757 0.04866412 #> [16,] 0.09270487 0.06313622 0.04866412 #> [17,] 0.09511924 0.07255312 0.04866412 #> [18,] 0.09701378 0.07994061 0.04866412 #> [19,] 0.09837615 0.08525201 0.04866412 #> [20,] 0.09919728 0.08845290 0.04866412 #> [21,] 0.09947161 0.08952224 0.04866412 #> [22,] 0.09919728 0.08845290 0.04866412 #> [23,] 0.09837615 0.08525201 0.04866412 #> [24,] 0.09701378 0.07994061 0.04866412 #> [25,] 0.09511924 0.07255312 0.04866412 #> [26,] 0.09270487 0.06313622 0.04866412 #> [27,] 0.08978589 0.05174757 0.04866412 #> [28,] 0.07676768 0.04866412         NA #> [29,] 0.06105577 0.04866412         NA #> [30,] 0.04866412         NA         NA #> [31,] 0.04866412         NA         NA #> [32,]         NA         NA         NA #> [33,]         NA         NA         NA #> [34,]         NA         NA         NA #> [35,]         NA         NA         NA #> [36,]         NA         NA         NA #> [37,]         NA         NA         NA #> [38,]         NA         NA         NA #> [39,]         NA         NA         NA #> [40,]         NA         NA         NA #> [41,]         NA         NA         NA"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_phi_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Grid with angles between points \\((x, y)\\) and the rotor's vertical axis ‚Äî get_phi_grid","title":"Grid with angles between points \\((x, y)\\) and the rotor's vertical axis ‚Äî get_phi_grid","text":"Given grids vertical horizontal distances rotor axes points \\((x, y)\\) inside rotor circle, get_phi_grid calculates associated radial angles, relative rotor vertical axis. Returned grid represents left-half rotor's circle.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_phi_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grid with angles between points \\((x, y)\\) and the rotor's vertical axis ‚Äî get_phi_grid","text":"","code":"get_phi_grid(x_grid, y_grid)"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_phi_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grid with angles between points \\((x, y)\\) and the rotor's vertical axis ‚Äî get_phi_grid","text":"x_grid 2D array, horizontal distances \\(x\\) rotor's vertical axis, expressed proportion rotor radius, left-half rotor circle area. y_grid 2D array, vertical distances (\\(y\\) rotor's horizontal axis, expressed proportion rotor radius, left-half rotor circle area.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_phi_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Grid with angles between points \\((x, y)\\) and the rotor's vertical axis ‚Äî get_phi_grid","text":"2D array, giving grid angles (radians) points \\((x, y)\\) inside rotor circle rotor center, left-half rotor circle area.","code":""},{"path":[]},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_phi_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Grid with angles between points \\((x, y)\\) and the rotor's vertical axis ‚Äî get_phi_grid","text":"","code":"x_grid <- get_x_grid(yinc=0.05, xinc=0.05)  y_grid <- get_y_grid(x_grid,yinc=0.05)  get_phi_grid(x_grid,y_grid) #>           [,1]       [,2]      [,3]      [,4]      [,5]      [,6]      [,7] #>  [1,] 3.141593         NA        NA        NA        NA        NA        NA #>  [2,] 3.141593 3.08900959 3.0367157 2.9849908 2.9340964 2.8842689 2.8357138 #>  [3,] 3.141593 3.08609415 3.0309354 2.9764440 2.9229237 2.8706458 2.8198421 #>  [4,] 3.141593 3.08283683 3.0244839 2.9669205 2.9105020 2.8555412 2.8023000 #>  [5,] 3.141593 3.07917384 3.0172377 2.9562447 2.8966140 2.8387078 2.7828220 #>  [6,] 3.141593 3.07502449 3.0090411 2.9441971 2.8809903 2.8198421 2.7610863 #>  [7,] 3.141593 3.07028519 2.9996956 2.9304993 2.8632930 2.7985687 2.7367009 #>  [8,] 3.141593 3.06482076 2.9889433 2.9147938 2.8430937 2.7744188 2.7091849 #>  [9,] 3.141593 3.05845142 2.9764440 2.8966140 2.8198421 2.7468015 2.6779450 #> [10,] 3.141593 3.05093277 2.9617392 2.8753406 2.7928217 2.7149652 2.6422459 #> [11,] 3.141593 3.04192400 2.9441971 2.8501359 2.7610863 2.6779450 2.6011732 #> [12,] 3.141593 3.03093543 2.9229237 2.8198421 2.7233683 2.6344941 2.5535901 #> [13,] 3.141593 3.01723766 2.8966140 2.7828220 2.6779450 2.5829933 2.4980915 #> [14,] 3.141593 2.99969560 2.8632930 2.7367009 2.6224465 2.5213432 2.4329664 #> [15,] 3.141593 2.97644398 2.8198421 2.6779450 2.5535901 2.4468544 2.3561945 #> [16,] 3.141593 2.94419709 2.7610863 2.6011732 2.4668517 2.3561945 2.2655346 #> [17,] 3.141593 2.89661399 2.6779450 2.4980915 2.3561945 2.2455373 2.1587989 #> [18,] 3.141593 2.81984210 2.5535901 2.3561945 2.2142974 2.1112158 2.0344439 #> [19,] 3.141593 2.67794504 2.3561945 2.1587989 2.0344439 1.9513027 1.8925469 #> [20,] 3.141593 2.35619449 2.0344439 1.8925469 1.8157750 1.7681919 1.7359450 #> [21,]      NaN 1.57079633 1.5707963 1.5707963 1.5707963 1.5707963 1.5707963 #> [22,] 0.000000 0.78539816 1.1071487 1.2490458 1.3258177 1.3734008 1.4056476 #> [23,] 0.000000 0.46364761 0.7853982 0.9827937 1.1071487 1.1902899 1.2490458 #> [24,] 0.000000 0.32175055 0.5880026 0.7853982 0.9272952 1.0303768 1.1071487 #> [25,] 0.000000 0.24497866 0.4636476 0.6435011 0.7853982 0.8960554 0.9827937 #> [26,] 0.000000 0.19739556 0.3805064 0.5404195 0.6747409 0.7853982 0.8760581 #> [27,] 0.000000 0.16514868 0.3217506 0.4636476 0.5880026 0.6947383 0.7853982 #> [28,] 0.000000 0.14189705 0.2782997 0.4048918 0.5191461 0.6202495 0.7086263 #> [29,] 0.000000 0.12435499 0.2449787 0.3587707 0.4636476 0.5585993 0.6435011 #> [30,] 0.000000 0.11065722 0.2186689 0.3217506 0.4182243 0.5070985 0.5880026 #> [31,] 0.000000 0.09966865 0.1973956 0.2914568 0.3805064 0.4636476 0.5404195 #> [32,] 0.000000 0.09065989 0.1798535 0.2662520 0.3487710 0.4266275 0.4993467 #> [33,] 0.000000 0.08314123 0.1651487 0.2449787 0.3217506 0.3947911 0.4636476 #> [34,] 0.000000 0.07677189 0.1526493 0.2267988 0.2984989 0.3671738 0.4324078 #> [35,] 0.000000 0.07130746 0.1418971 0.2110933 0.2782997 0.3430239 0.4048918 #> [36,] 0.000000 0.06656816 0.1325515 0.1973956 0.2606024 0.3217506 0.3805064 #> [37,] 0.000000 0.06241881 0.1243550 0.1853479 0.2449787 0.3028849 0.3587707 #> [38,] 0.000000 0.05875582 0.1171087 0.1746722 0.2310907 0.2860514 0.3392926 #> [39,] 0.000000 0.05549851 0.1106572 0.1651487 0.2186689 0.2709469 0.3217506 #> [40,] 0.000000 0.05258306 0.1048769 0.1566019 0.2074962 0.2573237 0.3058789 #> [41,] 0.000000         NA        NA        NA        NA        NA        NA #>            [,8]      [,9]     [,10]     [,11]     [,12]     [,13]     [,14] #>  [1,]        NA        NA        NA        NA        NA        NA        NA #>  [2,] 2.8240322        NA        NA        NA        NA        NA        NA #>  [3,] 2.7707014 2.7233683 2.6905658        NA        NA        NA        NA #>  [4,] 2.7509856 2.7017501 2.6546934 2.6098686 2.5867816        NA        NA #>  [5,] 2.7291822 2.6779450 2.6292032 2.5829933 2.5393053 2.4980915        NA #>  [6,] 2.7049655 2.6516353 2.6011732 2.5535901 2.5088438 2.4668517 2.4275020 #>  [7,] 2.6779450 2.6224465 2.5702552 2.5213432 2.4756234 2.4329664 2.3932146 #>  [8,] 2.6476513 2.5899377 2.5360480 2.4858970 2.4393357 2.3961732 2.3561945 #>  [9,] 2.6135182 2.5535901 2.4980915 2.4468544 2.3996454 2.3561945 2.3162158 #> [10,] 2.5748634 2.5127964 2.4558631 2.4037776 2.3561945 2.3127436 2.2730533 #> [11,] 2.5308667 2.4668517 2.4087776 2.3561945 2.3086114 2.2655346 2.2264920 #> [12,] 2.4805495 2.4149503 2.3561945 2.3036114 2.2565258 2.2142974 2.1763410 #> [13,] 2.4227627 2.3561945 2.2974387 2.2455373 2.1995926 2.1587989 2.1224513 #> [14,] 2.3561945 2.2896263 2.2318395 2.1815223 2.1375255 2.0988708 2.0647377 #> [15,] 2.2794226 2.2142974 2.1587989 2.1112158 2.0701430 2.0344439 2.0032041 #> [16,] 2.1910458 2.1293956 2.0778948 2.0344439 1.9974238 1.9655874 1.9379702 #> [17,] 2.0899424 2.0344439 1.9890207 1.9513027 1.9195673 1.8925469 1.8692953 #> [18,] 1.9756881 1.9295670 1.8925469 1.8622531 1.8370484 1.8157750 1.7975952 #> [19,] 1.8490960 1.8157750 1.7894653 1.7681919 1.7506498 1.7359450 1.7234457 #> [20,] 1.7126934 1.6951513 1.6814535 1.6704650 1.6614562 1.6539376 1.6475682 #> [21,] 1.5707963 1.5707963 1.5707963 1.5707963 1.5707963 1.5707963 1.5707963 #> [22,] 1.4288993 1.4464413 1.4601391 1.4711277 1.4801364 1.4876551 1.4940244 #> [23,] 1.2924967 1.3258177 1.3521274 1.3734008 1.3909428 1.4056476 1.4181470 #> [24,] 1.1659045 1.2120257 1.2490458 1.2793395 1.3045443 1.3258177 1.3439975 #> [25,] 1.0516502 1.1071487 1.1525720 1.1902899 1.2220253 1.2490458 1.2722974 #> [26,] 0.9505468 1.0121970 1.0636978 1.1071487 1.1441688 1.1760052 1.2036225 #> [27,] 0.8621701 0.9272952 0.9827937 1.0303768 1.0714496 1.1071487 1.1383886 #> [28,] 0.7853982 0.8519663 0.9097532 0.9600704 1.0040671 1.0427219 1.0768550 #> [29,] 0.7188300 0.7853982 0.8441540 0.8960554 0.9420000 0.9827937 1.0191413 #> [30,] 0.6610432 0.7266423 0.7853982 0.8379812 0.8850668 0.9272952 0.9652517 #> [31,] 0.6107260 0.6747409 0.7328151 0.7853982 0.8329813 0.8760581 0.9151007 #> [32,] 0.5667292 0.6287963 0.6857295 0.7378151 0.7853982 0.8288491 0.8685394 #> [33,] 0.5280744 0.5880026 0.6435011 0.6947383 0.7419473 0.7853982 0.8253769 #> [34,] 0.4939414 0.5516550 0.6055447 0.6556956 0.7022569 0.7454195 0.7853982 #> [35,] 0.4636476 0.5191461 0.5713375 0.6202495 0.6659692 0.7086263 0.7483780 #> [36,] 0.4366272 0.4899573 0.5404195 0.5880026 0.6327488 0.6747409 0.7140907 #> [37,] 0.4124104 0.4636476 0.5123895 0.5585993 0.6022873 0.6435011        NA #> [38,] 0.3906070 0.4398426 0.4868992 0.5317241 0.5548110        NA        NA #> [39,] 0.3708913 0.4182243 0.4510268        NA        NA        NA        NA #> [40,] 0.3175604        NA        NA        NA        NA        NA        NA #> [41,]        NA        NA        NA        NA        NA        NA        NA #>           [,15]     [,16]     [,17]     [,18]    [,19]    [,20]    [,21] #>  [1,]        NA        NA        NA        NA       NA       NA       NA #>  [2,]        NA        NA        NA        NA       NA       NA       NA #>  [3,]        NA        NA        NA        NA       NA       NA       NA #>  [4,]        NA        NA        NA        NA       NA       NA       NA #>  [5,]        NA        NA        NA        NA       NA       NA       NA #>  [6,] 2.4188584        NA        NA        NA       NA       NA       NA #>  [7,] 2.3561945 2.3461938        NA        NA       NA       NA       NA #>  [8,] 2.3191744 2.2848870 2.2783808        NA       NA       NA       NA #>  [9,] 2.2794226 2.2455373 2.2142974 2.2142974       NA       NA       NA #> [10,] 2.2367656 2.2035452 2.1730837 2.1531606       NA       NA       NA #> [11,] 2.1910458 2.1587989 2.1293956 2.1025204 2.094395       NA       NA #> [12,] 2.1421338 2.1112158 2.0831858 2.0576956 2.037562       NA       NA #> [13,] 2.0899424 2.0607537 2.0344439 2.0106389 1.989021 1.982313       NA #> [14,] 2.0344439 2.0074235 1.9832068 1.9614034 1.941688 1.928367       NA #> [15,] 1.9756881 1.9513027 1.9295670 1.9100889 1.892547 1.876675 1.875489 #> [16,] 1.9138203 1.8925469 1.8736812 1.8568478 1.841743 1.828120 1.823477 #> [17,] 1.8490960 1.8313987 1.8157750 1.8018870 1.789465 1.778293 1.772154 #> [18,] 1.7818897 1.7681919 1.7561443 1.7454685 1.735945 1.727398 1.721365 #> [19,] 1.7126934 1.7033479 1.6951513 1.6879051 1.681454 1.675673 1.670964 #> [20,] 1.6421038 1.6373645 1.6332151 1.6295521 1.626295 1.623379 1.620817 #> [21,] 1.5707963 1.5707963 1.5707963 1.5707963 1.570796 1.570796 1.570796 #> [22,] 1.4994889 1.5042282 1.5083775 1.5120405 1.515298 1.518213 1.520775 #> [23,] 1.4288993 1.4382448 1.4464413 1.4536876 1.460139 1.465919 1.470629 #> [24,] 1.3597030 1.3734008 1.3854484 1.3961241 1.405648 1.414194 1.420228 #> [25,] 1.2924967 1.3101939 1.3258177 1.3397057 1.352127 1.363300 1.369438 #> [26,] 1.2277724 1.2490458 1.2679115 1.2847449 1.299849 1.313473 1.318116 #> [27,] 1.1659045 1.1902899 1.2120257 1.2315037 1.249046 1.264917 1.266104 #> [28,] 1.1071487 1.1341692 1.1583859 1.1801893 1.199905 1.213225       NA #> [29,] 1.0516502 1.0808390 1.1071487 1.1309537 1.152572 1.159279       NA #> [30,] 0.9994588 1.0303768 1.0584069 1.0838971 1.104031       NA       NA #> [31,] 0.9505468 0.9827937 1.0121970 1.0390723 1.047198       NA       NA #> [32,] 0.9048271 0.9380475 0.9685090 0.9884321       NA       NA       NA #> [33,] 0.8621701 0.8960554 0.9272952        NA       NA       NA       NA #> [34,] 0.8224183 0.8567056 0.8632119        NA       NA       NA       NA #> [35,] 0.7853982 0.7953988        NA        NA       NA       NA       NA #> [36,] 0.7227342        NA        NA        NA       NA       NA       NA #> [37,]        NA        NA        NA        NA       NA       NA       NA #> [38,]        NA        NA        NA        NA       NA       NA       NA #> [39,]        NA        NA        NA        NA       NA       NA       NA #> [40,]        NA        NA        NA        NA       NA       NA       NA #> [41,]        NA        NA        NA        NA       NA       NA       NA"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_prop_crh_fhd.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the total proportion of bird flights at collision risk based\non a flight height distribution ‚Äî get_prop_crh_fhd","title":"Calculate the total proportion of bird flights at collision risk based\non a flight height distribution ‚Äî get_prop_crh_fhd","text":"Calculate expected proportion bird flights collision risk height (.e. rotor height, bottom top rotor) based bird's flight height distribution  (\\(Q'_{2R}\\)).","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_prop_crh_fhd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the total proportion of bird flights at collision risk based\non a flight height distribution ‚Äî get_prop_crh_fhd","text":"","code":"get_prop_crh_fhd(d_y)"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_prop_crh_fhd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the total proportion of bird flights at collision risk based\non a flight height distribution ‚Äî get_prop_crh_fhd","text":"d_y Numeric vector proportion birds height bands across rotor disc","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_prop_crh_fhd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the total proportion of bird flights at collision risk based\non a flight height distribution ‚Äî get_prop_crh_fhd","text":"total proportion birds collision risk height derived flight height distribution","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_prop_crh_fhd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the total proportion of bird flights at collision risk based\non a flight height distribution ‚Äî get_prop_crh_fhd","text":"","code":"gen_fhd_dat <- Johnston_Flight_heights_SOSS %>%       dplyr::filter(variable==\"Gannet.est\") %>%       dplyr::select(height,prop)   gen_fhd <- gen_fhd_dat$prop   d_y <-     get_fhd_rotor(       hub_height = 150,       fhd = gen_fhd,       rotor_radius = 120,       tidal_offset = 2.5,       yinc = 0.05)   prop_chr_fhd <- get_prop_crh_fhd(d_y)"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_risk_y.html","id":null,"dir":"Reference","previous_headings":"","what":"Single transit collision risk along the chord of the rotor at height band\n\\(y\\) ‚Äî get_risk_y","title":"Single transit collision risk along the chord of the rotor at height band\n\\(y\\) ‚Äî get_risk_y","text":"Calculates single transit collision risk/probability along horizontal chord rotor height \\(y\\) via numerical integration.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_risk_y.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Single transit collision risk along the chord of the rotor at height band\n\\(y\\) ‚Äî get_risk_y","text":"","code":"get_risk_y(x_at_y, pcoll_doty)"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_risk_y.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Single transit collision risk along the chord of the rotor at height band\n\\(y\\) ‚Äî get_risk_y","text":"x_at_y vector, sequence horizontal distances rotor's vertical axis points \\(x\\) along half rotor circle, expressed proportion rotor radius, height band \\(y\\) pcoll_doty vector, single transit collision risk horizontal distances \\(x\\), height band \\(y\\)","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_risk_y.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Single transit collision risk along the chord of the rotor at height band\n\\(y\\) ‚Äî get_risk_y","text":"numeric value, single transit collision risk along whole horizontal chord rotor circle height band \\(y\\)","code":""},{"path":[]},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_risk_y.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Single transit collision risk along the chord of the rotor at height band\n\\(y\\) ‚Äî get_risk_y","text":"","code":"rotor_grids <- generate_rotor_grids(yinc = 0.05, xinc = 0.05, chord_prof_5MW)    y_lt <- dim(rotor_grids$r_grid)[1]    pcollxy_grid_up <- get_pcoll_grid(     rotor_grids = rotor_grids,     direction = 1,     rotor_radius = 120,     blade_width = 5,     rotor_speed = 15,     blade_pitch = 15,     flight_type = \"flapping\",     n_blades = 3,     flight_speed = 13.1,     wing_span = 1.01,     body_lt = 0.85)      risk_up <- rep(NA, y_lt)     for(i in 1:y_lt){       risk_up[i] <- get_risk_y(rotor_grids$x_grid[i, ], pcollxy_grid_up[i, ])     }"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_x_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Grid of horizontal distances from points in the rotor circle to its vertical\naxis ‚Äî get_x_grid","title":"Grid of horizontal distances from points in the rotor circle to its vertical\naxis ‚Äî get_x_grid","text":"Taking center rotor circle origin, get_x_grid generates grid containing horizontal distances \\(x\\) (xinc increments) y-axis outer edge rotor circle, equidistant height bands \\(y\\) (yinc increments) minimum maximum rotor height. Distances expressed proportion rotor radius (.e. \\(x\\) dimensionless). Returned grid represents left-half rotor's circle.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_x_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grid of horizontal distances from points in the rotor circle to its vertical\naxis ‚Äî get_x_grid","text":"","code":"get_x_grid(xinc = 0.05, yinc = 0.05)"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_x_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grid of horizontal distances from points in the rotor circle to its vertical\naxis ‚Äî get_x_grid","text":"xinc, yinc numeric values, grid increments along y-axis x-axis (.e. grid cell dimensions)","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_x_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Grid of horizontal distances from points in the rotor circle to its vertical\naxis ‚Äî get_x_grid","text":"2D array giving grid horizontal distances \\(x\\) rotor's vertical axis, expressed proportion rotor radius (.e. \\([0,   1]\\)), left-half rotor circle area.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_x_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Grid of horizontal distances from points in the rotor circle to its vertical\naxis ‚Äî get_x_grid","text":"","code":"get_x_grid(xinc=0.05,yinc=0.05) #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7]      [,8] [,9]     [,10] [,11] #>  [1,]    0   NA   NA   NA   NA   NA   NA        NA   NA        NA    NA #>  [2,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3122499   NA        NA    NA #>  [3,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4358899    NA #>  [4,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #>  [5,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #>  [6,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #>  [7,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #>  [8,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #>  [9,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [10,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [11,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [12,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [13,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [14,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [15,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [16,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [17,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [18,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [19,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [20,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [21,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [22,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [23,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [24,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [25,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [26,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [27,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [28,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [29,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [30,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [31,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [32,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [33,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [34,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [35,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [36,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [37,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [38,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4500000   0.5 #> [39,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3500000  0.4 0.4358899    NA #> [40,]    0 0.05  0.1 0.15  0.2 0.25  0.3 0.3122499   NA        NA    NA #> [41,]    0   NA   NA   NA   NA   NA   NA        NA   NA        NA    NA #>           [,12] [,13] [,14]     [,15]     [,16]     [,17]     [,18]     [,19] #>  [1,]        NA    NA    NA        NA        NA        NA        NA        NA #>  [2,]        NA    NA    NA        NA        NA        NA        NA        NA #>  [3,]        NA    NA    NA        NA        NA        NA        NA        NA #>  [4,] 0.5267827    NA    NA        NA        NA        NA        NA        NA #>  [5,] 0.5500000   0.6    NA        NA        NA        NA        NA        NA #>  [6,] 0.5500000   0.6  0.65 0.6614378        NA        NA        NA        NA #>  [7,] 0.5500000   0.6  0.65 0.7000000 0.7141428        NA        NA        NA #>  [8,] 0.5500000   0.6  0.65 0.7000000 0.7500000 0.7599342        NA        NA #>  [9,] 0.5500000   0.6  0.65 0.7000000 0.7500000 0.8000000 0.8000000        NA #> [10,] 0.5500000   0.6  0.65 0.7000000 0.7500000 0.8000000 0.8351647        NA #> [11,] 0.5500000   0.6  0.65 0.7000000 0.7500000 0.8000000 0.8500000 0.8660254 #> [12,] 0.5500000   0.6  0.65 0.7000000 0.7500000 0.8000000 0.8500000 0.8930286 #> [13,] 0.5500000   0.6  0.65 0.7000000 0.7500000 0.8000000 0.8500000 0.9000000 #> [14,] 0.5500000   0.6  0.65 0.7000000 0.7500000 0.8000000 0.8500000 0.9000000 #> [15,] 0.5500000   0.6  0.65 0.7000000 0.7500000 0.8000000 0.8500000 0.9000000 #> [16,] 0.5500000   0.6  0.65 0.7000000 0.7500000 0.8000000 0.8500000 0.9000000 #> [17,] 0.5500000   0.6  0.65 0.7000000 0.7500000 0.8000000 0.8500000 0.9000000 #> [18,] 0.5500000   0.6  0.65 0.7000000 0.7500000 0.8000000 0.8500000 0.9000000 #> [19,] 0.5500000   0.6  0.65 0.7000000 0.7500000 0.8000000 0.8500000 0.9000000 #> [20,] 0.5500000   0.6  0.65 0.7000000 0.7500000 0.8000000 0.8500000 0.9000000 #> [21,] 0.5500000   0.6  0.65 0.7000000 0.7500000 0.8000000 0.8500000 0.9000000 #> [22,] 0.5500000   0.6  0.65 0.7000000 0.7500000 0.8000000 0.8500000 0.9000000 #> [23,] 0.5500000   0.6  0.65 0.7000000 0.7500000 0.8000000 0.8500000 0.9000000 #> [24,] 0.5500000   0.6  0.65 0.7000000 0.7500000 0.8000000 0.8500000 0.9000000 #> [25,] 0.5500000   0.6  0.65 0.7000000 0.7500000 0.8000000 0.8500000 0.9000000 #> [26,] 0.5500000   0.6  0.65 0.7000000 0.7500000 0.8000000 0.8500000 0.9000000 #> [27,] 0.5500000   0.6  0.65 0.7000000 0.7500000 0.8000000 0.8500000 0.9000000 #> [28,] 0.5500000   0.6  0.65 0.7000000 0.7500000 0.8000000 0.8500000 0.9000000 #> [29,] 0.5500000   0.6  0.65 0.7000000 0.7500000 0.8000000 0.8500000 0.9000000 #> [30,] 0.5500000   0.6  0.65 0.7000000 0.7500000 0.8000000 0.8500000 0.8930286 #> [31,] 0.5500000   0.6  0.65 0.7000000 0.7500000 0.8000000 0.8500000 0.8660254 #> [32,] 0.5500000   0.6  0.65 0.7000000 0.7500000 0.8000000 0.8351647        NA #> [33,] 0.5500000   0.6  0.65 0.7000000 0.7500000 0.8000000        NA        NA #> [34,] 0.5500000   0.6  0.65 0.7000000 0.7500000 0.7599342        NA        NA #> [35,] 0.5500000   0.6  0.65 0.7000000 0.7141428        NA        NA        NA #> [36,] 0.5500000   0.6  0.65 0.6614378        NA        NA        NA        NA #> [37,] 0.5500000   0.6    NA        NA        NA        NA        NA        NA #> [38,] 0.5267827    NA    NA        NA        NA        NA        NA        NA #> [39,]        NA    NA    NA        NA        NA        NA        NA        NA #> [40,]        NA    NA    NA        NA        NA        NA        NA        NA #> [41,]        NA    NA    NA        NA        NA        NA        NA        NA #>           [,20]     [,21] #>  [1,]        NA        NA #>  [2,]        NA        NA #>  [3,]        NA        NA #>  [4,]        NA        NA #>  [5,]        NA        NA #>  [6,]        NA        NA #>  [7,]        NA        NA #>  [8,]        NA        NA #>  [9,]        NA        NA #> [10,]        NA        NA #> [11,]        NA        NA #> [12,]        NA        NA #> [13,] 0.9165151        NA #> [14,] 0.9367497        NA #> [15,] 0.9500000 0.9539392 #> [16,] 0.9500000 0.9682458 #> [17,] 0.9500000 0.9797959 #> [18,] 0.9500000 0.9886860 #> [19,] 0.9500000 0.9949874 #> [20,] 0.9500000 0.9987492 #> [21,] 0.9500000 1.0000000 #> [22,] 0.9500000 0.9987492 #> [23,] 0.9500000 0.9949874 #> [24,] 0.9500000 0.9886860 #> [25,] 0.9500000 0.9797959 #> [26,] 0.9500000 0.9682458 #> [27,] 0.9500000 0.9539392 #> [28,] 0.9367497        NA #> [29,] 0.9165151        NA #> [30,]        NA        NA #> [31,]        NA        NA #> [32,]        NA        NA #> [33,]        NA        NA #> [34,]        NA        NA #> [35,]        NA        NA #> [36,]        NA        NA #> [37,]        NA        NA #> [38,]        NA        NA #> [39,]        NA        NA #> [40,]        NA        NA #> [41,]        NA        NA"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_y_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Grid of vertical distances from points in the rotor circle to its horizontal\naxis ‚Äî get_y_grid","title":"Grid of vertical distances from points in the rotor circle to its horizontal\naxis ‚Äî get_y_grid","text":"Taking center rotor circle origin, get_y_grid generates grid vertical distances \\(y\\) (yinc increments) x-axis outer edge rotor circle, across width intervals \\(x\\) (xinc increments) center maximum rotor width. Returned grid represents left-half rotor's circle. Distances expressed proportion rotor radius (.e. \\(y\\) dimensionless).","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_y_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grid of vertical distances from points in the rotor circle to its horizontal\naxis ‚Äî get_y_grid","text":"","code":"get_y_grid(x_grid, yinc = 0.05)"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_y_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grid of vertical distances from points in the rotor circle to its horizontal\naxis ‚Äî get_y_grid","text":"x_grid 2D array, horizontal distances rotor's vertical axis, expressed proportion rotor radius, left-half rotor circle area. yinc numeric value, grid increment along y-axis","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_y_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Grid of vertical distances from points in the rotor circle to its horizontal\naxis ‚Äî get_y_grid","text":"2D array giving grid vertical distances \\(y\\) rotor's horizontal axis, expressed proportion rotor radius, left-half rotor circle area. Negative values represent distances bottom half rotor circle.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/get_y_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Grid of vertical distances from points in the rotor circle to its horizontal\naxis ‚Äî get_y_grid","text":"","code":"x_grid <- get_x_grid(yinc=0.05, xinc=0.05)  get_y_grid(x_grid,yinc=0.05) #>        [,1]  [,2]  [,3]  [,4]  [,5]  [,6]  [,7]  [,8]  [,9] [,10] [,11] [,12] #>  [1,] -1.00    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA #>  [2,] -0.95 -0.95 -0.95 -0.95 -0.95 -0.95 -0.95 -0.95    NA    NA    NA    NA #>  [3,] -0.90 -0.90 -0.90 -0.90 -0.90 -0.90 -0.90 -0.90 -0.90 -0.90    NA    NA #>  [4,] -0.85 -0.85 -0.85 -0.85 -0.85 -0.85 -0.85 -0.85 -0.85 -0.85 -0.85 -0.85 #>  [5,] -0.80 -0.80 -0.80 -0.80 -0.80 -0.80 -0.80 -0.80 -0.80 -0.80 -0.80 -0.80 #>  [6,] -0.75 -0.75 -0.75 -0.75 -0.75 -0.75 -0.75 -0.75 -0.75 -0.75 -0.75 -0.75 #>  [7,] -0.70 -0.70 -0.70 -0.70 -0.70 -0.70 -0.70 -0.70 -0.70 -0.70 -0.70 -0.70 #>  [8,] -0.65 -0.65 -0.65 -0.65 -0.65 -0.65 -0.65 -0.65 -0.65 -0.65 -0.65 -0.65 #>  [9,] -0.60 -0.60 -0.60 -0.60 -0.60 -0.60 -0.60 -0.60 -0.60 -0.60 -0.60 -0.60 #> [10,] -0.55 -0.55 -0.55 -0.55 -0.55 -0.55 -0.55 -0.55 -0.55 -0.55 -0.55 -0.55 #> [11,] -0.50 -0.50 -0.50 -0.50 -0.50 -0.50 -0.50 -0.50 -0.50 -0.50 -0.50 -0.50 #> [12,] -0.45 -0.45 -0.45 -0.45 -0.45 -0.45 -0.45 -0.45 -0.45 -0.45 -0.45 -0.45 #> [13,] -0.40 -0.40 -0.40 -0.40 -0.40 -0.40 -0.40 -0.40 -0.40 -0.40 -0.40 -0.40 #> [14,] -0.35 -0.35 -0.35 -0.35 -0.35 -0.35 -0.35 -0.35 -0.35 -0.35 -0.35 -0.35 #> [15,] -0.30 -0.30 -0.30 -0.30 -0.30 -0.30 -0.30 -0.30 -0.30 -0.30 -0.30 -0.30 #> [16,] -0.25 -0.25 -0.25 -0.25 -0.25 -0.25 -0.25 -0.25 -0.25 -0.25 -0.25 -0.25 #> [17,] -0.20 -0.20 -0.20 -0.20 -0.20 -0.20 -0.20 -0.20 -0.20 -0.20 -0.20 -0.20 #> [18,] -0.15 -0.15 -0.15 -0.15 -0.15 -0.15 -0.15 -0.15 -0.15 -0.15 -0.15 -0.15 #> [19,] -0.10 -0.10 -0.10 -0.10 -0.10 -0.10 -0.10 -0.10 -0.10 -0.10 -0.10 -0.10 #> [20,] -0.05 -0.05 -0.05 -0.05 -0.05 -0.05 -0.05 -0.05 -0.05 -0.05 -0.05 -0.05 #> [21,]  0.00  0.00  0.00  0.00  0.00  0.00  0.00  0.00  0.00  0.00  0.00  0.00 #> [22,]  0.05  0.05  0.05  0.05  0.05  0.05  0.05  0.05  0.05  0.05  0.05  0.05 #> [23,]  0.10  0.10  0.10  0.10  0.10  0.10  0.10  0.10  0.10  0.10  0.10  0.10 #> [24,]  0.15  0.15  0.15  0.15  0.15  0.15  0.15  0.15  0.15  0.15  0.15  0.15 #> [25,]  0.20  0.20  0.20  0.20  0.20  0.20  0.20  0.20  0.20  0.20  0.20  0.20 #> [26,]  0.25  0.25  0.25  0.25  0.25  0.25  0.25  0.25  0.25  0.25  0.25  0.25 #> [27,]  0.30  0.30  0.30  0.30  0.30  0.30  0.30  0.30  0.30  0.30  0.30  0.30 #> [28,]  0.35  0.35  0.35  0.35  0.35  0.35  0.35  0.35  0.35  0.35  0.35  0.35 #> [29,]  0.40  0.40  0.40  0.40  0.40  0.40  0.40  0.40  0.40  0.40  0.40  0.40 #> [30,]  0.45  0.45  0.45  0.45  0.45  0.45  0.45  0.45  0.45  0.45  0.45  0.45 #> [31,]  0.50  0.50  0.50  0.50  0.50  0.50  0.50  0.50  0.50  0.50  0.50  0.50 #> [32,]  0.55  0.55  0.55  0.55  0.55  0.55  0.55  0.55  0.55  0.55  0.55  0.55 #> [33,]  0.60  0.60  0.60  0.60  0.60  0.60  0.60  0.60  0.60  0.60  0.60  0.60 #> [34,]  0.65  0.65  0.65  0.65  0.65  0.65  0.65  0.65  0.65  0.65  0.65  0.65 #> [35,]  0.70  0.70  0.70  0.70  0.70  0.70  0.70  0.70  0.70  0.70  0.70  0.70 #> [36,]  0.75  0.75  0.75  0.75  0.75  0.75  0.75  0.75  0.75  0.75  0.75  0.75 #> [37,]  0.80  0.80  0.80  0.80  0.80  0.80  0.80  0.80  0.80  0.80  0.80  0.80 #> [38,]  0.85  0.85  0.85  0.85  0.85  0.85  0.85  0.85  0.85  0.85  0.85  0.85 #> [39,]  0.90  0.90  0.90  0.90  0.90  0.90  0.90  0.90  0.90  0.90    NA    NA #> [40,]  0.95  0.95  0.95  0.95  0.95  0.95  0.95  0.95    NA    NA    NA    NA #> [41,]  1.00    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA    NA #>       [,13] [,14] [,15] [,16] [,17] [,18] [,19] [,20] [,21] #>  [1,]    NA    NA    NA    NA    NA    NA    NA    NA    NA #>  [2,]    NA    NA    NA    NA    NA    NA    NA    NA    NA #>  [3,]    NA    NA    NA    NA    NA    NA    NA    NA    NA #>  [4,]    NA    NA    NA    NA    NA    NA    NA    NA    NA #>  [5,] -0.80    NA    NA    NA    NA    NA    NA    NA    NA #>  [6,] -0.75 -0.75 -0.75    NA    NA    NA    NA    NA    NA #>  [7,] -0.70 -0.70 -0.70 -0.70    NA    NA    NA    NA    NA #>  [8,] -0.65 -0.65 -0.65 -0.65 -0.65    NA    NA    NA    NA #>  [9,] -0.60 -0.60 -0.60 -0.60 -0.60 -0.60    NA    NA    NA #> [10,] -0.55 -0.55 -0.55 -0.55 -0.55 -0.55    NA    NA    NA #> [11,] -0.50 -0.50 -0.50 -0.50 -0.50 -0.50 -0.50    NA    NA #> [12,] -0.45 -0.45 -0.45 -0.45 -0.45 -0.45 -0.45    NA    NA #> [13,] -0.40 -0.40 -0.40 -0.40 -0.40 -0.40 -0.40 -0.40    NA #> [14,] -0.35 -0.35 -0.35 -0.35 -0.35 -0.35 -0.35 -0.35    NA #> [15,] -0.30 -0.30 -0.30 -0.30 -0.30 -0.30 -0.30 -0.30 -0.30 #> [16,] -0.25 -0.25 -0.25 -0.25 -0.25 -0.25 -0.25 -0.25 -0.25 #> [17,] -0.20 -0.20 -0.20 -0.20 -0.20 -0.20 -0.20 -0.20 -0.20 #> [18,] -0.15 -0.15 -0.15 -0.15 -0.15 -0.15 -0.15 -0.15 -0.15 #> [19,] -0.10 -0.10 -0.10 -0.10 -0.10 -0.10 -0.10 -0.10 -0.10 #> [20,] -0.05 -0.05 -0.05 -0.05 -0.05 -0.05 -0.05 -0.05 -0.05 #> [21,]  0.00  0.00  0.00  0.00  0.00  0.00  0.00  0.00  0.00 #> [22,]  0.05  0.05  0.05  0.05  0.05  0.05  0.05  0.05  0.05 #> [23,]  0.10  0.10  0.10  0.10  0.10  0.10  0.10  0.10  0.10 #> [24,]  0.15  0.15  0.15  0.15  0.15  0.15  0.15  0.15  0.15 #> [25,]  0.20  0.20  0.20  0.20  0.20  0.20  0.20  0.20  0.20 #> [26,]  0.25  0.25  0.25  0.25  0.25  0.25  0.25  0.25  0.25 #> [27,]  0.30  0.30  0.30  0.30  0.30  0.30  0.30  0.30  0.30 #> [28,]  0.35  0.35  0.35  0.35  0.35  0.35  0.35  0.35    NA #> [29,]  0.40  0.40  0.40  0.40  0.40  0.40  0.40  0.40    NA #> [30,]  0.45  0.45  0.45  0.45  0.45  0.45  0.45    NA    NA #> [31,]  0.50  0.50  0.50  0.50  0.50  0.50  0.50    NA    NA #> [32,]  0.55  0.55  0.55  0.55  0.55  0.55    NA    NA    NA #> [33,]  0.60  0.60  0.60  0.60  0.60    NA    NA    NA    NA #> [34,]  0.65  0.65  0.65  0.65  0.65    NA    NA    NA    NA #> [35,]  0.70  0.70  0.70  0.70    NA    NA    NA    NA    NA #> [36,]  0.75  0.75  0.75    NA    NA    NA    NA    NA    NA #> [37,]  0.80    NA    NA    NA    NA    NA    NA    NA    NA #> [38,]    NA    NA    NA    NA    NA    NA    NA    NA    NA #> [39,]    NA    NA    NA    NA    NA    NA    NA    NA    NA #> [40,]    NA    NA    NA    NA    NA    NA    NA    NA    NA #> [41,]    NA    NA    NA    NA    NA    NA    NA    NA    NA"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/mig_stoch_crm.html","id":null,"dir":"Reference","previous_headings":"","what":"Stochastic migration collision risk model ‚Äî mig_stoch_crm","title":"Stochastic migration collision risk model ‚Äî mig_stoch_crm","text":"Run migration stochastic collision risk model single species one turbine scenario","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/mig_stoch_crm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stochastic migration collision risk model ‚Äî mig_stoch_crm","text":"","code":"mig_stoch_crm(   wing_span_pars,   flt_speed_pars,   body_lt_pars,   prop_crh_pars,   avoid_bsc_pars,   n_turbines,   n_blades = 3,   rtn_speed_pars,   bld_pitch_pars,   rtr_radius_pars,   bld_width_pars,   wf_width,   wf_latitude,   flight_type,   prop_upwind = 0.5,   popn_estim_pars,   season_specs,   chord_profile = chord_prof_5MW,   trb_wind_avbl,   trb_downtime_pars,   n_iter = 10,   LargeArrayCorrection = TRUE,   log_file = NULL,   seed = NULL,   verbose = TRUE )"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/mig_stoch_crm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stochastic migration collision risk model ‚Äî mig_stoch_crm","text":"wing_span_pars single row data frame columns mean sd, mean standard deviation species wingspan, metres. Assumed follow tnorm-lw0 distribution. flt_speed_pars single row data frame columns mean sd, mean standard deviation species flying speed, metres/sec. Assumed follow Truncated Normal lower bound 0 (tnorm-lw0). body_lt_pars single row data frame columns mean sd, mean standard deviation species body length, metres. Assumed follow tnorm-lw0 distribution. prop_crh_pars single row data frame columns mean sd. mean standard deviation proportion flights collision risk height. avoid_bsc_pars Single row data frame columns mean sd, mean standard deviation species avoidance rate used. Avoidance rate expresses probability bird flying collision course turbine take evading action avoid collision, assumed follow Beta distribution. n_turbines integer. number turbines expected installed n_blades integer. number blades per turbine (defaults 3) rtn_speed_pars single row data frame columns mean sd, mean standard deviation rotation speed. bld_pitch_pars single row data frame columns mean sd, mean standard deviation blade pitch angle, .e. angle blade surface rotor plane, degrees. Assumed follow tnorm-lw0 distribution. rtr_radius_pars single row data frame columns mean sd, mean standard deviation radius rotor, metres. Assumed follow tnorm-lw0 distribution. bld_width_pars single row data frame columns mean sd, mean standard deviation maximum blade width, metres. Assumed tnorm-lw0 distribution. wf_width Numeric value, approximate longitudinal width wind farm, kilometres (\\(w\\)). wf_latitude decimal value. latitude centroid windfarm, degrees. flight_type character. Either \"flying\" \"gliding\" representing type flight commonly used species prop_upwind Numeric value 0-1 giving proportion flights upwind - defaults 0.5. popn_estim_pars single row data frame columns mean sd. population estimate species expected fly wind farm area. season_specs data frame defining seasons aggregating collision estimates. must comprise following columns: season_id, (unique) season identifier, start_month, name season's first month, end_month, name season's last month. chord_profile data frame chord taper profile rotor blade. must contain columns: pp_radius, equidistant intervals radius bird passage point, proportion rotor_radius, within range \\([0, 1]\\). chord, chord width pp_radius, proportion blade_width. Defaults generic profile typical modern 5MW turbine. See chord_prof_5MW() details. trb_wind_avbl data frame monthly estimates operational wind availability. must contain columns: month, (unique) month names, pctg, percentage time wind conditions allow turbine operation per month. trb_downtime_pars data frame monthly estimates maintenance downtime, assumed follow tnorm-lw0 distribution. must contain following columns: month, (unique) month names, mean, numeric, mean percentage time month turbines operating due maintenance, sd, standard deviation monthly maintenance downtime. n_iter integer > 0. number iterations model simulation. LargeArrayCorrection boolean. large array correction calculated log_file Path log file store session info main model run options. set NULL (default value), log file created. seed Integer, random seed random number generation, analysis reproducibility. verbose boolean. TRUE verbose output","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/mig_stoch_crm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stochastic migration collision risk model ‚Äî mig_stoch_crm","text":"Estimates number collisions per migratory season n number iterations specified","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/mig_stoch_crm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Stochastic migration collision risk model ‚Äî mig_stoch_crm","text":"function adaption code Masden(2015) used estimating collision risk seabirds offshore windfarm sites adaptation Band(2012). adaptation stoch_crm function. collision risk model evaluates risk defined migratory period flux rate simply number birds travelling windfarm. Changes relation previous top-line function stoch_crm function run option 1 migratory species","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/mig_stoch_crm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stochastic migration collision risk model ‚Äî mig_stoch_crm","text":"","code":"# ------------------------------------------------------ # Run with arbitrary parameter values, for illustration # ------------------------------------------------------ season_specs <- data.frame(   season_id = c(\"PrBMigration\", \"PoBMigration\",\"OMigration\"),   start_month = c(\"Mar\", \"May\", \"Oct\"), end_month = c(\"Apr\", \"Sep\", \"Feb\") )  # wind availability windavb <- data.frame(   month = month.abb,   pctg = runif(12, 85, 98) ) head(windavb) #>   month     pctg #> 1   Jan 88.96718 #> 2   Feb 92.40276 #> 3   Mar 97.61841 #> 4   Apr 85.22997 #> 5   May 95.25568 #> 6   Jun 86.12851  # maintenance downtime dwntm <- data.frame(   month = month.abb,   mean = runif(12, 6, 10),   sd = rep(2, 12)) head(dwntm) #>   month     mean sd #> 1   Jan 6.520788  2 #> 2   Feb 9.509807  2 #> 3   Mar 6.783755  2 #> 4   Apr 9.292077  2 #> 5   May 6.862559  2 #> 6   Jun 8.088855  2   mig_stoch_crm(   # Wing span in m,   wing_span_pars = data.frame(mean = 1.08, sd = 0.04),   # Flight speed in m/s   flt_speed_pars = data.frame(mean = 7.26, sd = 1.5),   # Body length in m,   body_lt_pars = data.frame(mean = 0.39, sd = 0.005),   # Proportion of birds at CRH   prop_crh_pars = data.frame(mean = 0.06, sd = 0.009),   # avoidance rate   avoid_bsc_pars = data.frame(mean = 0.99, sd = 0.001),   n_turbines = 150,   n_blades = 3,   # rotation speed in m/s of turbine blades   rtn_speed_pars = data.frame(mean = 13.1, sd = 4),   # pitch in degrees of turbine blades   bld_pitch_pars = data.frame(mean = 3, sd = 0.3),   # sd = 0, rotor radius is fixed   rtr_radius_pars = data.frame(mean = 80, sd = 0),   # sd = 0, blade width is fixed   bld_width_pars = data.frame(mean = 8, sd = 0),   wf_width = 100,   wf_latitude = 54.1,   prop_upwind = 0.5,   flight_type = \"flapping\",   # population flying through windfarm,   popn_estim_pars = data.frame(mean = 21584, sd = 2023),   season_specs = season_specs,   chord_profile = chord_prof_5MW,   trb_wind_avbl = windavb,   trb_downtime_pars = dwntm,   n_iter = 1000,   LargeArrayCorrection = TRUE,   log_file = NULL,   seed = 1234,   verbose = TRUE) #>  #> ‚îÄ‚îÄ Stochastic CRM for Migratory birds ‚îÄ‚îÄ #>  #> ‚Ñπ Checking for manditory arguments #> ‚úî Checking for manditory arguments [11ms] #>  #> ‚Ñπ Data validation #> ‚úî Data validation [21ms] #>  #> ‚Ñπ Sampling data #> ‚úî Sampling data [64ms] #>  #> ‚Ñπ Running simulation... #> ‚úî Running simulation... [695ms] #>  #> ‚Ñπ Creating outputs #> ‚úî Creating outputs [18ms] #>  #>         PrBMigration PoBMigration OMigration #>    [1,]    0.1985508    0.1978378  0.1947346 #>    [2,]    0.2053335    0.2045962  0.2013869 #>    [3,]    0.2286637    0.2278426  0.2242687 #>    [4,]    0.1923027    0.1916122  0.1886066 #>    [5,]    0.2100510    0.2092967  0.2060137 #>    [6,]    0.2755150    0.2745257  0.2702197 #>    [7,]    0.2280643    0.2272454  0.2236809 #>    [8,]    0.1772574    0.1766209  0.1738504 #>    [9,]    0.2496844    0.2487878  0.2448855 #>   [10,]    0.3861305    0.3847440  0.3787094 #>   [11,]    0.3070199    0.3059174  0.3011191 #>   [12,]    0.2401927    0.2393302  0.2355762 #>   [13,]    0.1975981    0.1968885  0.1938002 #>   [14,]    0.1841368    0.1834756  0.1805976 #>   [15,]    0.2699139    0.2689447  0.2647262 #>   [16,]    0.2205065    0.2197147  0.2162683 #>   [17,]    0.2496128    0.2487165  0.2448153 #>   [18,]    0.2372296    0.2363777  0.2326700 #>   [19,]    0.1483622    0.1478295  0.1455106 #>   [20,]    0.2541283    0.2532157  0.2492439 #>   [21,]    0.1814741    0.1808224  0.1779861 #>   [22,]    0.2499348    0.2490373  0.2451310 #>   [23,]    0.2139629    0.2131946  0.2098505 #>   [24,]    0.2071170    0.2063733  0.2031361 #>   [25,]    0.2291334    0.2283106  0.2247294 #>   [26,]    0.1903040    0.1896206  0.1866463 #>   [27,]    0.2762870    0.2752949  0.2709768 #>   [28,]    0.2419087    0.2410400  0.2372592 #>   [29,]    0.2054612    0.2047234  0.2015122 #>   [30,]    0.1733158    0.1726935  0.1699847 #>   [31,]    0.2595555    0.2586235  0.2545669 #>   [32,]    0.2457567    0.2448743  0.2410332 #>   [33,]    0.2497232    0.2488265  0.2449235 #>   [34,]    0.3152511    0.3141191  0.3091921 #>   [35,]    0.2078944    0.2071479  0.2038986 #>   [36,]    0.2215371    0.2207416  0.2172791 #>   [37,]    0.2246993    0.2238924  0.2203805 #>   [38,]    0.1517551    0.1512101  0.1488383 #>   [39,]    0.2339594    0.2331193  0.2294627 #>   [40,]    0.3271988    0.3260240  0.3209103 #>   [41,]    0.2277177    0.2269000  0.2233409 #>   [42,]    0.2025193    0.2017921  0.1986268 #>   [43,]    0.3565627    0.3552824  0.3497098 #>   [44,]    0.1893931    0.1887130  0.1857529 #>   [45,]    0.2554381    0.2545209  0.2505286 #>   [46,]    0.1496542    0.1491168  0.1467778 #>   [47,]    0.2960017    0.2949388  0.2903126 #>   [48,]    0.1779895    0.1773504  0.1745685 #>   [49,]    0.2194090    0.2186212  0.2151920 #>   [50,]    0.1965872    0.1958813  0.1928087 #>   [51,]    0.2050683    0.2043320  0.2011268 #>   [52,]    0.2234035    0.2226013  0.2191096 #>   [53,]    0.2266733    0.2258594  0.2223167 #>   [54,]    0.2644331    0.2634836  0.2593507 #>   [55,]    0.2690642    0.2680981  0.2638928 #>   [56,]    0.2957348    0.2946729  0.2900509 #>   [57,]    0.2631739    0.2622289  0.2581158 #>   [58,]    0.1857247    0.1850578  0.1821550 #>   [59,]    0.2416216    0.2407540  0.2369776 #>   [60,]    0.1739244    0.1732998  0.1705815 #>   [61,]    0.2626064    0.2616634  0.2575591 #>   [62,]    0.2045760    0.2038414  0.2006440 #>   [63,]    0.1708642    0.1702506  0.1675801 #>   [64,]    0.2523026    0.2513966  0.2474533 #>   [65,]    0.1974382    0.1967292  0.1936434 #>   [66,]    0.2438060    0.2429305  0.2391200 #>   [67,]    0.2354742    0.2346286  0.2309483 #>   [68,]    0.2361647    0.2353167  0.2316256 #>   [69,]    0.1983765    0.1976642  0.1945636 #>   [70,]    0.2568263    0.2559041  0.2518901 #>   [71,]    0.1882388    0.1875629  0.1846208 #>   [72,]    0.1887460    0.1880682  0.1851182 #>   [73,]    0.2347909    0.2339478  0.2302782 #>   [74,]    0.2346334    0.2337909  0.2301237 #>   [75,]    0.2766775    0.2756840  0.2713597 #>   [76,]    0.1966550    0.1959489  0.1928753 #>   [77,]    0.2536029    0.2526923  0.2487287 #>   [78,]    0.1885935    0.1879163  0.1849687 #>   [79,]    0.2168402    0.2160615  0.2126725 #>   [80,]    0.2000800    0.1993616  0.1962344 #>   [81,]    0.1915346    0.1908468  0.1878532 #>   [82,]    0.2871214    0.2860905  0.2816030 #>   [83,]    0.3164771    0.3153407  0.3103945 #>   [84,]    0.1883403    0.1876640  0.1847203 #>   [85,]    0.1898810    0.1891991  0.1862314 #>   [86,]    0.1794795    0.1788350  0.1760298 #>   [87,]    0.2449564    0.2440769  0.2402484 #>   [88,]    0.1940300    0.1933332  0.1903007 #>   [89,]    0.3016605    0.3005773  0.2958626 #>   [90,]    0.1428538    0.1423408  0.1401080 #>   [91,]    0.3134800    0.3123543  0.3074550 #>   [92,]    0.1564854    0.1559235  0.1534777 #>   [93,]    0.2294507    0.2286268  0.2250406 #>   [94,]    0.2464144    0.2455296  0.2416784 #>   [95,]    0.2491477    0.2482531  0.2443591 #>   [96,]    0.2264829    0.2256696  0.2221299 #>   [97,]    0.1998232    0.1991056  0.1959825 #>   [98,]    0.2474726    0.2465840  0.2427162 #>   [99,]    0.2061283    0.2053882  0.2021665 #>  [100,]    0.2201516    0.2193610  0.2159202 #>  [101,]    0.2333727    0.2325347  0.2288872 #>  [102,]    0.1917036    0.1910152  0.1880190 #>  [103,]    0.2137669    0.2129993  0.2096584 #>  [104,]    0.1292695    0.1288053  0.1267849 #>  [105,]    0.2640932    0.2631449  0.2590173 #>  [106,]    0.2221428    0.2213452  0.2178732 #>  [107,]    0.1889588    0.1882803  0.1853270 #>  [108,]    0.1155202    0.1151054  0.1132998 #>  [109,]    0.2612082    0.2602703  0.2561878 #>  [110,]    0.2244517    0.2236457  0.2201377 #>  [111,]    0.2944206    0.2933634  0.2887619 #>  [112,]    0.3548204    0.3535464  0.3480011 #>  [113,]    0.2138696    0.2131017  0.2097590 #>  [114,]    0.2134968    0.2127302  0.2093934 #>  [115,]    0.2005927    0.1998725  0.1967373 #>  [116,]    0.1437555    0.1432393  0.1409925 #>  [117,]    0.1936246    0.1929293  0.1899031 #>  [118,]    0.1709185    0.1703047  0.1676333 #>  [119,]    0.2000162    0.1992980  0.1961719 #>  [120,]    0.1827211    0.1820650  0.1792091 #>  [121,]    0.2184108    0.2176266  0.2142129 #>  [122,]    0.1782620    0.1776219  0.1748358 #>  [123,]    0.1591929    0.1586213  0.1561331 #>  [124,]    0.2621023    0.2611612  0.2570648 #>  [125,]    0.3137958    0.3126690  0.3077647 #>  [126,]    0.2628915    0.2619475  0.2578387 #>  [127,]    0.2218076    0.2210112  0.2175445 #>  [128,]    0.2760885    0.2750971  0.2707821 #>  [129,]    0.5101034    0.5082719  0.5002998 #>  [130,]    0.2262060    0.2253938  0.2218583 #>  [131,]    0.2188105    0.2180248  0.2146050 #>  [132,]    0.2172449    0.2164648  0.2130694 #>  [133,]    0.1825622    0.1819067  0.1790533 #>  [134,]    0.1554653    0.1549071  0.1524772 #>  [135,]    0.2367314    0.2358813  0.2321813 #>  [136,]    0.2209410    0.2201477  0.2166945 #>  [137,]    0.2672049    0.2662454  0.2620692 #>  [138,]    0.2202804    0.2194894  0.2160465 #>  [139,]    0.1740104    0.1733856  0.1706659 #>  [140,]    0.1601375    0.1595624  0.1570596 #>  [141,]    0.2197802    0.2189910  0.2155560 #>  [142,]    0.1538205    0.1532681  0.1508640 #>  [143,]    0.1508635    0.1503218  0.1479639 #>  [144,]    0.1631432    0.1625574  0.1600075 #>  [145,]    0.3014932    0.3004106  0.2956986 #>  [146,]    0.2528129    0.2519051  0.2479539 #>  [147,]    0.2468551    0.2459687  0.2421106 #>  [148,]    0.1836273    0.1829679  0.1800979 #>  [149,]    0.2012547    0.2005320  0.1973865 #>  [150,]    0.2912604    0.2902145  0.2856624 #>  [151,]    0.2292848    0.2284615  0.2248779 #>  [152,]    0.1796206    0.1789756  0.1761682 #>  [153,]    0.2103917    0.2096362  0.2063479 #>  [154,]    0.2875278    0.2864953  0.2820015 #>  [155,]    0.2120030    0.2112417  0.2079282 #>  [156,]    0.3417289    0.3405019  0.3351611 #>  [157,]    0.1428463    0.1423333  0.1401007 #>  [158,]    0.2140204    0.2132519  0.2099069 #>  [159,]    0.2002731    0.1995540  0.1964238 #>  [160,]    0.2484039    0.2475119  0.2436295 #>  [161,]    0.1582279    0.1576597  0.1551866 #>  [162,]    0.2581114    0.2571846  0.2531505 #>  [163,]    0.3223091    0.3211518  0.3161145 #>  [164,]    0.2082369    0.2074892  0.2042345 #>  [165,]    0.1873672    0.1866944  0.1837659 #>  [166,]    0.3166486    0.3155116  0.3105627 #>  [167,]    0.2424747    0.2416040  0.2378143 #>  [168,]    0.2210916    0.2202977  0.2168421 #>  [169,]    0.2452874    0.2444066  0.2405730 #>  [170,]    0.2011813    0.2004589  0.1973145 #>  [171,]    0.2873661    0.2863343  0.2818429 #>  [172,]    0.1871372    0.1864652  0.1835404 #>  [173,]    0.2341167    0.2332760  0.2296169 #>  [174,]    0.2373672    0.2365149  0.2328050 #>  [175,]    0.2457404    0.2448580  0.2410173 #>  [176,]    0.2733948    0.2724131  0.2681402 #>  [177,]    0.2349285    0.2340849  0.2304131 #>  [178,]    0.3024643    0.3013782  0.2966510 #>  [179,]    0.2083917    0.2076434  0.2043864 #>  [180,]    0.1990650    0.1983502  0.1952389 #>  [181,]    0.1929446    0.1922517  0.1892361 #>  [182,]    0.1993298    0.1986140  0.1954986 #>  [183,]    0.2012862    0.2005634  0.1974174 #>  [184,]    0.1394507    0.1389499  0.1367703 #>  [185,]    0.2229194    0.2221190  0.2186349 #>  [186,]    0.2670463    0.2660874  0.2619137 #>  [187,]    0.1881668    0.1874911  0.1845502 #>  [188,]    0.2176458    0.2168642  0.2134626 #>  [189,]    0.2439265    0.2430506  0.2392383 #>  [190,]    0.2153788    0.2146054  0.2112392 #>  [191,]    0.1860901    0.1854219  0.1825134 #>  [192,]    0.2104384    0.2096827  0.2063937 #>  [193,]    0.1821087    0.1814548  0.1786085 #>  [194,]    0.1927895    0.1920972  0.1890840 #>  [195,]    0.2107481    0.2099914  0.2066975 #>  [196,]    0.2288941    0.2280722  0.2244947 #>  [197,]    0.2068433    0.2061006  0.2028677 #>  [198,]    0.2834930    0.2824750  0.2780442 #>  [199,]    0.2133667    0.2126005  0.2092657 #>  [200,]    0.2111235    0.2103654  0.2070656 #>  [201,]    0.2122214    0.2114594  0.2081425 #>  [202,]    0.1760426    0.1754104  0.1726590 #>  [203,]    0.2697163    0.2687478  0.2645323 #>  [204,]    0.1628016    0.1622170  0.1596725 #>  [205,]    0.2691986    0.2682319  0.2640245 #>  [206,]    0.2659341    0.2649792  0.2608229 #>  [207,]    0.2649532    0.2640018  0.2598608 #>  [208,]    0.2865919    0.2855628  0.2810836 #>  [209,]    0.2055085    0.2047706  0.2015586 #>  [210,]    0.2196200    0.2188313  0.2153988 #>  [211,]    0.2182825    0.2174987  0.2140870 #>  [212,]    0.2181172    0.2173340  0.2139249 #>  [213,]    0.1736525    0.1730289  0.1703148 #>  [214,]    0.1839892    0.1833285  0.1804528 #>  [215,]    0.2394536    0.2385938  0.2348512 #>  [216,]    0.2339475    0.2331074  0.2294510 #>  [217,]    0.2110897    0.2103317  0.2070325 #>  [218,]    0.2343682    0.2335266  0.2298636 #>  [219,]    0.2035474    0.2028165  0.1996351 #>  [220,]    0.2426558    0.2417844  0.2379919 #>  [221,]    0.2081390    0.2073916  0.2041385 #>  [222,]    0.2198834    0.2190938  0.2156572 #>  [223,]    0.2929321    0.2918802  0.2873019 #>  [224,]    0.2115865    0.2108267  0.2075198 #>  [225,]    0.2138214    0.2130536  0.2097117 #>  [226,]    0.2104486    0.2096930  0.2064038 #>  [227,]    0.2087788    0.2080291  0.2047660 #>  [228,]    0.2550540    0.2541382  0.2501519 #>  [229,]    0.2203827    0.2195913  0.2161469 #>  [230,]    0.1780174    0.1773781  0.1745958 #>  [231,]    0.2731221    0.2721414  0.2678728 #>  [232,]    0.2312649    0.2304345  0.2268201 #>  [233,]    0.2021742    0.2014482  0.1982883 #>  [234,]    0.2756767    0.2746868  0.2703782 #>  [235,]    0.2689195    0.2679538  0.2637508 #>  [236,]    0.2562314    0.2553113  0.2513066 #>  [237,]    0.3475278    0.3462799  0.3408484 #>  [238,]    0.2693619    0.2683947  0.2641847 #>  [239,]    0.3096263    0.3085145  0.3036753 #>  [240,]    0.3013583    0.3002762  0.2955663 #>  [241,]    0.2119343    0.2111733  0.2078609 #>  [242,]    0.1888091    0.1881311  0.1851801 #>  [243,]    0.2756078    0.2746182  0.2703107 #>  [244,]    0.2869369    0.2859066  0.2814221 #>  [245,]    0.1667472    0.1661484  0.1635422 #>  [246,]    0.3021760    0.3010910  0.2963682 #>  [247,]    0.2793589    0.2783558  0.2739897 #>  [248,]    0.1957249    0.1950221  0.1919630 #>  [249,]    0.2098685    0.2091149  0.2058347 #>  [250,]    0.2254494    0.2246399  0.2211162 #>  [251,]    0.2416403    0.2407726  0.2369960 #>  [252,]    0.1721283    0.1715102  0.1688199 #>  [253,]    0.1989414    0.1982270  0.1951177 #>  [254,]    0.2508742    0.2499734  0.2460524 #>  [255,]    0.2722980    0.2713203  0.2670646 #>  [256,]    0.1749794    0.1743510  0.1716162 #>  [257,]    0.2113947    0.2106356  0.2073317 #>  [258,]    0.1969132    0.1962062  0.1931285 #>  [259,]    0.2549688    0.2540532  0.2500683 #>  [260,]    0.2271615    0.2263458  0.2227954 #>  [261,]    0.2344079    0.2335662  0.2299025 #>  [262,]    0.3090034    0.3078938  0.3030644 #>  [263,]    0.3051932    0.3040973  0.2993275 #>  [264,]    0.1699381    0.1693279  0.1666718 #>  [265,]    0.1510378    0.1504955  0.1481348 #>  [266,]    0.2175609    0.2167797  0.2133793 #>  [267,]    0.1683140    0.1677096  0.1650789 #>  [268,]    0.2334884    0.2326500  0.2290007 #>  [269,]    0.2720299    0.2710531  0.2668015 #>  [270,]    0.1785512    0.1779100  0.1751194 #>  [271,]    0.1978063    0.1970961  0.1940044 #>  [272,]    0.3013920    0.3003097  0.2955992 #>  [273,]    0.1759389    0.1753071  0.1725573 #>  [274,]    0.1882478    0.1875718  0.1846296 #>  [275,]    0.2501922    0.2492938  0.2453835 #>  [276,]    0.2811188    0.2801094  0.2757158 #>  [277,]    0.2977503    0.2966812  0.2920277 #>  [278,]    0.1856878    0.1850210  0.1821188 #>  [279,]    0.1941990    0.1935016  0.1904664 #>  [280,]    0.2823295    0.2813157  0.2769032 #>  [281,]    0.1858924    0.1852249  0.1823195 #>  [282,]    0.1897403    0.1890590  0.1860934 #>  [283,]    0.1950795    0.1943790  0.1913300 #>  [284,]    0.2640103    0.2630623  0.2589360 #>  [285,]    0.2889145    0.2878771  0.2833616 #>  [286,]    0.1768245    0.1761896  0.1734259 #>  [287,]    0.2107798    0.2100229  0.2067286 #>  [288,]    0.2306054    0.2297774  0.2261732 #>  [289,]    0.2411608    0.2402948  0.2365257 #>  [290,]    0.2448815    0.2440022  0.2401749 #>  [291,]    0.2008430    0.2001218  0.1969827 #>  [292,]    0.2197516    0.2189625  0.2155279 #>  [293,]    0.2148727    0.2141012  0.2107429 #>  [294,]    0.2183551    0.2175710  0.2141583 #>  [295,]    0.2074889    0.2067438  0.2035009 #>  [296,]    0.2067409    0.2059985  0.2027672 #>  [297,]    0.2688400    0.2678746  0.2636729 #>  [298,]    0.2113279    0.2105691  0.2072662 #>  [299,]    0.2185880    0.2178031  0.2143867 #>  [300,]    0.2463141    0.2454296  0.2415799 #>  [301,]    0.3168948    0.3157569  0.3108042 #>  [302,]    0.1467957    0.1462686  0.1439742 #>  [303,]    0.2782317    0.2772326  0.2728841 #>  [304,]    0.2289096    0.2280876  0.2245099 #>  [305,]    0.1948321    0.1941325  0.1910873 #>  [306,]    0.2029526    0.2022239  0.1990518 #>  [307,]    0.2908144    0.2897702  0.2852250 #>  [308,]    0.2634888    0.2625427  0.2584246 #>  [309,]    0.2405773    0.2397134  0.2359534 #>  [310,]    0.1968750    0.1961680  0.1930910 #>  [311,]    0.2992922    0.2982175  0.2935399 #>  [312,]    0.1953533    0.1946518  0.1915986 #>  [313,]    0.2521849    0.2512793  0.2473379 #>  [314,]    0.2069214    0.2061784  0.2029443 #>  [315,]    0.1658502    0.1652546  0.1626625 #>  [316,]    0.1859226    0.1852550  0.1823491 #>  [317,]    0.2069908    0.2062475  0.2030123 #>  [318,]    0.1691016    0.1684943  0.1658514 #>  [319,]    0.1223907    0.1219512  0.1200382 #>  [320,]    0.2120519    0.2112904  0.2079762 #>  [321,]    0.2035508    0.2028199  0.1996385 #>  [322,]    0.2674260    0.2664658  0.2622861 #>  [323,]    0.2338470    0.2330073  0.2293524 #>  [324,]    0.2110867    0.2103287  0.2070296 #>  [325,]    0.2218066    0.2210101  0.2175435 #>  [326,]    0.1937303    0.1930346  0.1900067 #>  [327,]    0.1666362    0.1660379  0.1634334 #>  [328,]    0.2339714    0.2331313  0.2294745 #>  [329,]    0.2295128    0.2286887  0.2251015 #>  [330,]    0.1767565    0.1761217  0.1733591 #>  [331,]    0.1699342    0.1693240  0.1666680 #>  [332,]    0.2233016    0.2224998  0.2190098 #>  [333,]    0.3034767    0.3023869  0.2976439 #>  [334,]    0.2342448    0.2334036  0.2297425 #>  [335,]    0.2063861    0.2056451  0.2024194 #>  [336,]    0.2552546    0.2543380  0.2503486 #>  [337,]    0.1530215    0.1524720  0.1500804 #>  [338,]    0.1911087    0.1904224  0.1874355 #>  [339,]    0.1967931    0.1960865  0.1930107 #>  [340,]    0.2179436    0.2171610  0.2137546 #>  [341,]    0.1655836    0.1649890  0.1624010 #>  [342,]    0.2254398    0.2246303  0.2211069 #>  [343,]    0.2532168    0.2523075  0.2483500 #>  [344,]    0.2591155    0.2581850  0.2541353 #>  [345,]    0.2365971    0.2357475  0.2320496 #>  [346,]    0.2347305    0.2338876  0.2302189 #>  [347,]    0.2012760    0.2005533  0.1974074 #>  [348,]    0.2060459    0.2053060  0.2020856 #>  [349,]    0.2493069    0.2484117  0.2445153 #>  [350,]    0.2407235    0.2398591  0.2360968 #>  [351,]    0.1736492    0.1730256  0.1703115 #>  [352,]    0.1975892    0.1968797  0.1937915 #>  [353,]    0.2381328    0.2372777  0.2335558 #>  [354,]    0.2910698    0.2900246  0.2854754 #>  [355,]    0.2505071    0.2496076  0.2456923 #>  [356,]    0.1744943    0.1738677  0.1711405 #>  [357,]    0.2178400    0.2170578  0.2136531 #>  [358,]    0.2035450    0.2028141  0.1996328 #>  [359,]    0.1743201    0.1736941  0.1709695 #>  [360,]    0.1431312    0.1426172  0.1403801 #>  [361,]    0.2375298    0.2366769  0.2329645 #>  [362,]    0.2473197    0.2464316  0.2425662 #>  [363,]    0.2487434    0.2478502  0.2439625 #>  [364,]    0.2161408    0.2153647  0.2119865 #>  [365,]    0.2154239    0.2146504  0.2112834 #>  [366,]    0.2622214    0.2612798  0.2571815 #>  [367,]    0.1471125    0.1465843  0.1442850 #>  [368,]    0.2226774    0.2218778  0.2183975 #>  [369,]    0.1603422    0.1597664  0.1572604 #>  [370,]    0.2175929    0.2168116  0.2134107 #>  [371,]    0.2845089    0.2834873  0.2790408 #>  [372,]    0.1343223    0.1338399  0.1317405 #>  [373,]    0.2646190    0.2636688  0.2595331 #>  [374,]    0.1998180    0.1991005  0.1959774 #>  [375,]    0.2105198    0.2097638  0.2064735 #>  [376,]    0.2477283    0.2468388  0.2429670 #>  [377,]    0.2596913    0.2587588  0.2547001 #>  [378,]    0.1575060    0.1569405  0.1544787 #>  [379,]    0.2255867    0.2247766  0.2212509 #>  [380,]    0.2285529    0.2277322  0.2241601 #>  [381,]    0.2738364    0.2728531  0.2685733 #>  [382,]    0.1499528    0.1494143  0.1470706 #>  [383,]    0.2097039    0.2089509  0.2056734 #>  [384,]    0.2124332    0.2116704  0.2083503 #>  [385,]    0.3250832    0.3239159  0.3188352 #>  [386,]    0.1589338    0.1583631  0.1558790 #>  [387,]    0.3361022    0.3348954  0.3296426 #>  [388,]    0.2139310    0.2131628  0.2098192 #>  [389,]    0.2178172    0.2170351  0.2136307 #>  [390,]    0.3093260    0.3082153  0.3033807 #>  [391,]    0.2187484    0.2179630  0.2145441 #>  [392,]    0.2952655    0.2942053  0.2895905 #>  [393,]    0.2090662    0.2083155  0.2050479 #>  [394,]    0.2268596    0.2260450  0.2224993 #>  [395,]    0.1764526    0.1758190  0.1730611 #>  [396,]    0.3081195    0.3070132  0.3021976 #>  [397,]    0.2026053    0.2018778  0.1987112 #>  [398,]    0.1926971    0.1920052  0.1889934 #>  [399,]    0.2117056    0.2109454  0.2076366 #>  [400,]    0.1822053    0.1815510  0.1787032 #>  [401,]    0.2053959    0.2046584  0.2014482 #>  [402,]    0.1942639    0.1935664  0.1905302 #>  [403,]    0.1804888    0.1798407  0.1770198 #>  [404,]    0.2799974    0.2789920  0.2746159 #>  [405,]    0.2010092    0.2002874  0.1971457 #>  [406,]    0.1730243    0.1724030  0.1696987 #>  [407,]    0.2223723    0.2215738  0.2180983 #>  [408,]    0.1898404    0.1891587  0.1861915 #>  [409,]    0.2095946    0.2088420  0.2055661 #>  [410,]    0.1731115    0.1724898  0.1697842 #>  [411,]    0.1922385    0.1915482  0.1885436 #>  [412,]    0.2118478    0.2110871  0.2077761 #>  [413,]    0.2234322    0.2226299  0.2191378 #>  [414,]    0.1820746    0.1814208  0.1785751 #>  [415,]    0.3206330    0.3194817  0.3144705 #>  [416,]    0.1464495    0.1459236  0.1436347 #>  [417,]    0.1651070    0.1645141  0.1619335 #>  [418,]    0.1905607    0.1898764  0.1868981 #>  [419,]    0.2043822    0.2036483  0.2004540 #>  [420,]    0.1763380    0.1757048  0.1729487 #>  [421,]    0.2306829    0.2298545  0.2262491 #>  [422,]    0.2507815    0.2498810  0.2459615 #>  [423,]    0.2481983    0.2473071  0.2434279 #>  [424,]    0.2077416    0.2069957  0.2037488 #>  [425,]    0.2252886    0.2244796  0.2209585 #>  [426,]    0.2256603    0.2248500  0.2213231 #>  [427,]    0.1813353    0.1806841  0.1778500 #>  [428,]    0.1590990    0.1585277  0.1560411 #>  [429,]    0.2646555    0.2637052  0.2595689 #>  [430,]    0.1568097    0.1562466  0.1537958 #>  [431,]    0.3131975    0.3120729  0.3071780 #>  [432,]    0.2205402    0.2197483  0.2163014 #>  [433,]    0.3001705    0.2990927  0.2944013 #>  [434,]    0.2687066    0.2677417  0.2635421 #>  [435,]    0.2969344    0.2958682  0.2912274 #>  [436,]    0.2023566    0.2016300  0.1984673 #>  [437,]    0.2785320    0.2775319  0.2731787 #>  [438,]    0.2194380    0.2186500  0.2152203 #>  [439,]    0.2168848    0.2161060  0.2127162 #>  [440,]    0.2103221    0.2095669  0.2062797 #>  [441,]    0.2191376    0.2183508  0.2149258 #>  [442,]    0.2170757    0.2162962  0.2129035 #>  [443,]    0.2891070    0.2880689  0.2835504 #>  [444,]    0.1749007    0.1742727  0.1715390 #>  [445,]    0.2161600    0.2153838  0.2120053 #>  [446,]    0.2188621    0.2180762  0.2146555 #>  [447,]    0.2016592    0.2009351  0.1977833 #>  [448,]    0.3194654    0.3183182  0.3133253 #>  [449,]    0.3306985    0.3295111  0.3243427 #>  [450,]    0.1788586    0.1782164  0.1754209 #>  [451,]    0.1865766    0.1859067  0.1829905 #>  [452,]    0.1809398    0.1802901  0.1774620 #>  [453,]    0.1920383    0.1913487  0.1883472 #>  [454,]    0.1763534    0.1757201  0.1729638 #>  [455,]    0.2158045    0.2150296  0.2116567 #>  [456,]    0.2130290    0.2122641  0.2089346 #>  [457,]    0.1683727    0.1677681  0.1651365 #>  [458,]    0.2207395    0.2199469  0.2164969 #>  [459,]    0.2519364    0.2510318  0.2470942 #>  [460,]    0.2404442    0.2395808  0.2358228 #>  [461,]    0.2216160    0.2208203  0.2173565 #>  [462,]    0.1623545    0.1617715  0.1592340 #>  [463,]    0.1694756    0.1688670  0.1662182 #>  [464,]    0.2070100    0.2062667  0.2030313 #>  [465,]    0.2088063    0.2080565  0.2047930 #>  [466,]    0.2641980    0.2632493  0.2591201 #>  [467,]    0.2100216    0.2092674  0.2059849 #>  [468,]    0.1869612    0.1862899  0.1833678 #>  [469,]    0.1889188    0.1882404  0.1852877 #>  [470,]    0.3011182    0.3000369  0.2953307 #>  [471,]    0.2506709    0.2497708  0.2458530 #>  [472,]    0.1321781    0.1317034  0.1296375 #>  [473,]    0.1934969    0.1928021  0.1897778 #>  [474,]    0.1636417    0.1630541  0.1604965 #>  [475,]    0.2361474    0.2352995  0.2316086 #>  [476,]    0.1987832    0.1980694  0.1949625 #>  [477,]    0.2478503    0.2469603  0.2430867 #>  [478,]    0.2101363    0.2093817  0.2060974 #>  [479,]    0.1985618    0.1978488  0.1947454 #>  [480,]    0.3429655    0.3417340  0.3363738 #>  [481,]    0.1845601    0.1838973  0.1810128 #>  [482,]    0.1912384    0.1905517  0.1875628 #>  [483,]    0.2424947    0.2416240  0.2378339 #>  [484,]    0.1586834    0.1581135  0.1556334 #>  [485,]    0.1346528    0.1341693  0.1320647 #>  [486,]    0.2028862    0.2021576  0.1989866 #>  [487,]    0.1554855    0.1549272  0.1524970 #>  [488,]    0.2150337    0.2142616  0.2109008 #>  [489,]    0.2783468    0.2773473  0.2729969 #>  [490,]    0.2046903    0.2039553  0.2007561 #>  [491,]    0.1793455    0.1787015  0.1758984 #>  [492,]    0.2376977    0.2368442  0.2331291 #>  [493,]    0.1882189    0.1875430  0.1846012 #>  [494,]    0.2294949    0.2286708  0.2250840 #>  [495,]    0.2767008    0.2757073  0.2713827 #>  [496,]    0.1932537    0.1925598  0.1895393 #>  [497,]    0.2274782    0.2266614  0.2231061 #>  [498,]    0.2362496    0.2354013  0.2317089 #>  [499,]    0.2511882    0.2502863  0.2463604 #>  [500,]    0.1895987    0.1889179  0.1859545 #>  [501,]    0.2775827    0.2765860  0.2722476 #>  [502,]    0.2013708    0.2006477  0.1975003 #>  [503,]    0.2342477    0.2334066  0.2297455 #>  [504,]    0.1755124    0.1748821  0.1721389 #>  [505,]    0.1545361    0.1539812  0.1515658 #>  [506,]    0.1891580    0.1884788  0.1855224 #>  [507,]    0.2410724    0.2402068  0.2364390 #>  [508,]    0.1705869    0.1699743  0.1673081 #>  [509,]    0.1846008    0.1839379  0.1810527 #>  [510,]    0.2452925    0.2444117  0.2405780 #>  [511,]    0.2336408    0.2328018  0.2291502 #>  [512,]    0.1845175    0.1838549  0.1809710 #>  [513,]    0.2145704    0.2137999  0.2104463 #>  [514,]    0.2042629    0.2035295  0.2003370 #>  [515,]    0.1724497    0.1718305  0.1691352 #>  [516,]    0.2815514    0.2805404  0.2761400 #>  [517,]    0.2235356    0.2227329  0.2192392 #>  [518,]    0.1705482    0.1699358  0.1672702 #>  [519,]    0.2072745    0.2065302  0.2032906 #>  [520,]    0.1625565    0.1619728  0.1594321 #>  [521,]    0.3060694    0.3049704  0.3001869 #>  [522,]    0.2507943    0.2498937  0.2459740 #>  [523,]    0.2088600    0.2081100  0.2048456 #>  [524,]    0.2123418    0.2115794  0.2082606 #>  [525,]    0.2729041    0.2719242  0.2676589 #>  [526,]    0.1995906    0.1988739  0.1957544 #>  [527,]    0.2208487    0.2200557  0.2166040 #>  [528,]    0.2094186    0.2086667  0.2053936 #>  [529,]    0.1461427    0.1456179  0.1433338 #>  [530,]    0.2186808    0.2178956  0.2144777 #>  [531,]    0.1942698    0.1935722  0.1905359 #>  [532,]    0.1977958    0.1970855  0.1939941 #>  [533,]    0.1856025    0.1849360  0.1820351 #>  [534,]    0.2288206    0.2279990  0.2244227 #>  [535,]    0.2288076    0.2279860  0.2244099 #>  [536,]    0.1962897    0.1955849  0.1925170 #>  [537,]    0.1981813    0.1974697  0.1943722 #>  [538,]    0.2232604    0.2224587  0.2189693 #>  [539,]    0.1937939    0.1930981  0.1900691 #>  [540,]    0.2030222    0.2022932  0.1991201 #>  [541,]    0.1769461    0.1763107  0.1735451 #>  [542,]    0.2512413    0.2503391  0.2464124 #>  [543,]    0.2540659    0.2531536  0.2491827 #>  [544,]    0.2519139    0.2510093  0.2470721 #>  [545,]    0.2270846    0.2262692  0.2227200 #>  [546,]    0.1990048    0.1982902  0.1951799 #>  [547,]    0.2539445    0.2530326  0.2490636 #>  [548,]    0.1899285    0.1892465  0.1862780 #>  [549,]    0.2471539    0.2462664  0.2424036 #>  [550,]    0.2782968    0.2772975  0.2729479 #>  [551,]    0.3181974    0.3170548  0.3120817 #>  [552,]    0.3118846    0.3107647  0.3058903 #>  [553,]    0.1763356    0.1757024  0.1729464 #>  [554,]    0.1891677    0.1884885  0.1855319 #>  [555,]    0.2372900    0.2364379  0.2327293 #>  [556,]    0.2175831    0.2168018  0.2134011 #>  [557,]    0.2474013    0.2465129  0.2426462 #>  [558,]    0.2433254    0.2424517  0.2386488 #>  [559,]    0.2706413    0.2696695  0.2654396 #>  [560,]    0.2010492    0.2003272  0.1971850 #>  [561,]    0.2166088    0.2158310  0.2124455 #>  [562,]    0.1892672    0.1885876  0.1856294 #>  [563,]    0.1705805    0.1699680  0.1673019 #>  [564,]    0.1856813    0.1850145  0.1821124 #>  [565,]    0.2318399    0.2310074  0.2273839 #>  [566,]    0.1586208    0.1580512  0.1555720 #>  [567,]    0.2031645    0.2024350  0.1992597 #>  [568,]    0.2470156    0.2461287  0.2422680 #>  [569,]    0.2812886    0.2802786  0.2758823 #>  [570,]    0.1633045    0.1627181  0.1601657 #>  [571,]    0.2280681    0.2272492  0.2236846 #>  [572,]    0.2122543    0.2114921  0.2081748 #>  [573,]    0.1899740    0.1892918  0.1863226 #>  [574,]    0.2609128    0.2599759  0.2558980 #>  [575,]    0.2616421    0.2607026  0.2566134 #>  [576,]    0.2040519    0.2033192  0.2001300 #>  [577,]    0.2345027    0.2336606  0.2299955 #>  [578,]    0.2117060    0.2109458  0.2076369 #>  [579,]    0.2347096    0.2338668  0.2301985 #>  [580,]    0.2128494    0.2120851  0.2087584 #>  [581,]    0.1841836    0.1835223  0.1806436 #>  [582,]    0.2096344    0.2088816  0.2056052 #>  [583,]    0.2260761    0.2252643  0.2217309 #>  [584,]    0.2274211    0.2266044  0.2230500 #>  [585,]    0.1895674    0.1888867  0.1859239 #>  [586,]    0.2303430    0.2295159  0.2259158 #>  [587,]    0.2572504    0.2563266  0.2523061 #>  [588,]    0.1963712    0.1956661  0.1925969 #>  [589,]    0.2551336    0.2542174  0.2502299 #>  [590,]    0.1602203    0.1596450  0.1571408 #>  [591,]    0.2214925    0.2206972  0.2172354 #>  [592,]    0.1774541    0.1768169  0.1740433 #>  [593,]    0.2701118    0.2691419  0.2649203 #>  [594,]    0.1644104    0.1638200  0.1612504 #>  [595,]    0.1908652    0.1901798  0.1871967 #>  [596,]    0.2003543    0.1996348  0.1965034 #>  [597,]    0.2112187    0.2104602  0.2071590 #>  [598,]    0.2512059    0.2503039  0.2463777 #>  [599,]    0.1864722    0.1858026  0.1828881 #>  [600,]    0.1536171    0.1530654  0.1506645 #>  [601,]    0.1467382    0.1462113  0.1439178 #>  [602,]    0.1982241    0.1975123  0.1944142 #>  [603,]    0.2643938    0.2634444  0.2593122 #>  [604,]    0.1950101    0.1943098  0.1912619 #>  [605,]    0.1961536    0.1954492  0.1923835 #>  [606,]    0.1943122    0.1936144  0.1905774 #>  [607,]    0.2098786    0.2091250  0.2058447 #>  [608,]    0.2064431    0.2057019  0.2024753 #>  [609,]    0.2163549    0.2155780  0.2121965 #>  [610,]    0.1920491    0.1913595  0.1883578 #>  [611,]    0.1710755    0.1704612  0.1677874 #>  [612,]    0.1539696    0.1534167  0.1510102 #>  [613,]    0.2042892    0.2035556  0.2003627 #>  [614,]    0.2410389    0.2401734  0.2364061 #>  [615,]    0.2240717    0.2232671  0.2197650 #>  [616,]    0.1640744    0.1634852  0.1609208 #>  [617,]    0.1741387    0.1735134  0.1707917 #>  [618,]    0.1964467    0.1957413  0.1926709 #>  [619,]    0.1961246    0.1954204  0.1923550 #>  [620,]    0.2066757    0.2059335  0.2027033 #>  [621,]    0.2178825    0.2171001  0.2136947 #>  [622,]    0.2291630    0.2283401  0.2247585 #>  [623,]    0.2146256    0.2138549  0.2105004 #>  [624,]    0.1976735    0.1969637  0.1938742 #>  [625,]    0.2089112    0.2081611  0.2048959 #>  [626,]    0.2329216    0.2320852  0.2284448 #>  [627,]    0.2674528    0.2664925  0.2623124 #>  [628,]    0.1768317    0.1761967  0.1734329 #>  [629,]    0.2167336    0.2159553  0.2125679 #>  [630,]    0.2740726    0.2730884  0.2688049 #>  [631,]    0.2099922    0.2092382  0.2059561 #>  [632,]    0.2677809    0.2668194  0.2626342 #>  [633,]    0.2683367    0.2673732  0.2631793 #>  [634,]    0.1973992    0.1966904  0.1936052 #>  [635,]    0.1748244    0.1741966  0.1714642 #>  [636,]    0.2049225    0.2041867  0.2009838 #>  [637,]    0.2163912    0.2156142  0.2122321 #>  [638,]    0.1976389    0.1969293  0.1938403 #>  [639,]    0.2441524    0.2432757  0.2394597 #>  [640,]    0.1625512    0.1619675  0.1594269 #>  [641,]    0.2946856    0.2936275  0.2890218 #>  [642,]    0.1697784    0.1691687  0.1665152 #>  [643,]    0.1924485    0.1917575  0.1887496 #>  [644,]    0.2900554    0.2890139  0.2844806 #>  [645,]    0.2632906    0.2623452  0.2582302 #>  [646,]    0.2812900    0.2802800  0.2758837 #>  [647,]    0.1296940    0.1292283  0.1272012 #>  [648,]    0.2328397    0.2320037  0.2283645 #>  [649,]    0.1601324    0.1595574  0.1570546 #>  [650,]    0.2219832    0.2211861  0.2177166 #>  [651,]    0.1682133    0.1676092  0.1649801 #>  [652,]    0.2299902    0.2291643  0.2255697 #>  [653,]    0.2091682    0.2084172  0.2051480 #>  [654,]    0.1915884    0.1909004  0.1879060 #>  [655,]    0.1953865    0.1946849  0.1916311 #>  [656,]    0.2421982    0.2413285  0.2375432 #>  [657,]    0.2033758    0.2026455  0.1994669 #>  [658,]    0.2227598    0.2219599  0.2184783 #>  [659,]    0.2009624    0.2002407  0.1970998 #>  [660,]    0.2148927    0.2141211  0.2107625 #>  [661,]    0.1833854    0.1827269  0.1798606 #>  [662,]    0.2679662    0.2670040  0.2628160 #>  [663,]    0.1742269    0.1736013  0.1708782 #>  [664,]    0.2114255    0.2106663  0.2073619 #>  [665,]    0.1626908    0.1621066  0.1595638 #>  [666,]    0.2206248    0.2198326  0.2163844 #>  [667,]    0.2438592    0.2429836  0.2391722 #>  [668,]    0.1679192    0.1673162  0.1646917 #>  [669,]    0.2256729    0.2248626  0.2213355 #>  [670,]    0.2711197    0.2701462  0.2659089 #>  [671,]    0.2260361    0.2252245  0.2216916 #>  [672,]    0.3177038    0.3165630  0.3115976 #>  [673,]    0.2251752    0.2243667  0.2208473 #>  [674,]    0.2839089    0.2828895  0.2784523 #>  [675,]    0.2417405    0.2408724  0.2370942 #>  [676,]    0.2085533    0.2078044  0.2045449 #>  [677,]    0.2234682    0.2226658  0.2191732 #>  [678,]    0.2430822    0.2422094  0.2384103 #>  [679,]    0.1913345    0.1906474  0.1876570 #>  [680,]    0.1986303    0.1979171  0.1948126 #>  [681,]    0.2307293    0.2299008  0.2262946 #>  [682,]    0.1902750    0.1895917  0.1866178 #>  [683,]    0.2094517    0.2086996  0.2054260 #>  [684,]    0.1766569    0.1760225  0.1732614 #>  [685,]    0.2165970    0.2158193  0.2124340 #>  [686,]    0.2393053    0.2384460  0.2347058 #>  [687,]    0.2143715    0.2136017  0.2102512 #>  [688,]    0.1893789    0.1886989  0.1857390 #>  [689,]    0.2468034    0.2459172  0.2420598 #>  [690,]    0.1833123    0.1826540  0.1797889 #>  [691,]    0.1571333    0.1565690  0.1541131 #>  [692,]    0.2349474    0.2341037  0.2304316 #>  [693,]    0.2497228    0.2488261  0.2449231 #>  [694,]    0.2676123    0.2666514  0.2624689 #>  [695,]    0.2042195    0.2034861  0.2002943 #>  [696,]    0.1855728    0.1849064  0.1820060 #>  [697,]    0.1680793    0.1674757  0.1648487 #>  [698,]    0.3082865    0.3071795  0.3023613 #>  [699,]    0.1881636    0.1874880  0.1845471 #>  [700,]    0.1954349    0.1947332  0.1916786 #>  [701,]    0.1820353    0.1813816  0.1785365 #>  [702,]    0.2427905    0.2419187  0.2381240 #>  [703,]    0.1724049    0.1717858  0.1690912 #>  [704,]    0.1870757    0.1864040  0.1834800 #>  [705,]    0.1697271    0.1691177  0.1664649 #>  [706,]    0.1340485    0.1335672  0.1314721 #>  [707,]    0.1855399    0.1848736  0.1819738 #>  [708,]    0.1937013    0.1930058  0.1899784 #>  [709,]    0.1727249    0.1721046  0.1694050 #>  [710,]    0.3069077    0.3058057  0.3010090 #>  [711,]    0.2092768    0.2085253  0.2052544 #>  [712,]    0.1881655    0.1874898  0.1845489 #>  [713,]    0.1999435    0.1992256  0.1961006 #>  [714,]    0.3006039    0.2995245  0.2948263 #>  [715,]    0.2426787    0.2418073  0.2380144 #>  [716,]    0.2999424    0.2988653  0.2941776 #>  [717,]    0.1995829    0.1988663  0.1957469 #>  [718,]    0.1883378    0.1876615  0.1847179 #>  [719,]    0.2068235    0.2060808  0.2028483 #>  [720,]    0.2625953    0.2616524  0.2575483 #>  [721,]    0.1801037    0.1794570  0.1766420 #>  [722,]    0.2040949    0.2033620  0.2001721 #>  [723,]    0.2253290    0.2245198  0.2209981 #>  [724,]    0.2400468    0.2391848  0.2354331 #>  [725,]    0.1924700    0.1917788  0.1887706 #>  [726,]    0.2392925    0.2384332  0.2346933 #>  [727,]    0.2670019    0.2660432  0.2618702 #>  [728,]    0.1931215    0.1924280  0.1894097 #>  [729,]    0.2064099    0.2056687  0.2024427 #>  [730,]    0.3541318    0.3528602  0.3473255 #>  [731,]    0.2508758    0.2499750  0.2460540 #>  [732,]    0.2691292    0.2681628  0.2639566 #>  [733,]    0.2171841    0.2164043  0.2130098 #>  [734,]    0.1803673    0.1797196  0.1769006 #>  [735,]    0.1841432    0.1834820  0.1806040 #>  [736,]    0.1958072    0.1951041  0.1920437 #>  [737,]    0.1482894    0.1477569  0.1454392 #>  [738,]    0.1812911    0.1806401  0.1778067 #>  [739,]    0.1883434    0.1876670  0.1847233 #>  [740,]    0.2033298    0.2025997  0.1994218 #>  [741,]    0.2007111    0.1999904  0.1968534 #>  [742,]    0.2253761    0.2245668  0.2210443 #>  [743,]    0.1677704    0.1671680  0.1645458 #>  [744,]    0.2497267    0.2488300  0.2449269 #>  [745,]    0.2178334    0.2170512  0.2136466 #>  [746,]    0.2003982    0.1996786  0.1965465 #>  [747,]    0.2904020    0.2893592  0.2848205 #>  [748,]    0.3017781    0.3006945  0.2959780 #>  [749,]    0.1802326    0.1795854  0.1767684 #>  [750,]    0.2534382    0.2525281  0.2485671 #>  [751,]    0.1871789    0.1865068  0.1835813 #>  [752,]    0.2352127    0.2343681  0.2306918 #>  [753,]    0.1568842    0.1563208  0.1538688 #>  [754,]    0.2249673    0.2241595  0.2206434 #>  [755,]    0.1499792    0.1494407  0.1470966 #>  [756,]    0.1657544    0.1651592  0.1625685 #>  [757,]    0.2238454    0.2230416  0.2195430 #>  [758,]    0.1777719    0.1771336  0.1743551 #>  [759,]    0.1884328    0.1877562  0.1848111 #>  [760,]    0.2719402    0.2709637  0.2667136 #>  [761,]    0.1695430    0.1689342  0.1662843 #>  [762,]    0.1848899    0.1842260  0.1813363 #>  [763,]    0.2454332    0.2445519  0.2407160 #>  [764,]    0.2364287    0.2355797  0.2318845 #>  [765,]    0.1919373    0.1912481  0.1882482 #>  [766,]    0.2359299    0.2350828  0.2313954 #>  [767,]    0.2347334    0.2338906  0.2302218 #>  [768,]    0.1696459    0.1690368  0.1663853 #>  [769,]    0.1859697    0.1853019  0.1823953 #>  [770,]    0.2421374    0.2412679  0.2374835 #>  [771,]    0.2050987    0.2043622  0.2011566 #>  [772,]    0.3209753    0.3198228  0.3148063 #>  [773,]    0.1828812    0.1822245  0.1793661 #>  [774,]    0.2126484    0.2118848  0.2085613 #>  [775,]    0.1882617    0.1875857  0.1846432 #>  [776,]    0.2191612    0.2183743  0.2149490 #>  [777,]    0.2207350    0.2199424  0.2164925 #>  [778,]    0.2255126    0.2247029  0.2211782 #>  [779,]    0.1656464    0.1650516  0.1624626 #>  [780,]    0.2494606    0.2485648  0.2446660 #>  [781,]    0.1959664    0.1952627  0.1921999 #>  [782,]    0.2058255    0.2050864  0.2018695 #>  [783,]    0.2356143    0.2347682  0.2310858 #>  [784,]    0.3157003    0.3145667  0.3096326 #>  [785,]    0.1805228    0.1798746  0.1770531 #>  [786,]    0.2071531    0.2064092  0.2031715 #>  [787,]    0.3269192    0.3257453  0.3206359 #>  [788,]    0.2220741    0.2212766  0.2178058 #>  [789,]    0.2199244    0.2191347  0.2156974 #>  [790,]    0.2788014    0.2778003  0.2734428 #>  [791,]    0.1724584    0.1718392  0.1691437 #>  [792,]    0.1888677    0.1881895  0.1852376 #>  [793,]    0.1552650    0.1547074  0.1522807 #>  [794,]    0.2727899    0.2718104  0.2675469 #>  [795,]    0.2209067    0.2201135  0.2166608 #>  [796,]    0.2995476    0.2984721  0.2937905 #>  [797,]    0.1476802    0.1471499  0.1448417 #>  [798,]    0.1860580    0.1853899  0.1824819 #>  [799,]    0.1982699    0.1975580  0.1944591 #>  [800,]    0.2296187    0.2287942  0.2252054 #>  [801,]    0.2261601    0.2253480  0.2218133 #>  [802,]    0.2179253    0.2171428  0.2137367 #>  [803,]    0.2523227    0.2514167  0.2474731 #>  [804,]    0.1903981    0.1897144  0.1867386 #>  [805,]    0.1947784    0.1940790  0.1910348 #>  [806,]    0.1772356    0.1765992  0.1738291 #>  [807,]    0.2055108    0.2047728  0.2015608 #>  [808,]    0.2105797    0.2098235  0.2065323 #>  [809,]    0.1667621    0.1661633  0.1635568 #>  [810,]    0.2257154    0.2249049  0.2213772 #>  [811,]    0.2408542    0.2399893  0.2362250 #>  [812,]    0.1981043    0.1973930  0.1942967 #>  [813,]    0.1906124    0.1899279  0.1869488 #>  [814,]    0.2034463    0.2027157  0.1995360 #>  [815,]    0.2575407    0.2566159  0.2525908 #>  [816,]    0.1412451    0.1407379  0.1385303 #>  [817,]    0.2196024    0.2188139  0.2153816 #>  [818,]    0.1737184    0.1730946  0.1703795 #>  [819,]    0.2542495    0.2533365  0.2493627 #>  [820,]    0.1943755    0.1936775  0.1906395 #>  [821,]    0.2054665    0.2047287  0.2015174 #>  [822,]    0.2205510    0.2197590  0.2163119 #>  [823,]    0.1746087    0.1739817  0.1712527 #>  [824,]    0.2489711    0.2480771  0.2441858 #>  [825,]    0.2704530    0.2694819  0.2652550 #>  [826,]    0.3277764    0.3265994  0.3214766 #>  [827,]    0.1874231    0.1867501  0.1838208 #>  [828,]    0.2247542    0.2239471  0.2204344 #>  [829,]    0.1890730    0.1883940  0.1854389 #>  [830,]    0.2208932    0.2201000  0.2166476 #>  [831,]    0.2380163    0.2371617  0.2334417 #>  [832,]    0.2471464    0.2462589  0.2423962 #>  [833,]    0.2003577    0.1996383  0.1965068 #>  [834,]    0.1828864    0.1822297  0.1793712 #>  [835,]    0.1463148    0.1457894  0.1435026 #>  [836,]    0.1563795    0.1558180  0.1533739 #>  [837,]    0.1562699    0.1557088  0.1532664 #>  [838,]    0.1843866    0.1837245  0.1808426 #>  [839,]    0.2241229    0.2233181  0.2198152 #>  [840,]    0.2142298    0.2134605  0.2101122 #>  [841,]    0.2025835    0.2018561  0.1986898 #>  [842,]    0.2480640    0.2471733  0.2432963 #>  [843,]    0.2184014    0.2176172  0.2142037 #>  [844,]    0.2764640    0.2754713  0.2711505 #>  [845,]    0.3009718    0.2998911  0.2951872 #>  [846,]    0.1649546    0.1643622  0.1617841 #>  [847,]    0.2135114    0.2127447  0.2094077 #>  [848,]    0.2091940    0.2084428  0.2051732 #>  [849,]    0.2594212    0.2584897  0.2544351 #>  [850,]    0.2497401    0.2488433  0.2449401 #>  [851,]    0.2097431    0.2089900  0.2057118 #>  [852,]    0.2094115    0.2086596  0.2053866 #>  [853,]    0.1836625    0.1830030  0.1801325 #>  [854,]    0.2188747    0.2180888  0.2146678 #>  [855,]    0.1942031    0.1935058  0.1904705 #>  [856,]    0.2098397    0.2090863  0.2058066 #>  [857,]    0.2924079    0.2913580  0.2867879 #>  [858,]    0.2246895    0.2238826  0.2203709 #>  [859,]    0.3263201    0.3251483  0.3200483 #>  [860,]    0.1343073    0.1338250  0.1317258 #>  [861,]    0.2067682    0.2060257  0.2027940 #>  [862,]    0.1965664    0.1958606  0.1927884 #>  [863,]    0.1574733    0.1569079  0.1544466 #>  [864,]    0.2579787    0.2570523  0.2530203 #>  [865,]    0.2889020    0.2878646  0.2833493 #>  [866,]    0.1614814    0.1609015  0.1583777 #>  [867,]    0.2749098    0.2739227  0.2696261 #>  [868,]    0.1876354    0.1869616  0.1840290 #>  [869,]    0.1874563    0.1867832  0.1838533 #>  [870,]    0.1889536    0.1882751  0.1853219 #>  [871,]    0.1679358    0.1673328  0.1647081 #>  [872,]    0.2135040    0.2127374  0.2094004 #>  [873,]    0.2221727    0.2213749  0.2179025 #>  [874,]    0.2285615    0.2277408  0.2241685 #>  [875,]    0.1487582    0.1482240  0.1458990 #>  [876,]    0.3070277    0.3059253  0.3011267 #>  [877,]    0.2089572    0.2082069  0.2049410 #>  [878,]    0.2334560    0.2326177  0.2289690 #>  [879,]    0.2048390    0.2041034  0.2009019 #>  [880,]    0.2581383    0.2572114  0.2531769 #>  [881,]    0.2466669    0.2457812  0.2419261 #>  [882,]    0.2299953    0.2291695  0.2255748 #>  [883,]    0.2346767    0.2338340  0.2301662 #>  [884,]    0.2321579    0.2313243  0.2276958 #>  [885,]    0.1867806    0.1861099  0.1831907 #>  [886,]    0.2235118    0.2227092  0.2192158 #>  [887,]    0.2228947    0.2220943  0.2186106 #>  [888,]    0.1997226    0.1990054  0.1958839 #>  [889,]    0.1984357    0.1977232  0.1946217 #>  [890,]    0.2106539    0.2098975  0.2066051 #>  [891,]    0.2386841    0.2378270  0.2340965 #>  [892,]    0.1820736    0.1814198  0.1785740 #>  [893,]    0.2172979    0.2165176  0.2131213 #>  [894,]    0.1739050    0.1732805  0.1705624 #>  [895,]    0.2669468    0.2659882  0.2618161 #>  [896,]    0.2853449    0.2843203  0.2798606 #>  [897,]    0.2454990    0.2446174  0.2407804 #>  [898,]    0.1487571    0.1482229  0.1458978 #>  [899,]    0.1770426    0.1764068  0.1736397 #>  [900,]    0.1687501    0.1681441  0.1655066 #>  [901,]    0.1839667    0.1833061  0.1804308 #>  [902,]    0.1764988    0.1758650  0.1731064 #>  [903,]    0.2287598    0.2279384  0.2243631 #>  [904,]    0.2350282    0.2341842  0.2305109 #>  [905,]    0.2517692    0.2508651  0.2469301 #>  [906,]    0.1785596    0.1779185  0.1751277 #>  [907,]    0.2700199    0.2690504  0.2648302 #>  [908,]    0.2649723    0.2640208  0.2598795 #>  [909,]    0.1783531    0.1777127  0.1749252 #>  [910,]    0.1785966    0.1779552  0.1751639 #>  [911,]    0.2130102    0.2122454  0.2089161 #>  [912,]    0.1986558    0.1979425  0.1948376 #>  [913,]    0.3398828    0.3386624  0.3333504 #>  [914,]    0.1661972    0.1656004  0.1630028 #>  [915,]    0.1357051    0.1352178  0.1330967 #>  [916,]    0.2358648    0.2350179  0.2313315 #>  [917,]    0.1831459    0.1824883  0.1796258 #>  [918,]    0.2008907    0.2001693  0.1970295 #>  [919,]    0.2263143    0.2255017  0.2219646 #>  [920,]    0.1799924    0.1793460  0.1765328 #>  [921,]    0.2263486    0.2255358  0.2219981 #>  [922,]    0.2301681    0.2293417  0.2257444 #>  [923,]    0.1811974    0.1805468  0.1777147 #>  [924,]    0.3256337    0.3244644  0.3193751 #>  [925,]    0.2452314    0.2443508  0.2405180 #>  [926,]    0.2650201    0.2640685  0.2599264 #>  [927,]    0.2175814    0.2168001  0.2133995 #>  [928,]    0.1949401    0.1942401  0.1911933 #>  [929,]    0.2495888    0.2486926  0.2447917 #>  [930,]    0.2657056    0.2647515  0.2605988 #>  [931,]    0.2206767    0.2198843  0.2164353 #>  [932,]    0.2260498    0.2252381  0.2217051 #>  [933,]    0.2101729    0.2094182  0.2061333 #>  [934,]    0.1801089    0.1794621  0.1766471 #>  [935,]    0.2204132    0.2196218  0.2161769 #>  [936,]    0.3526587    0.3513925  0.3458809 #>  [937,]    0.2057890    0.2050501  0.2018337 #>  [938,]    0.1963727    0.1956675  0.1925984 #>  [939,]    0.1897342    0.1890529  0.1860874 #>  [940,]    0.2165680    0.2157903  0.2124055 #>  [941,]    0.2261298    0.2253178  0.2217835 #>  [942,]    0.2021019    0.2013762  0.1982174 #>  [943,]    0.2098784    0.2091248  0.2058445 #>  [944,]    0.2010393    0.2003175  0.1971753 #>  [945,]    0.2001986    0.1994797  0.1963507 #>  [946,]    0.2233960    0.2225938  0.2191023 #>  [947,]    0.2285512    0.2277305  0.2241584 #>  [948,]    0.2129871    0.2122223  0.2088935 #>  [949,]    0.2511313    0.2502295  0.2463046 #>  [950,]    0.1875637    0.1868902  0.1839586 #>  [951,]    0.1708613    0.1702478  0.1675773 #>  [952,]    0.1788875    0.1782451  0.1754492 #>  [953,]    0.1871642    0.1864922  0.1835669 #>  [954,]    0.2088993    0.2081492  0.2048842 #>  [955,]    0.3081876    0.3070809  0.3022643 #>  [956,]    0.2251360    0.2243276  0.2208089 #>  [957,]    0.2056334    0.2048950  0.2016810 #>  [958,]    0.2109252    0.2101679  0.2068712 #>  [959,]    0.1571834    0.1566189  0.1541622 #>  [960,]    0.2208154    0.2200225  0.2165714 #>  [961,]    0.2605240    0.2595885  0.2555167 #>  [962,]    0.2149841    0.2142122  0.2108522 #>  [963,]    0.1943111    0.1936134  0.1905764 #>  [964,]    0.2653273    0.2643746  0.2602278 #>  [965,]    0.2000244    0.1993061  0.1961799 #>  [966,]    0.2799453    0.2789401  0.2745648 #>  [967,]    0.2222055    0.2214076  0.2179346 #>  [968,]    0.3277806    0.3266037  0.3214810 #>  [969,]    0.2367353    0.2358853  0.2321853 #>  [970,]    0.2730699    0.2720894  0.2678215 #>  [971,]    0.1735754    0.1729521  0.1702393 #>  [972,]    0.2676936    0.2667324  0.2625485 #>  [973,]    0.1849323    0.1842682  0.1813778 #>  [974,]    0.1927316    0.1920395  0.1890272 #>  [975,]    0.2931811    0.2921284  0.2875462 #>  [976,]    0.1919396    0.1912504  0.1882505 #>  [977,]    0.2213468    0.2205520  0.2170925 #>  [978,]    0.2381854    0.2373301  0.2336074 #>  [979,]    0.2079217    0.2071751  0.2039254 #>  [980,]    0.1796219    0.1789769  0.1761695 #>  [981,]    0.1832720    0.1826139  0.1797494 #>  [982,]    0.2508984    0.2499975  0.2460761 #>  [983,]    0.3084646    0.3073570  0.3025360 #>  [984,]    0.2231037    0.2223026  0.2188156 #>  [985,]    0.2756821    0.2746922  0.2703836 #>  [986,]    0.1799676    0.1793213  0.1765085 #>  [987,]    0.3213270    0.3201732  0.3151513 #>  [988,]    0.1817291    0.1810766  0.1782363 #>  [989,]    0.1628730    0.1622881  0.1597425 #>  [990,]    0.2073679    0.2066233  0.2033822 #>  [991,]    0.2073953    0.2066505  0.2034091 #>  [992,]    0.1803185    0.1796710  0.1768528 #>  [993,]    0.2959722    0.2949094  0.2902836 #>  [994,]    0.3343825    0.3331818  0.3279558 #>  [995,]    0.2248740    0.2240665  0.2205519 #>  [996,]    0.2215136    0.2207181  0.2172560 #>  [997,]    0.1889869    0.1883083  0.1853546 #>  [998,]    0.2154335    0.2146599  0.2112929 #>  [999,]    0.2557244    0.2548062  0.2508094 #> [1000,]    0.1972213    0.1965131  0.1934306"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator ‚Äî %>%","title":"Pipe operator ‚Äî %>%","text":"See magrittr::[\\%>\\%][magrittr::pipe] details.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator ‚Äî %>%","text":"","code":"lhs %>% rhs"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator ‚Äî %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator ‚Äî %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/rbeta_dmp.html","id":null,"dir":"Reference","previous_headings":"","what":"Customised sampling functions for the Beta distributions ‚Äî rbeta_dmp","title":"Customised sampling functions for the Beta distributions ‚Äî rbeta_dmp","text":"generate random samples beta distribution, parameterized mean sd, returning NAs conditions met","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/rbeta_dmp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Customised sampling functions for the Beta distributions ‚Äî rbeta_dmp","text":"","code":"rbeta_dmp(n, p, sd)"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/rbeta_dmp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Customised sampling functions for the Beta distributions ‚Äî rbeta_dmp","text":"n integer value. number samples generate p decimal value. value used calculate parameters beta distribution sd decimal value. standard deviation beta distribution simulate","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/rbeta_dmp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Customised sampling functions for the Beta distributions ‚Äî rbeta_dmp","text":"vector samples values beta distribution","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/rbeta_dmp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Customised sampling functions for the Beta distributions ‚Äî rbeta_dmp","text":"","code":"rbeta_dmp(n=100,p=0.9,sd=0.01) #>   [1] 0.8857523 0.9079071 0.9057583 0.8982009 0.8824196 0.9059923 0.9067086 #>   [8] 0.9154540 0.9004098 0.9071190 0.9052410 0.9052908 0.9049867 0.8949529 #>  [15] 0.8925666 0.8943662 0.8914263 0.8990316 0.9003875 0.9001811 0.9049556 #>  [22] 0.9084282 0.9198257 0.8811038 0.8982850 0.8930480 0.9024935 0.8837448 #>  [29] 0.9046406 0.8886300 0.9078339 0.8964793 0.9068060 0.8876839 0.9181144 #>  [36] 0.8959842 0.8966231 0.8919587 0.8860666 0.9104228 0.8930420 0.8933119 #>  [43] 0.9033306 0.9123358 0.8889331 0.8945023 0.9096904 0.9121222 0.9095296 #>  [50] 0.9006490 0.9081689 0.8956040 0.8910949 0.9053384 0.9075271 0.8871973 #>  [57] 0.9021670 0.9161033 0.8896825 0.8973484 0.9060107 0.9044530 0.8969437 #>  [64] 0.8966133 0.8956085 0.9043686 0.9076032 0.9005918 0.9167544 0.9022766 #>  [71] 0.8968314 0.8995840 0.8946710 0.8976004 0.8904362 0.8726950 0.8965178 #>  [78] 0.8962447 0.8792324 0.8985140 0.8965436 0.8968504 0.8913548 0.9028636 #>  [85] 0.9176296 0.8954106 0.9046085 0.9138971 0.9146235 0.9014047 0.8948808 #>  [92] 0.9077244 0.9110331 0.9002167 0.8983104 0.9030566 0.9114254 0.8926688 #>  [99] 0.9045815 0.9100473"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/rotor_grids_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample rotor grids for generated_rotor_grids unit test ‚Äî rotor_grids_test","title":"Sample rotor grids for generated_rotor_grids unit test ‚Äî rotor_grids_test","text":"Sample rotor grids generated_rotor_grids unit test","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/rotor_grids_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample rotor grids for generated_rotor_grids unit test ‚Äî rotor_grids_test","text":"","code":"rotor_grids_test"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/rotor_grids_test.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample rotor grids for generated_rotor_grids unit test ‚Äî rotor_grids_test","text":"list data frames","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/rtnorm_dmp.html","id":null,"dir":"Reference","previous_headings":"","what":"Customised sampling of Truncated Normal distribution ‚Äî rtnorm_dmp","title":"Customised sampling of Truncated Normal distribution ‚Äî rtnorm_dmp","text":"Wrapper msm::rtnorm() function, improving outputs management user feedback edge cases","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/rtnorm_dmp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Customised sampling of Truncated Normal distribution ‚Äî rtnorm_dmp","text":"","code":"rtnorm_dmp(n, mean = 0, sd = 1, lower = -Inf, upper = Inf)"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/rtnorm_dmp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Customised sampling of Truncated Normal distribution ‚Äî rtnorm_dmp","text":"n integer value. number samples generate mean decimal value. mean truncated normal distribution sd decimal value. standard deviation distribution simulate lower decimal value. lower limit distribution upper decimal value. upper limit distribution","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/rtnorm_dmp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Customised sampling of Truncated Normal distribution ‚Äî rtnorm_dmp","text":"vector samples values truncated normal distribution","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/rtnorm_dmp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Customised sampling of Truncated Normal distribution ‚Äî rtnorm_dmp","text":"","code":"rtnorm_dmp(n=10,mean=0.4,sd=0.2) #>  [1] 0.3622766 0.5180891 0.4729449 0.1683407 0.4783579 0.1973194 0.5755679 #>  [8] 0.4755823 0.6969956 0.4172149"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/sample_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter sampling whiz ‚Äî sample_params","title":"Parameter sampling whiz ‚Äî sample_params","text":"Generates random samples stochastic CRM parameters. internal use.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/sample_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameter sampling whiz ‚Äî sample_params","text":"","code":"sample_params(   model_options,   mod_mths,   n_iter = 10,   flt_speed_pars,   body_lt_pars,   wing_span_pars,   avoid_bsc_pars,   avoid_ext_pars,   noct_act_pars,   prop_crh_pars,   bird_dens_opt = \"tnorm\",   bird_dens_dt,   gen_fhd_boots = NULL,   site_fhd_boots = NULL,   rtr_radius_pars,   air_gap_pars,   bld_width_pars,   rtn_pitch_opt = \"probDist\",   bld_pitch_pars,   rtn_speed_pars,   windspd_pars,   rtn_pitch_windspd_dt,   trb_wind_avbl,   trb_downtime_pars,   lrg_arr_corr )"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/sample_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter sampling whiz ‚Äî sample_params","text":"model_options Character vector, model options calculating collision risk (see Details section ). mod_mths character vector, names months modelling n_iter integer. number iterations model simulation. flt_speed_pars single row data frame columns mean sd, mean standard deviation species flying speed, metres/sec. Assumed follow Truncated Normal lower bound 0 (tnorm-lw0). body_lt_pars single row data frame columns mean sd, mean standard deviation species body length, metres. Assumed follow tnorm-lw0 distribution. wing_span_pars single row data frame columns mean sd, mean standard deviation species wingspan, metres. Assumed follow tnorm-lw0 distribution. avoid_bsc_pars Single row data frames columns mean sd, mean standard deviation species avoidance rate used basic model (Options 1 2) extended model (Options 3 4) calculations (see Details section). Avoidance rate expresses probability bird flying collision course turbine take evading action avoid collision, assumed follow Beta distribution. avoid_ext_pars Single row data frames columns mean sd, mean standard deviation species avoidance rate used basic model (Options 1 2) extended model (Options 3 4) calculations (see Details section). Avoidance rate expresses probability bird flying collision course turbine take evading action avoid collision, assumed follow Beta distribution. noct_act_pars single row data frame columns mean sd, mean standard deviation species nocturnal flight activity level, expressed proportion daytime activity levels, assumed Beta distributed. prop_crh_pars Required model Option 1, single row data frame columns mean sd. mean standard deviation proportion flights collision risk height derived site survey, assumed Beta distributed. bird_dens_opt Option specifying random sampling mechanism bird densities: \"tnorm\": Sampling density estimates tnorm-lw0 distribution (default value), \"resample\": Re-sample draws bird density estimates (e.g. bootstrap samples), \"qtiles\": Sampling set quantile estimates bird densities. bird_dens_dt data frame monthly estimates bird density within windfarm footprint, expressed number daytime -flight birds/km^2 per month. Data frame format requirements: bird_dens_opt = \"tnorm\", bird_dens_dt must contain following columns: month, (unique) month names, mean, mean number birds flight height per square kilometre month, sd, idem, standard deviation. bird_dens_opt = \"resample\", bird_dens_dt columns must named months (.e. Jan, Feb, ...), containing random samples monthly density estimates. bird_dens_opt = \"qtiles\", bird_dens_dt must comply : First column named p, giving reference probabilities, Remaining columns named months (.e. Jan, Feb, ...), giving quantile estimates bird density given month, reference probabilities column p. gen_fhd_boots Required model Options 2 3, data frame bootstrap samples flight height distributions (FHD) species derived general (country/regional level) data. FHD provides relative frequency distribution bird flights 1-metre height bands, starting sea surface. first column must named height, expressing lower bound height band (thus first element must 0). remaining column provide bootstrap sample proportion bird flights height band, column naming requirements. NOTE: generic_fhd_bootstraps list object generic FHD bootstrap estimates 25 seabird species Johnson et al (2014) (see usage Example Section ). site_fhd_boots Required model Option 4, data frame similar gen_fhd_boots, FHD estimates derived site-specific data. rtr_radius_pars single row data frame columns mean sd, mean standard deviation radius rotor, metres. Assumed follow tnorm-lw0 distribution. air_gap_pars single row data frame columns mean sd, mean standard deviation tip clearance gap, metres, .e. distance minimum rotor tip height highest astronomical tide (HAT). Assumed follow tnorm-lw0 distribution. bld_width_pars single row data frame columns mean sd, mean standard deviation maximum blade width, metres. Assumed tnorm-lw0 distribution. rtn_pitch_opt character string, option specifying sampling mechanism rotation speed blade pitch: \"probDist\": sample rotation speed blade pitch values tnorm-lw0 distribution (default value). \"windSpeedReltn\": generate rotation speed blade pitch values function wind speed intensity. bld_pitch_pars required rtn_pitch_opt = \"probDist\", single row data frame columns mean sd, mean standard deviation blade pitch angle, .e. angle blade surface rotor plane, degrees. Assumed follow tnorm-lw0 distribution. rtn_speed_pars required rtn_pitch_opt = \"probDist\", single row data frame columns mean sd, mean standard deviation operational rotation speed, revolutions per minute. Assumed follow tnorm-lw0 distribution. windspd_pars required rtn_pitch_opt = \"windSpeedReltn\", single row data frame columns mean sd, mean standard deviation wind speed windfarm site, metres/sec. Assumed follow tnorm-lw0 distribution. rtn_pitch_windspd_dt required rtn_pitch_opt = \"windSpeedReltn\", data frame giving relationship wind speed, rotation speed blade pitch values. must contain columns: wind_speed, wind speed m/s, rtn_speed, rotation speed rpm, bld_pitch, blade pitch values degrees. trb_wind_avbl data frame monthly estimates operational wind availability. must contain columns: month, (unique) month names, pctg, percentage time wind conditions allow turbine operation per month. trb_downtime_pars data frame monthly estimates maintenance downtime, assumed follow tnorm-lw0 distribution. must contain following columns: month, (unique) month names, mean, numeric, mean percentage time month turbines operating due maintenance, sd, standard deviation monthly maintenance downtime. lrg_arr_corr Boolean value. TRUE, large array correction applied. correction factor account decay bird density later rows wind farms large array turbines.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/sample_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parameter sampling whiz ‚Äî sample_params","text":"list object element comprising sampled values given CRM parameter","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/sample_params.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parameter sampling whiz ‚Äî sample_params","text":"Collision risk can calculated 4 options, specified model_options: Option 1 - Basic model proportion collision risk height derived site survey (prop_crh_surv). Option 2 - Basic model proportion collision risk height derived generic flight height distribution (gen_fhd). Option 3 - Extended model using generic flight height distribution (gen_fhd). Option 4 - Extended model using site-specific flight height distribution (site_fhd). , Basic model - assumes uniform distribution bird flights collision risk height (.e. minimum maximum height rotor blade). Extended model - takes account distribution bird flight heights collision risk height.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/sample_params.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parameter sampling whiz ‚Äî sample_params","text":"","code":"bird_dens_dt <- data.frame(     month = month.abb,     mean = runif(12, 0.8, 1.5),     sd = runif(12, 0.2, 0.3)   )   # wind availability   trb_wind_avbl <- data.frame(     month = month.abb,     pctg = runif(12, 85, 98)   )    # maintenance downtime   trb_downtime_pars <- data.frame(     month = month.abb,     mean = runif(12, 6, 10),     sd = rep(2, 12))    # Wind speed relationships   wind_rtn_ptch <- data.frame(     wind_speed = seq_len(30),     rtn_speed = 10/(30:1),     bld_pitch = c(rep(90, 4), rep(0, 8), 5:22)     )     bird_dens_opt <- \"tnorm\"   ### extract and standardize month format from monthly data sets   b_dens_mth <- switch (bird_dens_opt,                         tnorm = bird_dens_dt$month,                         resample = names(bird_dens_dt),                         qtiles = names(bird_dens_dt)[names(bird_dens_dt) != \"p\"]   ) %>% format_months()   dwntm_mth <- format_months(trb_downtime_pars$month)   windav_mth <- format_months(trb_wind_avbl$month)   ### Set months to model: only those in common amongst monthly data sets   mod_mths <- Reduce(intersect, list(b_dens_mth, dwntm_mth, windav_mth))   ### Order chronologically   mod_mths <- mod_mths[order(match(mod_mths, month.abb))]    param_draws <- sample_params(     model_options = c(1,2,3),     n_iter = 10,     mod_mths = mod_mths,     flt_speed_pars = data.frame(mean=7.26,sd=1.5),     body_lt_pars = data.frame(mean=0.39,sd=0.005),     wing_span_pars = data.frame(mean=1.08,sd=0.04),     avoid_bsc_pars = data.frame(mean=0.99,sd=0.001),     avoid_ext_pars = data.frame(mean=0.96,sd=0.002),     noct_act_pars = data.frame(mean=0.033,sd=0.005),     prop_crh_pars = data.frame(mean=0.06,sd=0.009),     bird_dens_opt = \"tnorm\",     bird_dens_dt = bird_dens_dt,     gen_fhd_boots = generic_fhd_bootstraps[[1]],     site_fhd_boots = NULL,     rtr_radius_pars = data.frame(mean=80,sd=0),     air_gap_pars = data.frame(mean=36,sd=0),     bld_width_pars = data.frame(mean=8,sd=0),     rtn_pitch_opt = \"windSpeedReltn\",     bld_pitch_pars = NULL,     rtn_speed_pars = NULL,     windspd_pars = data.frame(mean=7.74,sd=3),     rtn_pitch_windspd_dt = wind_rtn_ptch,     trb_wind_avbl = trb_wind_avbl,     trb_downtime_pars = trb_downtime_pars,     lrg_arr_corr = TRUE     )"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/sample_qtls.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate random draws based on empirical c.d.f. ‚Äî sample_qtls","title":"Generate random draws based on empirical c.d.f. ‚Äî sample_qtls","text":"Generate random draws set quantiles, based empirical cumulative density function","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/sample_qtls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate random draws based on empirical c.d.f. ‚Äî sample_qtls","text":"","code":"sample_qtls(n, probs, qtls)"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/sample_qtls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate random draws based on empirical c.d.f. ‚Äî sample_qtls","text":"n integer, number draws generate probs numeric vector, probabilities qtls numeric vector, quantiles probabilities specified probs","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/sample_qtls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate random draws based on empirical c.d.f. ‚Äî sample_qtls","text":"numeric vector, random draws approximated distribution underpinning provided quantiles","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/sample_qtls.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate random draws based on empirical c.d.f. ‚Äî sample_qtls","text":"Based Inverse Transform Sampling technique, sampling random probabilities uniform distribution interpolate (cubic) count samples percentiles provided user (taken empirical cumulative density function)","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/sample_qtls.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate random draws based on empirical c.d.f. ‚Äî sample_qtls","text":"","code":"sample_qtls(10,c(0.1,0.2,0.3),qtls=c(0.05,0.1,0.95)) #>  [1] 0.89961121 0.49140651 0.10043913 0.88192324 0.06034306 0.67075218 #>  [7] 0.06563417 0.60837315 0.09127136 0.07021602"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/sample_turbine_mCRM.html","id":null,"dir":"Reference","previous_headings":"","what":"Sampling function for a single turbine in the mCRM ‚Äî sample_turbine_mCRM","title":"Sampling function for a single turbine in the mCRM ‚Äî sample_turbine_mCRM","text":"Samples aggregates appropriate data single wind turbine","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/sample_turbine_mCRM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sampling function for a single turbine in the mCRM ‚Äî sample_turbine_mCRM","text":"","code":"sample_turbine_mCRM(   rtn_speed_pars,   bld_pitch_pars,   rtr_radius_pars,   bld_width_pars,   season_specs,   n_iter = 10,   trb_wind_avbl,   trb_downtime_pars )"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/sample_turbine_mCRM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sampling function for a single turbine in the mCRM ‚Äî sample_turbine_mCRM","text":"rtn_speed_pars single row data frame columns mean sd, mean standard deviation rotation speed. bld_pitch_pars single row data frame columns mean sd, mean standard deviation blade pitch angle, .e. angle blade surface rotor plane, degrees. Assumed follow tnorm-lw0 distribution. rtr_radius_pars single row data frame columns mean sd, mean standard deviation radius rotor, metres. Assumed follow tnorm-lw0 distribution. bld_width_pars single row data frame columns mean sd, mean standard deviation maximum blade width, metres. Assumed tnorm-lw0 distribution. season_specs data frame defining seasons aggregating collision estimates. must comprise following columns: season_id, (unique) season identifier, start_month, name season's first month, end_month, name season's last month. n_iter integer value. number samples generate trb_wind_avbl data frame monthly estimates operational wind availability. must contain columns: month, (unique) month names, pctg, percentage time wind conditions allow turbine operation per month. trb_downtime_pars data frame monthly estimates maintenance downtime, assumed follow tnorm-lw0 distribution. must contain following columns: month, (unique) month names, mean, numeric, mean percentage time month turbines operating due maintenance, sd, standard deviation monthly maintenance downtime.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/sample_turbine_mCRM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sampling function for a single turbine in the mCRM ‚Äî sample_turbine_mCRM","text":"data frame information sampled turbine nrow = n_iter","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/sample_turbine_mCRM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sampling function for a single turbine in the mCRM ‚Äî sample_turbine_mCRM","text":"","code":"season_specs <- data.frame(   season_id = c(\"PrBMigration\", \"PoBMigration\",\"OMigration\"),   start_month = c(\"Mar\", \"May\", \"Oct\"), end_month = c(\"Apr\", \"Sep\", \"Feb\")   )    windavb <- data.frame(     month = month.abb,     pctg = runif(12, 85, 98)   )    dwntm <- data.frame(     month = month.abb,     mean = runif(12, 6, 10),     sd = rep(2, 12))    sample_turbine_mCRM(rtn_speed_pars = data.frame(mean = 13.1, sd = 4),                       bld_pitch_pars = data.frame(mean = 3, sd = 0.3),                       rtr_radius_pars = data.frame(mean = 80, sd = 0),                       bld_width_pars = data.frame(mean = 8, sd = 0),                       season_specs = season_specs,                       n_iter = 10,                       trb_wind_avbl = windavb,                       trb_downtime_pars = dwntm) #>    RotorRadius BladeWidth RotorSpeed      Pitch PrBMigration_DT PrBMigration_OT #> 1           80          8  11.601249 0.06136483      0.10935238       0.9004818 #> 2           80          8  13.608397 0.05353304      0.08944869       0.9004818 #> 3           80          8   8.887488 0.04858740      0.08270511       0.9004818 #> 4           80          8   8.562781 0.04535419      0.09356532       0.9004818 #> 5           80          8   9.654915 0.05613066      0.07500891       0.9004818 #> 6           80          8   5.849815 0.05870977      0.11590970       0.9004818 #> 7           80          8  21.483483 0.05538532      0.07309718       0.9004818 #> 8           80          8  17.289497 0.06055223      0.11872701       0.9004818 #> 9           80          8  12.881980 0.05536382      0.04533733       0.9004818 #> 10          80          8  19.795382 0.05153243      0.11028632       0.9004818 #>    PoBMigration_DT PoBMigration_OT OMigration_DT OMigration_OT #> 1       0.07932316       0.9079167    0.10018255     0.9257853 #> 2       0.07501109       0.9079167    0.10820380     0.9257853 #> 3       0.05356090       0.9079167    0.06694812     0.9257853 #> 4       0.07868917       0.9079167    0.03845806     0.9257853 #> 5       0.06082757       0.9079167    0.05248013     0.9257853 #> 6       0.08843688       0.9079167    0.08347915     0.9257853 #> 7       0.05997408       0.9079167    0.14004056     0.9257853 #> 8       0.10399099       0.9079167    0.05301178     0.9257853 #> 9       0.05903683       0.9079167    0.06425183     0.9257853 #> 10      0.06600393       0.9079167    0.07014271     0.9257853"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/sampler_hd.html","id":null,"dir":"Reference","previous_headings":"","what":"Customised sampling function wrapper ‚Äî sampler_hd","title":"Customised sampling function wrapper ‚Äî sampler_hd","text":"Samples dataset based inputs either rtnorm, rbeta 'rnorm' distributions","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/sampler_hd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Customised sampling function wrapper ‚Äî sampler_hd","text":"","code":"sampler_hd(   dat,   mode = \"rtnorm\",   n = NULL,   mean = NULL,   sd = NULL,   lower = 0,   upper = NULL )"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/sampler_hd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Customised sampling function wrapper ‚Äî sampler_hd","text":"dat = decimal value. SD value test (UI) - available UI, create distribution mode = string.  Either 'rtnorm', 'rbeta' 'rnorm' determine distribution generate n integer value. number samples generate mean decimal value. mean truncated normal distribution sd decimal value. standard deviation distribution simulate lower decimal value. lower limit distribution upper decimal value. upper limit distribution","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/sampler_hd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Customised sampling function wrapper ‚Äî sampler_hd","text":"vector samples values distribution","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/sampler_hd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Customised sampling function wrapper ‚Äî sampler_hd","text":"","code":"sampler_hd(dat=0.1,        mode='rtnorm',        n=100,        mean=9,        sd=0.1) #>   [1] 9.018060 8.923789 9.149098 8.843698 8.985836 8.909738 9.124842 8.982686 #>   [9] 9.029920 9.056487 9.103273 8.991915 9.181838 8.840868 9.081293 9.027675 #>  [17] 8.999912 8.967177 9.168632 8.983260 9.034665 9.063153 9.007892 9.142822 #>  [25] 9.158502 9.034508 9.108253 8.965157 9.005255 8.936505 8.963286 8.811488 #>  [33] 8.905225 9.236296 9.005089 9.097625 8.809241 9.005111 9.266781 8.860530 #>  [41] 9.026057 8.952956 9.020429 8.944322 9.027311 8.897340 8.909571 8.907136 #>  [49] 8.870464 8.935067 8.959291 8.982625 9.067944 8.882087 8.776863 8.991132 #>  [57] 9.095710 8.836743 9.021169 9.220681 9.000107 9.010952 8.927899 8.990569 #>  [65] 9.010051 9.172587 8.933390 8.901488 8.855845 8.966999 9.033993 8.824172 #>  [73] 9.159706 8.991019 9.005898 9.004794 9.115728 9.056943 8.900337 9.015796 #>  [81] 9.211375 9.141908 9.082072 9.056306 8.886654 8.954851 9.095308 9.068714 #>  [89] 8.892164 8.976872 9.148204 9.072152 9.093848 8.894212 8.971367 9.003562 #>  [97] 8.890366 9.072950 9.023802 9.076570"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/seq_months.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate sequence of months ‚Äî seq_months","title":"Generate sequence of months ‚Äî seq_months","text":"Generate sequence months","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/seq_months.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate sequence of months ‚Äî seq_months","text":"","code":"seq_months(start_month, end_month)"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/seq_months.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate sequence of months ‚Äî seq_months","text":"start_month character string, three-letter name starting month. end_month character string, three-letter name finishing month.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/seq_months.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate sequence of months ‚Äî seq_months","text":"","code":"seq_months(\"Jan\", \"Apr\") #> [1] \"Jan\" \"Feb\" \"Mar\" \"Apr\""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/stochLAB.html","id":null,"dir":"Reference","previous_headings":"","what":"stochLAB: Stochastic Collision Risk Model ‚Äî stochLAB","title":"stochLAB: Stochastic Collision Risk Model ‚Äî stochLAB","text":"stochLAB tool run stochastic (deterministic) Collision Risk Models (CRM) seabirds offshore wind farms. main functions stochLAB : stoch_crm(): Stochastic Collision Risk Model, band_crm(): Deterministic Collision Risk Model, ...fill migration functions..","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/stochLAB.html","id":"overview","dir":"Reference","previous_headings":"","what":"Overview","title":"stochLAB: Stochastic Collision Risk Model ‚Äî stochLAB","text":"{stochLAB} package adaptation R code developed Masden (2015) incorporate variability uncertainty avian collision risk model originally developed Band (2012). Code developed {stochLAB} substantially re-factored re-structured Masden's (heavily script-based) implementation user-friendly, streamlined, well documented easily distributed tool. Furthermore, package lays code infrastructure easier incorporation new functionality, e.g. extra parameter sampling features, model expansions, etc. Previous code underpinning key calculations extended model replaced alternative approach, resulting significant gains computational speed - 30x faster Masden's code. optimization particularly beneficial stochastic context, Band calculations computed repeatedly. See generate_rotor_grids() details.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/stochLAB.html","id":"function-stoch-crm-","dir":"Reference","previous_headings":"","what":"Function stoch_crm()","title":"stochLAB: Stochastic Collision Risk Model ‚Äî stochLAB","text":"stoch_crm() essentially replacement function script BandModel.r Masden's approach. Main changes terms user interface include: Collision model runs one single scenario (.e. one species one turbine scenario) stoch_crm() call. Apart gains development code structure, unit-based approach considered offer greater end user flexibility setting managing multiple scenarios (including parallel computation). Input parameters now entered explicitly feature-specific arguments, instead bundled together wide-column tables. improves code readability reduces quantity hard-coded parameter names, therefore making referencing errors less likely. Outputs longer saved automatically external files.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/stochLAB.html","id":"seasonal-outputs","dir":"Reference","previous_headings":"","what":"Seasonal Outputs","title":"stochLAB: Stochastic Collision Risk Model ‚Äî stochLAB","text":"stoch_crm() now provides option user-defined seasonal outputs, allowing country/region specific seasonal definitions. Currently implemented CRM calculations produce collision estimates monthly basis reflect changing bird abundance within windfarm area. Seasonal estimates obtained aggregating monthly estimates season definition, uncertainty collision estimates suitably propagated seasonal outputs.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/stochLAB.html","id":"sampling-distributions","dir":"Reference","previous_headings":"","what":"Sampling distributions","title":"stochLAB: Stochastic Collision Risk Model ‚Äî stochLAB","text":"Masden's implementation used Normal Truncated Normal distributions generate random parameter values. However, Normal distribution unbounded, risk randomly drawing inappropriate values cases. stoch_crm() extends use bounded probability distributions model parameters. Strictly positive features (e.g. bird densities, body length, turbine downtime, etc.) sampled Truncated Normal distributions, features constrained 0 1 (e.g. nocturnal activity, proportion flights collision risk height, etc) assumed follow Beta distributions. addition, new functionality incorporated allow use bird density resamples (e.g. bootstrap samples) quantile estimates density estimation models simulations.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/stochLAB.html","id":"function-band-crm-","dir":"Reference","previous_headings":"","what":"Function band_crm()","title":"stochLAB: Stochastic Collision Risk Model ‚Äî stochLAB","text":"band_crm() performs core CRM calculations required estimate number collisions, per Band (2012). computing workhorse stoch_crm() function, can also used alone, providing backward compatibility original Band spreadsheet outputs.","code":""},{"path":[]},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/stochLAB.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"stochLAB: Stochastic Collision Risk Model ‚Äî stochLAB","text":"","code":"# ------------------------------------------------------ # Run with arbitrary parameter values, for illustration # ------------------------------------------------------  # Setting a dataframe of parameters to draw from params <- data.frame(   flight_speed = 13.1,         # Flight speed in m/s   body_lt = 0.85,              # Body length in m   wing_span = 1.01,            # Wing span in m   flight_type = \"flapping\",    # flapping or gliding flight   avoid_rt_basic = 0.989,      # avoidance rate for option 1 and 2   avoid_rt_ext = 0.981,        # extended avoidance rate for option 3 and 4   noct_activity = 0.5,         # proportion of day birds are inactive   prop_crh_surv = 0.13,        # proportion of birds at collision risk height (option 1 only)   prop_upwind = 0.5,           # proportion of flights that are upwind   rotor_speed = 15,            # rotor speed in m/s   rotor_radius = 120,          # radius of turbine in m   blade_width = 5,             # width of turbine blades at thickest point in m   blade_pitch = 15,            # mean radius pitch in Radians   n_blades = 3,                # total number of blades per turbine   hub_height = 150,            # height of hub in m above HAT   n_turbines = 100,            # number of turbines in the wind farm   wf_width = 52,               # width across longest section of wind farm   wf_latitude = 56,            # latitude of centroid of wind farm   tidal_offset = 2.5,          # mean tidal offset from HAT of the wind farm   lrg_arr_corr = TRUE          # apply a large array correction? )  # Monthly bird densities b_dens <- data.frame(   month = month.abb,   dens = runif(12, 0.8, 1.5) )  # flight height distribution from Johnston et al gen_fhd_dat <- Johnston_Flight_heights_SOSS %>%   dplyr::filter(variable==\"Gannet.est\") %>%   dplyr::select(height,prop)   # monthly operational time of the wind farm turb_oper <- data.frame(   month = month.abb,   prop_oper = runif(12,0.5,0.8) )   band_crm(   model_options = c(1,2,3),   flight_speed = params$flight_speed,   body_lt = params$body_lt,   wing_span = params$wing_span,   flight_type = params$flight_type,   avoid_rt_basic = params$avoid_rt_basic,   avoid_rt_ext = params$avoid_rt_ext,   noct_activity = params$noct_activity,   prop_crh_surv = params$prop_crh_surv,   dens_month = b_dens,   prop_upwind = params$prop_upwind,   gen_fhd = gen_fhd_dat,   site_fhd = NULL,  # Option 4 only   rotor_speed = params$rotor_speed,   rotor_radius = params$rotor_radius,   blade_width = params$blade_width,   blade_pitch = params$blade_pitch,   n_blades = params$n_blades,   hub_height = params$hub_height,   chord_prof = chord_prof_5MW,   n_turbines = params$n_turbines,   turb_oper_month = turb_oper,   wf_width = params$wf_width,   wf_latitude = params$wf_latitude,   tidal_offset = params$tidal_offset,   lrg_arr_corr = params$lrg_arr_corr   ) #> # A tibble: 12 √ó 4 #>    month  opt1  opt2  opt3 #>    <chr> <dbl> <dbl> <dbl> #>  1 Jan    63.0  16.3  6.65 #>  2 Feb    63.9  16.5  6.74 #>  3 Mar    74.0  19.1  7.81 #>  4 Apr   110.   28.4 11.6  #>  5 May    98.4  25.4 10.4  #>  6 Jun   113.   29.2 11.9  #>  7 Jul    73.3  18.9  7.73 #>  8 Aug    52.6  13.6  5.54 #>  9 Sep    91.3  23.5  9.63 #> 10 Oct    70.5  18.2  7.43 #> 11 Nov    67.9  17.5  7.16 #> 12 Dec    70.2  18.1  7.40"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/stoch_crm.html","id":null,"dir":"Reference","previous_headings":"","what":"Stochastic collision risk model for a single species and one wind farm scenario ‚Äî stoch_crm","title":"Stochastic collision risk model for a single species and one wind farm scenario ‚Äî stoch_crm","text":"Runs Stochastic Collision Risk Model (SCRM) estimating number -flight collisions offshore windfarm turbines, given species windfarm scenario. Core calculations follow work developed Masden (2015). See Background Updates section details.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/stoch_crm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stochastic collision risk model for a single species and one wind farm scenario ‚Äî stoch_crm","text":"","code":"stoch_crm(   model_options = c(\"1\", \"2\", \"3\", \"4\"),   n_iter = 1000,   flt_speed_pars,   body_lt_pars,   wing_span_pars,   avoid_bsc_pars = NULL,   avoid_ext_pars = NULL,   noct_act_pars,   prop_crh_pars = NULL,   bird_dens_opt = c(\"tnorm\", \"resample\", \"qtiles\"),   bird_dens_dt,   flight_type,   prop_upwind,   gen_fhd_boots = NULL,   site_fhd_boots = NULL,   n_blades,   air_gap_pars,   rtr_radius_pars,   bld_width_pars,   bld_chord_prf = chord_prof_5MW,   rtn_pitch_opt = c(\"probDist\", \"windSpeedReltn\"),   bld_pitch_pars = NULL,   rtn_speed_pars = NULL,   windspd_pars = NULL,   rtn_pitch_windspd_dt = NULL,   trb_wind_avbl,   trb_downtime_pars,   wf_n_trbs,   wf_width,   wf_latitude,   tidal_offset,   lrg_arr_corr = TRUE,   xinc = 0.05,   yinc = 0.05,   out_format = c(\"draws\", \"summaries\"),   out_sampled_pars = FALSE,   out_period = c(\"months\", \"seasons\", \"annum\"),   season_specs = NULL,   verbose = TRUE,   log_file = NULL,   seed = NULL )"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/stoch_crm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stochastic collision risk model for a single species and one wind farm scenario ‚Äî stoch_crm","text":"model_options Character vector, model options calculating collision risk (see Details section ). n_iter integer. number iterations model simulation. flt_speed_pars single row data frame columns mean sd, mean standard deviation species flying speed, metres/sec. Assumed follow Truncated Normal lower bound 0 (tnorm-lw0). body_lt_pars single row data frame columns mean sd, mean standard deviation species body length, metres. Assumed follow tnorm-lw0 distribution. wing_span_pars single row data frame columns mean sd, mean standard deviation species wingspan, metres. Assumed follow tnorm-lw0 distribution. avoid_bsc_pars, avoid_ext_pars Single row data frames columns mean sd, mean standard deviation species avoidance rate used basic model (Options 1 2) extended model (Options 3 4) calculations (see Details section). Avoidance rate expresses probability bird flying collision course turbine take evading action avoid collision, assumed follow Beta distribution. noct_act_pars single row data frame columns mean sd, mean standard deviation species nocturnal flight activity level, expressed proportion daytime activity levels, assumed Beta distributed. prop_crh_pars Required model Option 1, single row data frame columns mean sd. mean standard deviation proportion flights collision risk height derived site survey, assumed Beta distributed. bird_dens_opt Option specifying random sampling mechanism bird densities: \"tnorm\": Sampling density estimates tnorm-lw0 distribution (default value), \"resample\": Re-sample draws bird density estimates (e.g. bootstrap samples), \"qtiles\": Sampling set quantile estimates bird densities. bird_dens_dt data frame monthly estimates bird density within windfarm footprint, expressed number daytime -flight birds/km^2 per month. Data frame format requirements: bird_dens_opt = \"tnorm\", bird_dens_dt must contain following columns: month, (unique) month names, mean, mean number birds flight height per square kilometre month, sd, idem, standard deviation. bird_dens_opt = \"resample\", bird_dens_dt columns must named months (.e. Jan, Feb, ...), containing random samples monthly density estimates. bird_dens_opt = \"qtiles\", bird_dens_dt must comply : First column named p, giving reference probabilities, Remaining columns named months (.e. Jan, Feb, ...), giving quantile estimates bird density given month, reference probabilities column p. flight_type character string, either 'flapping' 'gliding', indicating species' characteristic flight type. prop_upwind Numeric value 0-1 giving proportion flights upwind - defaults 0.5. gen_fhd_boots Required model Options 2 3, data frame bootstrap samples flight height distributions (FHD) species derived general (country/regional level) data. FHD provides relative frequency distribution bird flights 1-metre height bands, starting sea surface. first column must named height, expressing lower bound height band (thus first element must 0). remaining column provide bootstrap sample proportion bird flights height band, column naming requirements. NOTE: generic_fhd_bootstraps list object generic FHD bootstrap estimates 25 seabird species Johnson et al (2014) (see usage Example Section ). site_fhd_boots Required model Option 4, data frame similar gen_fhd_boots, FHD estimates derived site-specific data. n_blades integer, number blades rotor (\\(b\\)). air_gap_pars single row data frame columns mean sd, mean standard deviation tip clearance gap, metres, .e. distance minimum rotor tip height highest astronomical tide (HAT). Assumed follow tnorm-lw0 distribution. rtr_radius_pars single row data frame columns mean sd, mean standard deviation radius rotor, metres. Assumed follow tnorm-lw0 distribution. bld_width_pars single row data frame columns mean sd, mean standard deviation maximum blade width, metres. Assumed tnorm-lw0 distribution. bld_chord_prf data frame chord taper profile rotor blade. must contain columns: pp_radius, equidistant intervals radius bird passage point, proportion rotor_radius, within range \\([0, 1]\\). chord, chord width pp_radius, proportion blade_width. Defaults generic profile typical modern 5MW turbine. See chord_prof_5MW() details. rtn_pitch_opt character string, option specifying sampling mechanism rotation speed blade pitch: \"probDist\": sample rotation speed blade pitch values tnorm-lw0 distribution (default value). \"windSpeedReltn\": generate rotation speed blade pitch values function wind speed intensity. bld_pitch_pars required rtn_pitch_opt = \"probDist\", single row data frame columns mean sd, mean standard deviation blade pitch angle, .e. angle blade surface rotor plane, degrees. Assumed follow tnorm-lw0 distribution. rtn_speed_pars required rtn_pitch_opt = \"probDist\", single row data frame columns mean sd, mean standard deviation operational rotation speed, revolutions per minute. Assumed follow tnorm-lw0 distribution. windspd_pars required rtn_pitch_opt = \"windSpeedReltn\", single row data frame columns mean sd, mean standard deviation wind speed windfarm site, metres/sec. Assumed follow tnorm-lw0 distribution. rtn_pitch_windspd_dt required rtn_pitch_opt = \"windSpeedReltn\", data frame giving relationship wind speed, rotation speed blade pitch values. must contain columns: wind_speed, wind speed m/s, rtn_speed, rotation speed rpm, bld_pitch, blade pitch values degrees. trb_wind_avbl data frame monthly estimates operational wind availability. must contain columns: month, (unique) month names, pctg, percentage time wind conditions allow turbine operation per month. trb_downtime_pars data frame monthly estimates maintenance downtime, assumed follow tnorm-lw0 distribution. must contain following columns: month, (unique) month names, mean, numeric, mean percentage time month turbines operating due maintenance, sd, standard deviation monthly maintenance downtime. wf_n_trbs Integer, number turbines windfarm. wf_width Numeric value, approximate longitudinal width wind farm, kilometres (\\(w\\)). wf_latitude decimal value. latitude centroid windfarm, degrees. tidal_offset numeric value, tidal offset, difference HAT mean sea level, metres. lrg_arr_corr Boolean value. TRUE, large array correction applied. correction factor account decay bird density later rows wind farms large array turbines. yinc, xinc numeric values, increments along y-axis x-axis numerical integration across segments rotor circle. Chosen values express proportion rotor radius. default set 0.05, .e. integration performed resolution one twentieth rotor radius. out_format Output format specification. Possible values : \"draws\": returns stochastic draws collisions estimates (default value), \"summaries\": returns summary statistics collisions estimates. out_sampled_pars Logical, whether output summary statistics values sampled stochastic model parameter. out_period Controls level temporal aggregation collision outputs. Possible values : \"months\": monthly collisions (default value), \"seasons\": collisions per user-defined season, \"annum\": total collisions 12 months. season_specs required out_period = \"seasons\", data frame defining seasons aggregating collision estimates. must comprise following columns: season_id, (unique) season identifier, start_month, name season's first month, end_month, name season's last month. verbose Logical, print model run progress console? log_file Path log file store session info main model run options. set NULL (default value), log file created. seed Integer, random seed random number generation, analysis reproducibility.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/stoch_crm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stochastic collision risk model for a single species and one wind farm scenario ‚Äî stoch_crm","text":"out_sampled_pars = FALSE, returns list estimates number collisions per chosen time periods, elements containing outputs CRM Option. out_sampled_pars = TRUE, returns list object two top-level elements: collisions, list comprising collision estimates CRM Option, sampled_pars, list summary statistics values sampled stochastic model parameters.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/stoch_crm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Stochastic collision risk model for a single species and one wind farm scenario ‚Äî stoch_crm","text":"Collision risk can calculated 4 options, specified model_options: Option 1 - Basic model proportion collision risk height derived site survey (prop_crh_surv). Option 2 - Basic model proportion collision risk height derived generic flight height distribution (gen_fhd). Option 3 - Extended model using generic flight height distribution (gen_fhd). Option 4 - Extended model using site-specific flight height distribution (site_fhd). , Basic model - assumes uniform distribution bird flights collision risk height (.e. minimum maximum height rotor blade). Extended model - takes account distribution bird flight heights collision risk height.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/stoch_crm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stochastic collision risk model for a single species and one wind farm scenario ‚Äî stoch_crm","text":"","code":"# ------------------------------------------------------ # Run with arbitrary parameter values, for illustration # ------------------------------------------------------  # ------------------------------------------------------ # Setting some of the required inputs upfront b_dens <- data.frame(   month = month.abb,   mean = runif(12, 0.8, 1.5),   sd = runif(12, 0.2, 0.3) ) head(b_dens) #>   month      mean        sd #> 1   Jan 0.8500886 0.2752937 #> 2   Feb 1.3384964 0.2859800 #> 3   Mar 0.9137843 0.2755911 #> 4   Apr 1.2723680 0.2900434 #> 5   May 0.9324055 0.2020573 #> 6   Jun 1.4817168 0.2913590  # Generic FHD bootstraps from Johnson et al (2014) fhd_boots <- generic_fhd_bootstraps[[1]] head(fhd_boots) #> # A tibble: 6 √ó 201 #>   height bootId_1 bootId_2 bootId_3 bootId_4 bootId_5 bootId_6 bootId_7 bootId_8 #>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl> #> 1      0   0.160    0.166    0.174    0.152    0.174    0.168    0.177    0.172  #> 2      1   0.134    0.138    0.144    0.129    0.144    0.140    0.145    0.142  #> 3      2   0.113    0.115    0.119    0.109    0.119    0.116    0.120    0.118  #> 4      3   0.0948   0.0963   0.0981   0.0927   0.0981   0.0967   0.0986   0.0976 #> 5      4   0.0796   0.0803   0.0810   0.0786   0.0810   0.0805   0.0812   0.0808 #> 6      5   0.0669   0.0670   0.0669   0.0667   0.0669   0.0670   0.0669   0.0670 #> # ‚Ä¶ with 192 more variables: bootId_9 <dbl>, bootId_10 <dbl>, bootId_11 <dbl>, #> #   bootId_12 <dbl>, bootId_13 <dbl>, bootId_14 <dbl>, bootId_15 <dbl>, #> #   bootId_16 <dbl>, bootId_17 <dbl>, bootId_18 <dbl>, bootId_19 <dbl>, #> #   bootId_20 <dbl>, bootId_21 <dbl>, bootId_22 <dbl>, bootId_23 <dbl>, #> #   bootId_24 <dbl>, bootId_25 <dbl>, bootId_26 <dbl>, bootId_27 <dbl>, #> #   bootId_28 <dbl>, bootId_29 <dbl>, bootId_30 <dbl>, bootId_31 <dbl>, #> #   bootId_32 <dbl>, bootId_33 <dbl>, bootId_34 <dbl>, bootId_35 <dbl>, ‚Ä¶  # wind speed vs rotation speed vs blade pitch wind_rtn_ptch <- data.frame(   wind_speed = seq_len(30),   rtn_speed = 10/(30:1),   bld_pitch = c(rep(90, 4), rep(0, 8), 5:22) ) head(wind_rtn_ptch) #>   wind_speed rtn_speed bld_pitch #> 1          1 0.3333333        90 #> 2          2 0.3448276        90 #> 3          3 0.3571429        90 #> 4          4 0.3703704        90 #> 5          5 0.3846154         0 #> 6          6 0.4000000         0  # wind availability windavb <- data.frame(   month = month.abb,   pctg = runif(12, 85, 98) ) head(windavb) #>   month     pctg #> 1   Jan 95.99011 #> 2   Feb 93.41173 #> 3   Mar 85.61152 #> 4   Apr 89.47075 #> 5   May 87.44455 #> 6   Jun 95.90235  # maintenance downtime dwntm <- data.frame(   month = month.abb,   mean = runif(12, 6, 10),   sd = rep(2, 12)) head(dwntm) #>   month     mean sd #> 1   Jan 6.608589  2 #> 2   Feb 7.702207  2 #> 3   Mar 9.809058  2 #> 4   Apr 9.839507  2 #> 5   May 7.109845  2 #> 6   Jun 8.715040  2  # seasons specification seas_dt <- data.frame(   season_id = c(\"a\", \"b\", \"c\"),   start_month = c(\"Jan\", \"May\", \"Oct\"), end_month = c(\"Apr\", \"Sep\", \"Dec\")   ) head(seas_dt) #>   season_id start_month end_month #> 1         a         Jan       Apr #> 2         b         May       Sep #> 3         c         Oct       Dec  # ---------------------------------------------------------- # Run stochastic CRM, treating rotor radius, air gap and # blade width as fixed parameters (i.e. not stochastic)  stoch_crm(   model_options = c(1, 2, 3),   n_iter = 1000,   flt_speed_pars = data.frame(mean = 7.26, sd = 1.5),   body_lt_pars = data.frame(mean = 0.39, sd = 0.005),   wing_span_pars = data.frame(mean = 1.08, sd = 0.04),   avoid_bsc_pars = data.frame(mean = 0.99, sd = 0.001),   avoid_ext_pars = data.frame(mean = 0.96, sd = 0.002),   noct_act_pars = data.frame(mean = 0.033, sd = 0.005),   prop_crh_pars = data.frame(mean = 0.06, sd = 0.009),   bird_dens_opt = \"tnorm\",   bird_dens_dt = b_dens,   flight_type = \"flapping\",   prop_upwind = 0.5,   gen_fhd_boots = fhd_boots,   n_blades = 3,   rtr_radius_pars = data.frame(mean = 80, sd = 0), # sd = 0, rotor radius is fixed   air_gap_pars = data.frame(mean = 36, sd = 0),    # sd = 0, air gap is fixed   bld_width_pars = data.frame(mean = 8, sd = 0),   # sd = 0, blade width is fixed   rtn_pitch_opt = \"windSpeedReltn\",   windspd_pars = data.frame(mean = 7.74, sd = 3),   rtn_pitch_windspd_dt = wind_rtn_ptch,   trb_wind_avbl = windavb,   trb_downtime_pars = dwntm,   wf_n_trbs = 200,   wf_width = 15,   wf_latitude = 56.9,   tidal_offset = 2.5,   lrg_arr_corr = TRUE,   verbose = TRUE,   seed = 1234,   out_format = \"summaries\",   out_sampled_pars = TRUE,   out_period = \"seasons\",   season_specs = seas_dt,   log_file = paste0(getwd(), \"scrm_example.log\") ) #> ‚îÄ‚îÄ Stochastic CRM ‚îÄ‚îÄ #>  #> ‚Ñπ Checking inputs #> ‚úî Checking inputs [18ms] #>  #> ‚Ñπ Preparing data #> ‚úî Preparing data [32ms] #>  #> ‚Ñπ Sampling parameters #> ‚úî Sampling parameters [137ms] #>  #> ‚†ô Calculating collisions | 3/1000 iterations #> ‚úî Calculating collisions | 1000/1000 iterations [1.4s] #>  #> ‚Ñπ Sorting outputs #> ‚úî Sorting outputs [712ms] #>  #> ‚úî Job done! #> $collisions #> $collisions$opt1 #> # A tibble: 3 √ó 10 #>   season_id period  mean    sd median pctl_2.5 pctl_25 pctl_75 pctl_97.5 pctl_99 #>   <chr>     <chr>  <dbl> <dbl>  <dbl>    <dbl>   <dbl>   <dbl>     <dbl>   <dbl> #> 1 a         Jan_A‚Ä¶  31.2 14.2    32.0     8.14    20.3    40.9      59.2    73.0 #> 2 b         May_S‚Ä¶  61.1 27.7    63.0    16.0     40.9    79.6     116.    149.  #> 3 c         Oct_D‚Ä¶  18.7  8.76   19.2     4.65    12.3    24.7      35.5    47.2 #>  #> $collisions$opt2 #> # A tibble: 3 √ó 10 #>   season_id period  mean    sd median pctl_2.5 pctl_25 pctl_75 pctl_97.5 pctl_99 #>   <chr>     <chr>  <dbl> <dbl>  <dbl>    <dbl>   <dbl>   <dbl>     <dbl>   <dbl> #> 1 a         Jan_A‚Ä¶ 0.838 1.64   0.427   0.0798   0.244   0.739      5.91   14.8  #> 2 b         May_S‚Ä¶ 1.64  3.18   0.847   0.152    0.477   1.48      10.3    28.4  #> 3 c         Oct_D‚Ä¶ 0.502 0.989  0.253   0.0470   0.146   0.449      3.63    9.09 #>  #> $collisions$opt3 #> # A tibble: 3 √ó 10 #>   season_id period  mean    sd median pctl_2.5 pctl_25 pctl_75 pctl_97.5 pctl_99 #>   <chr>     <chr>  <dbl> <dbl>  <dbl>    <dbl>   <dbl>   <dbl>     <dbl>   <dbl> #> 1 a         Jan_A‚Ä¶ 0.411 1.05  0.156    0.0345  0.0994   0.280      3.22    9.09 #> 2 b         May_S‚Ä¶ 0.800 2.02  0.306    0.0684  0.193    0.558      6.82   18.7  #> 3 c         Oct_D‚Ä¶ 0.244 0.616 0.0934   0.0221  0.0579   0.173      2.07    5.78 #>  #>  #> $sampled_pars #> $sampled_pars$air_gap #> # A tibble: 1 √ó 5 #>    mean    sd median pctl_2.5 pctl_97.5 #>   <dbl> <dbl>  <dbl>    <dbl>     <dbl> #> 1    36     0     36       36        36 #>  #> $sampled_pars$bld_width #> # A tibble: 1 √ó 5 #>    mean    sd median pctl_2.5 pctl_97.5 #>   <dbl> <dbl>  <dbl>    <dbl>     <dbl> #> 1     8     0      8        8         8 #>  #> $sampled_pars$body_lt #> # A tibble: 1 √ó 5 #>    mean      sd median pctl_2.5 pctl_97.5 #>   <dbl>   <dbl>  <dbl>    <dbl>     <dbl> #> 1 0.390 0.00499  0.390    0.380     0.400 #>  #> $sampled_pars$flt_speed #> # A tibble: 1 √ó 5 #>    mean    sd median pctl_2.5 pctl_97.5 #>   <dbl> <dbl>  <dbl>    <dbl>     <dbl> #> 1  7.28  1.47   7.28     4.30      10.0 #>  #> $sampled_pars$noct_actv #> # A tibble: 1 √ó 5 #>     mean      sd median pctl_2.5 pctl_97.5 #>    <dbl>   <dbl>  <dbl>    <dbl>     <dbl> #> 1 0.0333 0.00498 0.0333   0.0241    0.0436 #>  #> $sampled_pars$rtr_radius #> # A tibble: 1 √ó 5 #>    mean    sd median pctl_2.5 pctl_97.5 #>   <dbl> <dbl>  <dbl>    <dbl>     <dbl> #> 1    80     0     80       80        80 #>  #> $sampled_pars$wing_span #> # A tibble: 1 √ó 5 #>    mean     sd median pctl_2.5 pctl_97.5 #>   <dbl>  <dbl>  <dbl>    <dbl>     <dbl> #> 1  1.08 0.0398   1.08     1.00      1.16 #>  #> $sampled_pars$hub_height #> # A tibble: 1 √ó 5 #>    mean    sd median pctl_2.5 pctl_97.5 #>   <dbl> <dbl>  <dbl>    <dbl>     <dbl> #> 1   116     0    116      116       116 #>  #> $sampled_pars$dens_mth #> # A tibble: 12 √ó 6 #>    period  mean    sd median pctl_2.5 pctl_97.5 #>    <chr>  <dbl> <dbl>  <dbl>    <dbl>     <dbl> #>  1 Jan    0.840 0.271  0.839    0.335      1.38 #>  2 Feb    1.35  0.276  1.34     0.833      1.90 #>  3 Mar    0.915 0.277  0.915    0.355      1.42 #>  4 Apr    1.28  0.287  1.28     0.736      1.86 #>  5 May    0.936 0.197  0.928    0.558      1.32 #>  6 Jun    1.47  0.286  1.48     0.864      2.05 #>  7 Jul    1.25  0.259  1.25     0.760      1.76 #>  8 Aug    1.09  0.299  1.10     0.499      1.70 #>  9 Sep    0.999 0.231  1.00     0.559      1.44 #> 10 Oct    1.01  0.287  1.01     0.462      1.57 #> 11 Nov    1.43  0.248  1.42     0.957      1.92 #> 12 Dec    0.889 0.280  0.889    0.334      1.43 #>  #> $sampled_pars$prop_oper_mth #> # A tibble: 12 √ó 6 #>    period  mean     sd median pctl_2.5 pctl_97.5 #>    <chr>  <dbl>  <dbl>  <dbl>    <dbl>     <dbl> #>  1 Jan    0.895 0.0207  0.894    0.854     0.932 #>  2 Feb    0.857 0.0206  0.857    0.818     0.896 #>  3 Mar    0.758 0.0204  0.758    0.715     0.798 #>  4 Apr    0.796 0.0196  0.796    0.758     0.834 #>  5 May    0.803 0.0195  0.803    0.765     0.840 #>  6 Jun    0.871 0.0198  0.871    0.832     0.910 #>  7 Jul    0.779 0.0199  0.779    0.739     0.820 #>  8 Aug    0.880 0.0193  0.881    0.842     0.918 #>  9 Sep    0.804 0.0206  0.804    0.763     0.842 #> 10 Oct    0.783 0.0201  0.783    0.742     0.821 #> 11 Nov    0.793 0.0201  0.793    0.754     0.832 #> 12 Dec    0.815 0.0197  0.816    0.777     0.852 #>  #> $sampled_pars$downtime #> # A tibble: 12 √ó 6 #>    period  mean    sd median pctl_2.5 pctl_97.5 #>    <chr>  <dbl> <dbl>  <dbl>    <dbl>     <dbl> #>  1 Jan     6.52  2.07   6.56     2.83      10.6 #>  2 Feb     7.71  2.06   7.71     3.84      11.7 #>  3 Mar     9.81  2.04   9.81     5.79      14.1 #>  4 Apr     9.83  1.96   9.87     6.04      13.6 #>  5 May     7.13  1.95   7.10     3.41      11.0 #>  6 Jun     8.80  1.98   8.77     4.94      12.7 #>  7 Jul     9.27  1.99   9.26     5.22      13.3 #>  8 Aug     6.24  1.93   6.20     2.49      10.0 #>  9 Sep     7.35  2.06   7.33     3.50      11.5 #> 10 Oct     9.61  2.01   9.64     5.80      13.7 #> 11 Nov     8.29  2.01   8.27     4.31      12.1 #> 12 Dec     6.50  1.97   6.39     2.82      10.3 #>  #> $sampled_pars$wind_speed #> # A tibble: 1 √ó 5 #>    mean    sd median pctl_2.5 pctl_97.5 #>   <dbl> <dbl>  <dbl>    <dbl>     <dbl> #> 1  7.74  3.00   7.76     2.15      13.7 #>  #> $sampled_pars$rtn_speed #> # A tibble: 1 √ó 5 #>    mean     sd median pctl_2.5 pctl_97.5 #>   <dbl>  <dbl>  <dbl>    <dbl>     <dbl> #> 1 0.428 0.0574  0.417    0.345     0.556 #>  #> $sampled_pars$bld_pitch #> # A tibble: 1 √ó 5 #>    mean    sd median pctl_2.5 pctl_97.5 #>   <dbl> <dbl>  <dbl>    <dbl>     <dbl> #> 1 0.327 0.634      0        0      1.57 #>  #> $sampled_pars$avoid_bsc #> # A tibble: 1 √ó 5 #>    mean       sd median pctl_2.5 pctl_97.5 #>   <dbl>    <dbl>  <dbl>    <dbl>     <dbl> #> 1 0.990 0.000986  0.990    0.988     0.992 #>  #> $sampled_pars$avoid_ext #> # A tibble: 1 √ó 5 #>    mean      sd median pctl_2.5 pctl_97.5 #>   <dbl>   <dbl>  <dbl>    <dbl>     <dbl> #> 1 0.960 0.00203  0.960    0.956     0.964 #>  #> $sampled_pars$prop_crh #> # A tibble: 1 √ó 5 #>     mean      sd median pctl_2.5 pctl_97.5 #>    <dbl>   <dbl>  <dbl>    <dbl>     <dbl> #> 1 0.0605 0.00909 0.0602   0.0441    0.0801 #>  #> $sampled_pars$gen_fhd #> # A tibble: 500 √ó 6 #>    height   mean      sd median pctl_2.5 pctl_97.5 #>     <dbl>  <dbl>   <dbl>  <dbl>    <dbl>     <dbl> #>  1      0 0.163  0.0187  0.166    0.109     0.187  #>  2      1 0.136  0.0129  0.138    0.0967    0.152  #>  3      2 0.114  0.00851 0.115    0.0863    0.124  #>  4      3 0.0950 0.00527 0.0963   0.0769    0.100  #>  5      4 0.0794 0.00294 0.0803   0.0686    0.0816 #>  6      5 0.0664 0.00146 0.0669   0.0606    0.0670 #>  7      6 0.0556 0.00116 0.0558   0.0530    0.0567 #>  8      7 0.0465 0.00166 0.0466   0.0439    0.0490 #>  9      8 0.0390 0.00215 0.0389   0.0357    0.0431 #> 10      9 0.0327 0.00249 0.0324   0.0290    0.0386 #> # ‚Ä¶ with 490 more rows #>  #>"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/turb_pars_wide_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Example of turbine and windfarm parameters stored in wide format ‚Äî turb_pars_wide_example","title":"Example of turbine and windfarm parameters stored in wide format ‚Äî turb_pars_wide_example","text":"data frame (fake) data turbine wind farm features 3 scenarios.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/turb_pars_wide_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example of turbine and windfarm parameters stored in wide format ‚Äî turb_pars_wide_example","text":"","code":"turb_pars_wide_example"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/turb_pars_wide_example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example of turbine and windfarm parameters stored in wide format ‚Äî turb_pars_wide_example","text":"3 x 51 data frame, turbine windfarm parameters (columns) 3 development scenarios (rows). Columns include: TurbineModel turbine/windfarm scenario ID Blades Nr blades RotorRadius Mean rotor radius RotorRadiusSD SD rotor radius HubHeightAdd Mean air gap, distance sea surface lowest tip height. HubHeightAddSD SD air gap, explained .","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/turb_pars_wide_example.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example of turbine and windfarm parameters stored in wide format ‚Äî turb_pars_wide_example","text":"Intended illustrate application stoch_scrm() multiple scenario setting, parameter data available tables wide format.","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/validate_inputs.html","id":null,"dir":"Reference","previous_headings":"","what":"Input validator ‚Äî validate_inputs","title":"Input validator ‚Äî validate_inputs","text":"Input validator","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/validate_inputs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Input validator ‚Äî validate_inputs","text":"","code":"validate_inputs(   model_options,   n_iter = NULL,   flt_speed_pars = NULL,   flight_speed = NULL,   body_lt_pars = NULL,   body_lt = NULL,   wing_span_pars = NULL,   wing_span = NULL,   avoid_bsc_pars = NULL,   avoid_rt_basic = NULL,   avoid_ext_pars = NULL,   avoid_rt_ext = NULL,   noct_act_pars = NULL,   noct_activity = NULL,   prop_crh_pars = NULL,   bird_dens_opt = NULL,   bird_dens_dt = NULL,   chord_prof = NULL,   dens_month = NULL,   turb_oper_month = NULL,   flight_type = NULL,   prop_upwind = NULL,   gen_fhd_boots = NULL,   site_fhd_boots = NULL,   n_blades = NULL,   air_gap_pars = NULL,   rtr_radius_pars = NULL,   rotor_radius = NULL,   blade_width = NULL,   blade_pitch = NULL,   hub_height = NULL,   bld_width_pars = NULL,   rtn_pitch_opt = NULL,   bld_pitch_pars = NULL,   rtn_speed_pars = NULL,   rotor_speed = NULL,   n_turbines = NULL,   windspd_pars = NULL,   rtn_pitch_windspd_dt = NULL,   trb_wind_avbl = NULL,   trb_downtime_pars = NULL,   wf_n_trbs = NULL,   wf_width = NULL,   wf_latitude = NULL,   tidal_offset = NULL,   gen_fhd = NULL,   site_fhd = NULL,   lrg_arr_corr = NULL,   xinc = NULL,   yinc = NULL,   seed = NULL,   verbose = NULL,   out_format = NULL,   out_sampled_pars = NULL,   out_period = NULL,   season_specs = NULL,   popn_estim_pars = NULL,   fn = \"scrm\" )"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/validate_inputs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Input validator ‚Äî validate_inputs","text":"model_options Character vector, model options calculating collision risk (see Details section ). n_iter integer. number iterations model simulation. flt_speed_pars single row data frame columns mean sd, mean standard deviation species flying speed, metres/sec. Assumed follow Truncated Normal lower bound 0 (tnorm-lw0). flight_speed Numeric value. bird flying speed (\\(v\\)), metres/sec. body_lt_pars single row data frame columns mean sd, mean standard deviation species body length, metres. Assumed follow tnorm-lw0 distribution. body_lt Numeric value. length bird (\\(L\\)), metres. wing_span_pars single row data frame columns mean sd, mean standard deviation species wingspan, metres. Assumed follow tnorm-lw0 distribution. wing_span Numeric value. wingspan bird (\\(W\\)), metres. avoid_bsc_pars Single row data frames columns mean sd, mean standard deviation species avoidance rate used basic model (Options 1 2) extended model (Options 3 4) calculations (see Details section). Avoidance rate expresses probability bird flying collision course turbine take evading action avoid collision, assumed follow Beta distribution. avoid_rt_basic Numeric values. avoidance rate , respectively, basic model (.e. required model Options 1 2) extended model (.e. required Options 3 4). Avoidance rate expresses probability bird flying collision course turbine take evading action avoid collision. avoid_ext_pars Single row data frames columns mean sd, mean standard deviation species avoidance rate used basic model (Options 1 2) extended model (Options 3 4) calculations (see Details section). Avoidance rate expresses probability bird flying collision course turbine take evading action avoid collision, assumed follow Beta distribution. avoid_rt_ext Numeric values. avoidance rate , respectively, basic model (.e. required model Options 1 2) extended model (.e. required Options 3 4). Avoidance rate expresses probability bird flying collision course turbine take evading action avoid collision. noct_act_pars single row data frame columns mean sd, mean standard deviation species nocturnal flight activity level, expressed proportion daytime activity levels, assumed Beta distributed. noct_activity numeric value. nocturnal flight activity level, expressed proportion daytime activity levels (\\(f_night\\)). prop_crh_pars Required model Option 1, single row data frame columns mean sd. mean standard deviation proportion flights collision risk height derived site survey, assumed Beta distributed. bird_dens_opt Option specifying random sampling mechanism bird densities: \"tnorm\": Sampling density estimates tnorm-lw0 distribution (default value), \"resample\": Re-sample draws bird density estimates (e.g. bootstrap samples), \"qtiles\": Sampling set quantile estimates bird densities. bird_dens_dt data frame monthly estimates bird density within windfarm footprint, expressed number daytime -flight birds/km^2 per month. Data frame format requirements: bird_dens_opt = \"tnorm\", bird_dens_dt must contain following columns: month, (unique) month names, mean, mean number birds flight height per square kilometre month, sd, idem, standard deviation. bird_dens_opt = \"resample\", bird_dens_dt columns must named months (.e. Jan, Feb, ...), containing random samples monthly density estimates. bird_dens_opt = \"qtiles\", bird_dens_dt must comply : First column named p, giving reference probabilities, Remaining columns named months (.e. Jan, Feb, ...), giving quantile estimates bird density given month, reference probabilities column p. chord_prof data frame chord taper profile rotor blade. Function expects two named columns: pp_radius, equidistant intervals radius bird passage point, proportion rotor_radius, within range \\([0, 1]\\). chord, chord width pp_radius, proportion blade_width. Defaults generic profile typical modern 5MW turbine. See chord_prof_5MW() details. dens_month Data frame, containing estimates daytime -flight bird densities per month within windfarm footprint, birds/km^2. must contain following named columns: month, month names. dens, number birds flight height per square kilometre month. turb_oper_month Data frame, holding proportion time turbines operational per month. following named column expected: month, month names. prop_oper, proportion time operating, per month. flight_type character string, either 'flapping' 'gliding', indicating species' characteristic flight type. prop_upwind Numeric value 0-1 giving proportion flights upwind - defaults 0.5. gen_fhd_boots Required model Options 2 3, data frame bootstrap samples flight height distributions (FHD) species derived general (country/regional level) data. FHD provides relative frequency distribution bird flights 1-metre height bands, starting sea surface. first column must named height, expressing lower bound height band (thus first element must 0). remaining column provide bootstrap sample proportion bird flights height band, column naming requirements. NOTE: generic_fhd_bootstraps list object generic FHD bootstrap estimates 25 seabird species Johnson et al (2014) (see usage Example Section ). site_fhd_boots Required model Option 4, data frame similar gen_fhd_boots, FHD estimates derived site-specific data. n_blades integer, number blades rotor (\\(b\\)). air_gap_pars single row data frame columns mean sd, mean standard deviation tip clearance gap, metres, .e. distance minimum rotor tip height highest astronomical tide (HAT). Assumed follow tnorm-lw0 distribution. rtr_radius_pars single row data frame columns mean sd, mean standard deviation radius rotor, metres. Assumed follow tnorm-lw0 distribution. rotor_radius Numeric value. radius rotor (\\(R\\)), metres. blade_width Numeric value, giving maximum blade width, metres. blade_pitch Numeric value. average blade pitch angle, angle blade surface rotor plane (\\(\\gamma\\)), radians. hub_height numeric value, height rotor hub (\\(H\\)), given sum rotor radius minimum blade clearance highest astronomical tide (HAT), metres. bld_width_pars single row data frame columns mean sd, mean standard deviation maximum blade width, metres. Assumed tnorm-lw0 distribution. rtn_pitch_opt character string, option specifying sampling mechanism rotation speed blade pitch: \"probDist\": sample rotation speed blade pitch values tnorm-lw0 distribution (default value). \"windSpeedReltn\": generate rotation speed blade pitch values function wind speed intensity. bld_pitch_pars required rtn_pitch_opt = \"probDist\", single row data frame columns mean sd, mean standard deviation blade pitch angle, .e. angle blade surface rotor plane, degrees. Assumed follow tnorm-lw0 distribution. rtn_speed_pars required rtn_pitch_opt = \"probDist\", single row data frame columns mean sd, mean standard deviation operational rotation speed, revolutions per minute. Assumed follow tnorm-lw0 distribution. rotor_speed Numeric value. operational rotation speed, revolutions/min. n_turbines Integer, number turbines wind farm (\\(T\\)). windspd_pars required rtn_pitch_opt = \"windSpeedReltn\", single row data frame columns mean sd, mean standard deviation wind speed windfarm site, metres/sec. Assumed follow tnorm-lw0 distribution. rtn_pitch_windspd_dt required rtn_pitch_opt = \"windSpeedReltn\", data frame giving relationship wind speed, rotation speed blade pitch values. must contain columns: wind_speed, wind speed m/s, rtn_speed, rotation speed rpm, bld_pitch, blade pitch values degrees. trb_wind_avbl data frame monthly estimates operational wind availability. must contain columns: month, (unique) month names, pctg, percentage time wind conditions allow turbine operation per month. trb_downtime_pars data frame monthly estimates maintenance downtime, assumed follow tnorm-lw0 distribution. must contain following columns: month, (unique) month names, mean, numeric, mean percentage time month turbines operating due maintenance, sd, standard deviation monthly maintenance downtime. wf_n_trbs Integer, number turbines windfarm. wf_width Numeric value, approximate longitudinal width wind farm, kilometres (\\(w\\)). wf_latitude decimal value. latitude centroid windfarm, degrees. tidal_offset numeric value, tidal offset, difference HAT mean sea level, metres. gen_fhd Data frame objects, flight height distributions (fhd) species - relative frequency distribution bird flights 1-metre height intervals sea surface. Specifically: gen_fhd, Data frame species' generic fhd derived combining wider survey data. required model Options 2 3 site_fhd, Data frame species' site-specific fhd derived local survey data. required model Option 4 Data frames must contain following named columns: height, integers representing height bands sea surface, metres. Function expects 0 first value, representing 0-1m band. prop, proportion flights height band. site_fhd Data frame objects, flight height distributions (fhd) species - relative frequency distribution bird flights 1-metre height intervals sea surface. Specifically: gen_fhd, Data frame species' generic fhd derived combining wider survey data. required model Options 2 3 site_fhd, Data frame species' site-specific fhd derived local survey data. required model Option 4 Data frames must contain following named columns: height, integers representing height bands sea surface, metres. Function expects 0 first value, representing 0-1m band. prop, proportion flights height band. lrg_arr_corr Boolean value. TRUE, large array correction applied. correction factor account decay bird density later rows wind farms large array turbines. xinc numeric values, increments along y-axis x-axis numerical integration across segments rotor circle. Chosen values express proportion rotor radius. default set 0.05, .e. integration performed resolution one twentieth rotor radius. yinc numeric values, increments along y-axis x-axis numerical integration across segments rotor circle. Chosen values express proportion rotor radius. default set 0.05, .e. integration performed resolution one twentieth rotor radius. seed Integer, random seed random number generation, analysis reproducibility. verbose Logical, print model run progress console? out_format Output format specification. Possible values : \"draws\": returns stochastic draws collisions estimates (default value), \"summaries\": returns summary statistics collisions estimates. out_sampled_pars Logical, whether output summary statistics values sampled stochastic model parameter. out_period Controls level temporal aggregation collision outputs. Possible values : \"months\": monthly collisions (default value), \"seasons\": collisions per user-defined season, \"annum\": total collisions 12 months. season_specs required out_period = \"seasons\", data frame defining seasons aggregating collision estimates. must comprise following columns: season_id, (unique) season identifier, start_month, name season's first month, end_month, name season's last month. popn_estim_pars single row data frame columns mean sd. population estimate species expected fly wind farm area. fn character string specifying parent function whose inputs checked: \"scrm\": checks stoch_crm() inputs \"crm\": checks band_crm() inputs \"mcrm\": checks mig_stoch_crm() inputs","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/validate_inputs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Input validator ‚Äî validate_inputs","text":"","code":"validate_inputs(model_options=c(1),                avoid_bsc_pars=data.frame(mean=0.99,sd=0.001),                prop_crh_pars=data.frame(mean=0.01,sd=0.01),                air_gap_pars = data.frame(mean=21,sd=0),                rtr_radius_pars = data.frame(mean=100,sd=0),                bld_pitch_pars = data.frame(mean=15,sd=0),                rtn_pitch_opt = \"probDist\",                rtn_speed_pars = data.frame(mean=14,sd=5),                out_period = \"months\",                lrg_arr_corr = TRUE,                fn=\"scrm\")"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/wndspd_rtn_ptch_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Example of data with relationship between wind speed, rotation speed and\nblade pitch ‚Äî wndspd_rtn_ptch_example","title":"Example of data with relationship between wind speed, rotation speed and\nblade pitch ‚Äî wndspd_rtn_ptch_example","text":"Intended illustrate application stoch_scrm()","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/wndspd_rtn_ptch_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example of data with relationship between wind speed, rotation speed and\nblade pitch ‚Äî wndspd_rtn_ptch_example","text":"","code":"wndspd_rtn_ptch_example"},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/reference/wndspd_rtn_ptch_example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example of data with relationship between wind speed, rotation speed and\nblade pitch ‚Äî wndspd_rtn_ptch_example","text":"30 x 3 data frame columns: wind_speed Wind speed metres per second. rtn_speed Blade rotation speed, revolutions per minute bld_pitch Blade pitch, degrees","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/news/index.html","id":"stochlab-100","dir":"Changelog","previous_headings":"","what":"stochLAB 1.0.0","title":"stochLAB 1.0.0","text":"First full launch package ready submission CRAN ROpenSci Major push unit tests updated major functions package Continuous integration tests incorporated Github actions Badges added continuous integration Unit tests run passed","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/news/index.html","id":"stochlab-031","dir":"Changelog","previous_headings":"","what":"stochLAB 0.3.1","title":"stochLAB 0.3.1","text":"Fixed issue seq_month() working different system languages Cleaning organizing data structure submission CRAN / Ropensci","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/news/index.html","id":"stochlab-030","dir":"Changelog","previous_headings":"","what":"stochLAB 0.3.0","title":"stochLAB 0.3.0","text":"Restructure mig_stoch_crm() function line stoch_crm() Added mig_stoch_crm example Added data validation mig_stoch_crm cli outputs Added seed number examples replication","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/news/index.html","id":"stochlab-022","dir":"Changelog","previous_headings":"","what":"stochLAB 0.2.2","title":"stochLAB 0.2.2","text":"band_crm() example added vignette Conditional added hd_sampler() deal 0 mean values prevent NAs","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/news/index.html","id":"stochlab-021","dir":"Changelog","previous_headings":"","what":"stochLAB 0.2.1","title":"stochLAB 0.2.1","text":"Several unused data files removed cleaned man/ Merge conflicts 0.2.0 cleaned Old scripts previous versions longer used removed Johnston et al flight height spreadsheet SOSS project included","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/news/index.html","id":"stochlab-020","dir":"Changelog","previous_headings":"","what":"stochLAB 0.2.0","title":"stochLAB 0.2.0","text":"Massive commit first full working version stochLAB stoch_crm() stoch_crm() function completely re-wired work individual arguments rather data sheet option 3 model code optimized speed cli package incorporated well data checks validation throughout","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/news/index.html","id":"stochlab-013","dir":"Changelog","previous_headings":"","what":"stochLAB 0.1.3","title":"stochLAB 0.1.3","text":"Added function get flux factor migration CRM","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/news/index.html","id":"stochlab-012","dir":"Changelog","previous_headings":"","what":"stochLAB 0.1.2","title":"stochLAB 0.1.2","text":"Added check 0s number turbines migration CRM. Added foreach package DESCRIPTION fixed bug line sampling","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/news/index.html","id":"stochlab-011","dir":"Changelog","previous_headings":"","what":"stochLAB 0.1.1","title":"stochLAB 0.1.1","text":"Added function run migration collision risk models","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/news/index.html","id":"stochlab-010","dir":"Changelog","previous_headings":"","what":"stochLAB 0.1.0","title":"stochLAB 0.1.0","text":"First large commit changes original Masden & Cook implementation Restructured much original code streamline flux calculations, probability collision Unit tests incorporated ensure agreement Band spreadsheet outputs Model options broken discrete functions","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/news/index.html","id":"stochlab-002","dir":"Changelog","previous_headings":"","what":"stochLAB 0.0.2","title":"stochLAB 0.0.2","text":"Created first iteration Band option 1 2 functions Fixed issues variable names","code":""},{"path":"https://hidef-aerial-surveying.github.io/stochLAB/news/index.html","id":"stochlab-001-july-15-2021","dir":"Changelog","previous_headings":"","what":"stochLAB 0.0.1 July 15 2021","title":"stochLAB 0.0.1 July 15 2021","text":"First development version Initial commit first cleanup original Masden Cook functions","code":""}]
